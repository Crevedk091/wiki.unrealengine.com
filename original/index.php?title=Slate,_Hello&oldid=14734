<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<meta charset="UTF-8" /><title>Slate, Hello - Epic Wiki</title>
<meta name="generator" content="MediaWiki 1.22.2" />
<meta name="robots" content="noindex,nofollow" />
<link rel="shortcut icon" href="/favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="/opensearch_desc.php" title="Epic Wiki (en)" />
<link rel="EditURI" type="application/rsd+xml" href="https://wiki.unrealengine.com/api.php?action=rsd" />
<link rel="alternate" type="application/atom+xml" title="Epic Wiki Atom feed" href="/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="stylesheet" href="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.legacy.commonPrint%2Cshared%7Cskins.vector&amp;only=styles&amp;skin=epic&amp;*" />
<link rel="stylesheet" href="/extensions/EpicVideoSystem/CSS/VideoSystem.css" />
<link rel="stylesheet" href="/skins/epic/resources/screen.css?303" media="screen" />
<link rel="stylesheet" href="/skins/epic/resources/epic.css?303" media="screen" />
<link rel="stylesheet" href="/skins/epic/resources/prettify.css?303" media="screen" />
<link rel="stylesheet" href="/skins/epic/resources/jquery.qtip.css?303" media="screen" /><meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=epic&amp;*" />
<style>a:lang(ar),a:lang(ckb),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}
/* cache key: my_wiki:resourceloader:filter:minify-css:7:07b6a8ccf3fd62e770f192d0a6f8e123 */</style>

<script src="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=epic&amp;*"></script>
<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Slate,_Hello","wgTitle":"Slate, Hello","wgCurRevisionId":24580,"wgRevisionId":14734,"wgArticleId":777,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Templates","Tutorials","Code","Community Created Content"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Slate,_Hello","wgIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgWikiEditorEnabledModules":{"toolbar":true,"dialogs":true,"hidesig":true,"templateEditor":false,"templates":false,"preview":true,"previewDialog":false,"publish":true,"toc":false}});
}</script><script>if(window.mw){
mw.loader.implement("user.options",function(){mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"epic","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"vector-simplesearch":1,"watchcreations":0,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,"watchlisthidebots":0,
"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"useeditwarning":1,"prefershttps":1,"usebetatoolbar":1,"usebetatoolbar-cgd":1,"wikieditor-preview":1,"wikieditor-publish":1,"language":"en","variant-gan":"gan","variant-iu":"iu","variant-kk":"kk","variant-ku":"ku","variant-shi":"shi","variant-sr":"sr","variant-tg":"tg","variant-uz":"uz","variant-zh":"zh","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false,"variant":"en"});},{},{});mw.loader.implement("user.tokens",function(){mw.user.tokens.set({"editToken":"+\\","patrolToken":false,"watchToken":false});},{},{});
/* cache key: my_wiki:resourceloader:filter:minify-js:7:2197af7670c41256853f340e275ede1b */
}</script>
<script src="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=skins.epic.extras.js%7Cskins.epic.fancybox.js%7Cskins.epic.js%7Cskins.epic.qtip.js%7Cskins.epic.slimscroll.js&amp;only=scripts&amp;skin=epic&amp;*"></script>
<script>if(window.mw){
mw.loader.load(["ext.voteNY","mediawiki.page.startup","mediawiki.legacy.wikibits","mediawiki.legacy.ajax","skins.vector.js"]);
}</script>
<style type="text/css">/*<![CDATA[*/
.source-cpp {line-height: normal;}
.source-cpp li, .source-cpp pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for cpp
 * CSS class: source-cpp, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.cpp.source-cpp .de1, .cpp.source-cpp .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.cpp.source-cpp  {font-family:monospace;}
.cpp.source-cpp .imp {font-weight: bold; color: red;}
.cpp.source-cpp li, .cpp.source-cpp .li1 {font-weight: normal; vertical-align:top;}
.cpp.source-cpp .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.cpp.source-cpp .li2 {font-weight: bold; vertical-align:top;}
.cpp.source-cpp .kw1 {color: #0000ff;}
.cpp.source-cpp .kw2 {color: #0000ff;}
.cpp.source-cpp .kw3 {color: #0000dd;}
.cpp.source-cpp .kw4 {color: #0000ff;}
.cpp.source-cpp .co1 {color: #666666;}
.cpp.source-cpp .co2 {color: #339900;}
.cpp.source-cpp .coMULTI {color: #ff0000; font-style: italic;}
.cpp.source-cpp .es0 {color: #000099; font-weight: bold;}
.cpp.source-cpp .es1 {color: #000099; font-weight: bold;}
.cpp.source-cpp .es2 {color: #660099; font-weight: bold;}
.cpp.source-cpp .es3 {color: #660099; font-weight: bold;}
.cpp.source-cpp .es4 {color: #660099; font-weight: bold;}
.cpp.source-cpp .es5 {color: #006699; font-weight: bold;}
.cpp.source-cpp .br0 {color: #008000;}
.cpp.source-cpp .sy0 {color: #008000;}
.cpp.source-cpp .sy1 {color: #000080;}
.cpp.source-cpp .sy2 {color: #000040;}
.cpp.source-cpp .sy3 {color: #000040;}
.cpp.source-cpp .sy4 {color: #008080;}
.cpp.source-cpp .st0 {color: #FF0000;}
.cpp.source-cpp .nu0 {color: #0000dd;}
.cpp.source-cpp .nu6 {color: #208080;}
.cpp.source-cpp .nu8 {color: #208080;}
.cpp.source-cpp .nu12 {color: #208080;}
.cpp.source-cpp .nu16 {color:#800080;}
.cpp.source-cpp .nu17 {color:#800080;}
.cpp.source-cpp .nu18 {color:#800080;}
.cpp.source-cpp .nu19 {color:#800080;}
.cpp.source-cpp .me1 {color: #007788;}
.cpp.source-cpp .me2 {color: #007788;}
.cpp.source-cpp .ln-xtra, .cpp.source-cpp li.ln-xtra, .cpp.source-cpp div.ln-xtra {background-color: #ffc;}
.cpp.source-cpp span.xtra { display:block; }

/*]]>*/
</style><!--[if lt IE 7]><style type="text/css">body{behavior:url("/skins/epic/csshover.min.htc")}</style><![endif]--><script type="text/javascript">
var experimentID = false;
var cxApi = null;
var variation = 0;
var fancyTitle = "";
var CE_SNAPSHOT_NAME = document.getElementsByTagName("title")[0].innerHTML;
$(document).ready(function(){
	if(experimentID != false)
	{
		$(head).append('<script src="//www.google-analytics.com/cx/api.js?experiment=' + experimentID + '" />' + '</scr' + 'ipt>');
		HandleExperiment();
	}
	else
	{
		CE_SNAPSHOT_NAME = (fancyTitle != "" ? fancyTitle : document.getElementsByTagName("title")[0].innerHTML);
		setTimeout(function () {
			var a = document.createElement("script");
			var b = document.getElementsByTagName("script")[0];
			a.src = document.location.protocol + "//script.crazyegg.com/pages/scripts/0028/4572.js?" + Math.floor(new Date().getTime() / 3600000);
			a.async = true; a.type = "text/javascript"; b.parentNode.insertBefore(a, b)
		}, 1);	
	}
});
function HandleExperiment()
{
	CE_SNAPSHOT_NAME = (fancyTitle != "" ? fancyTitle : document.getElementsByTagName("title")[0].innerHTML);
	if(cxApi != null)
	{
		variation = cxApi.chooseVariation();
		cxApi.setChosenVariation(variation, experimentID);
		if(variation != cxApi.ORIGINAL_VARIATION && variation != cxApi.NO_CHOSEN_VARIATION && variation != cxApi.NOT_PARTICIPATING)
		{
			//var URL = document.location.href + (document.location.search != '' ? '&var=' : '?var=') + variation;
			ga('send', 'event', 'A/B', 'ID: ' + experimentID, 'Variation: ' + variation, {'nonInteraction': 1});
			//document.location.href = URL; 
			CE_SNAPSHOT_NAME = document.getElementsByTagName("title")[0].innerHTML + ' (variation ' + variation + ')';
			var test = "";
		}
		else
		{
			ga('send', 'event', 'A/B', 'ID: ' + experimentID, 'Variation: ' + variation, {'nonInteraction': 1});
		}
		ToggleExperimentContent(variation);
		setTimeout(function () {
			var a = document.createElement("script");
			var b = document.getElementsByTagName("script")[0];
			a.src = document.location.protocol + "//script.crazyegg.com/pages/scripts/0028/4572.js?" + Math.floor(new Date().getTime() / 3600000);
			a.async = true; a.type = "text/javascript"; b.parentNode.insertBefore(a, b)
		}, 1);
	}
	else
	{
		setTimeout("HandleExperiment()", 500);
	}
}

function ToggleExperimentContent(variation)
{
	$('.AB').hide();
	$('#variation_' + variation).show();
}
</script></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Slate_Hello skin-epic action-view vector-animateLayout">
		<!--<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>-->
		<!-- Google Tag Manager -->
		<noscript>
			<iframe src="//www.googletagmanager.com/ns.html?id=GTM-KWRD6D"
					height="0" width="0" style="display:none;visibility:hidden"></iframe>
		</noscript>
		<script>
		(function (w, d, s, l, i) {
		w[l] = w[l] || []; w[l].push({
		'gtm.start':
		new Date().getTime(), event: 'gtm.js'
		}); var f = d.getElementsByTagName(s)[0],
		j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : ''; j.async = true; j.src =
		'//www.googletagmanager.com/gtm.js?id=' + i + dl; f.parentNode.insertBefore(j, f);
		})(window, document, 'script', 'dataLayer', 'GTM-KWRD6D');</script>
		<!-- End Google Tag Manager -->
		<div id="webThree">
		<div id="head"></div>
		<div id="pagedefault">		
                    <div id="pagenav">
                        <div>
                            <!-- Start of Other language links -->
                            <!-- End of Other language links -->
                            <div class="homelink_container">
                                <a href="https://wiki.unrealengine.com" title="UE4 Wiki Home" class="homelink">HOME</a>
                            </div>
                        </div>
                        <div style="clear:both;">
                        </div>
                    </div>	
		<div id="mw-navigation" style="max-width:972px;margin:1em auto 0 auto;">
			<h2>Navigation menu</h2>
			<div id="mw-head">
				<div id="jumplink" onclick="$('#sidebar').toggle();">
					Navigation
				</div>
				<div id="sidebar">
					<!-- Start of jump page links -->
					<div class="largetitle">
						Quick Links
					</div>
					<div class="arrowlist">
						<!-- End of jump page links -->
						<!-- Start of related page links -->
						<!-- End of related page links -->								
						<div id="mw-panel">
							<div class="portal" role="navigation" id='p-navigation' aria-labelledby='p-navigation-label'>
	<h3 id='p-navigation-label'>Navigation</h3>
	<div class="body">
		<ul>
			<li id="n-mainpage-description"><a href="/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
			<li id="n-recentchanges"><a href="/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
			<li id="n-randompage"><a href="/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-Community' aria-labelledby='p-Community-label'>
	<h3 id='p-Community-label'>Community</h3>
	<div class="body">
		<ul>
			<li id="n-UE4-Games"><a href="/Category:Games">UE4 Games</a></li>
			<li id="n-Dev-Blogs"><a href="/Developer_Blogs">Dev Blogs</a></li>
			<li id="n-Dev-Livestreams"><a href="/Developer_Livestreams">Dev Livestreams</a></li>
			<li id="n-Code-Sharing-Hub"><a href="/GitHub_Sharing_Hub">Code Sharing Hub</a></li>
			<li id="n-UE-User-Groups"><a href="/User_Group_Map">UE User Groups</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-Learning_Resources' aria-labelledby='p-Learning_Resources-label'>
	<h3 id='p-Learning_Resources-label'>Learning Resources</h3>
	<div class="body">
		<ul>
			<li id="n-Tutorials"><a href="/Category:Tutorials">Tutorials</a></li>
			<li id="n-Example-Projects"><a href="/Category:Example_Projects">Example Projects</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-Software_and_Tools' aria-labelledby='p-Software_and_Tools-label'>
	<h3 id='p-Software_and_Tools-label'>Software and Tools</h3>
	<div class="body">
		<ul>
			<li id="n-Plug-ins"><a href="/Category:Plug-ins">Plug-ins</a></li>
			<li id="n-Art:-3D"><a href="/3D_Art_Resources">Art: 3D</a></li>
			<li id="n-Art:-2D"><a href="/2D_Art_Resources">Art: 2D</a></li>
			<li id="n-Audio"><a href="/Audio_Resources">Audio</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-Modding' aria-labelledby='p-Modding-label'>
	<h3 id='p-Modding-label'>Modding</h3>
	<div class="body">
		<ul>
			<li id="n-Modding-Resources"><a href="/Category:Modding_Resources">Modding Resources</a></li>
			<li id="n-Moddable-Games"><a href="/Category:Moddable_Games">Moddable Games</a></li>
			<li id="n-Unreal-Tournament"><a href="/Category:Unreal_Tournament">Unreal Tournament</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-Epic_Official' aria-labelledby='p-Epic_Official-label'>
	<h3 id='p-Epic_Official-label'>Epic Official</h3>
	<div class="body">
		<ul>
			<li id="n-Website"><a href="https://www.unrealengine.com" rel="nofollow">Website</a></li>
			<li id="n-Learning-Resources"><a href="https://docs.unrealengine.com/latest/INT/" rel="nofollow">Learning Resources</a></li>
			<li id="n-Forums"><a href="https://forums.unrealengine.com/" rel="nofollow">Forums</a></li>
			<li id="n-Blog"><a href="https://www.unrealengine.com/blog" rel="nofollow">Blog</a></li>
			<li id="n-YouTube"><a href="https://www.youtube.com/UnrealEngine" rel="nofollow">YouTube</a></li>
			<li id="n-Twitch"><a href="http://www.twitch.tv/unrealengine" rel="nofollow">Twitch</a></li>
			<li id="n-Twitter"><a href="https://twitter.com/UnrealEngine" rel="nofollow">Twitter</a></li>
			<li id="n-Facebook"><a href="https://www.facebook.com/UnrealEngine" rel="nofollow">Facebook</a></li>
			<li id="n-Instagram"><a href="https://instagram.com/unrealengine/" rel="nofollow">Instagram</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-tb' aria-labelledby='p-tb-label'>
	<h3 id='p-tb-label'>Tools</h3>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="/Special:WhatLinksHere/Slate,_Hello" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="/Special:RecentChangesLinked/Slate,_Hello" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-specialpages"><a href="/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li id="t-print"><a href="/index.php?title=Slate,_Hello&amp;oldid=14734&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>
			<li id="t-permalink"><a href="/index.php?title=Slate,_Hello&amp;oldid=14734" title="Permanent link to this revision of the page">Permanent link</a></li>
			<li id="t-info"><a href="/index.php?title=Slate,_Hello&amp;action=info">Page information</a></li>
		</ul>
	</div>
</div>
						</div>
					</div>
				</div>				
				<div id="left-navigation">
					<div id="p-namespaces" role="navigation" class="vectorTabs" aria-labelledby="p-namespaces-label">
	<h3 id="p-namespaces-label">Namespaces</h3>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="/Slate,_Hello"  title="View the content page [c]" accesskey="c">Page</a></span></li>
					<li  id="ca-talk"><span><a href="/Talk:Slate,_Hello"  title="Discussion about the content page [t]" accesskey="t">Discussion</a></span></li>
			</ul>
</div>
<div id="p-variants" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-variants-label">
	<h3 id="mw-vector-current-variant">
		</h3>
	<h3 id="p-variants-label"><span>Variants</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
				</div>
				<div id="right-navigation">
					<div id="p-views" role="navigation" class="vectorTabs" aria-labelledby="p-views-label">
	<h3 id="p-views-label">Views</h3>
	<ul>
					<li id="ca-view" class="selected"><span><a href="/Slate,_Hello" >View</a></span></li>
					<li id="ca-viewsource"><span><a href="/index.php?title=Slate,_Hello&amp;action=edit&amp;oldid=14734"  title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="/index.php?title=Slate,_Hello&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">History</a></span></li>
			</ul>
</div>
<div id="p-cactions" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-cactions-label">
	<h3 id="p-cactions-label"><span>Actions</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
<div id="p-personal" role="navigation" class="" aria-labelledby="p-personal-label">
	<h3 id="p-personal-label">Personal tools</h3>
	<ul>
<li id="pt-createaccount"><a href="/index.php?title=Special:UserLogin&amp;returnto=Slate%2C+Hello&amp;returntoquery=oldid%3D14734&amp;type=signup">Create account</a></li><li id="pt-login"><a href="/index.php?title=Special:UserLogin&amp;returnto=Slate%2C+Hello&amp;returntoquery=oldid%3D14734" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>	</ul>
</div>
				</div>
			</div>
		</div>
		<div id="maincol">
		<div class="mw-body" role="main">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<!-- Start of crumbs links -->
			<div class="crumbs">
			<p>
							</p>
			</div>
			<!-- End of crumbs links -->
			<h1 id="firstHeading" class="firstHeading" lang="en"><span dir="auto">Slate, Hello</span></h1>
			<div id="bodyContent">
				<div id="contentSub"><div id="mw-revision-info">Revision as of 18:18, 18 July 2015 by <a href="/index.php?title=User:Katianie&amp;action=edit&amp;redlink=1" class="new mw-userlink" title="User:Katianie (page does not exist)">Katianie</a>  <span class="mw-usertoollinks">(<a href="/index.php?title=User_talk:Katianie&amp;action=edit&amp;redlink=1" class="new" title="User talk:Katianie (page does not exist)">Talk</a> | <a href="/Special:Contributions/Katianie" title="Special:Contributions/Katianie">contribs</a>)</span></div><br />
				<div id="mw-revision-nav">(<a href="/index.php?title=Slate,_Hello&amp;diff=prev&amp;oldid=14734" title="Slate, Hello">diff</a>) <a href="/index.php?title=Slate,_Hello&amp;direction=prev&amp;oldid=14734" title="Slate, Hello">← Older revision</a> | <a href="/Slate,_Hello" title="Slate, Hello">Latest revision</a> (<a href="/index.php?title=Slate,_Hello&amp;diff=cur&amp;oldid=14734" title="Slate, Hello">diff</a>) | <a href="/index.php?title=Slate,_Hello&amp;direction=next&amp;oldid=14734" title="Slate, Hello">Newer revision →</a> (<a href="/index.php?title=Slate,_Hello&amp;diff=next&amp;oldid=14734" title="Slate, Hello">diff</a>)</div></div>
																<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><div class="aux">
<div>
<b>Rate this Article:</b> <div id="rating_"><div class="rating-score"><div class="voteboxrate">4.33</div></div><div class="rating-section"><img class="vote-rating-star" data-vote-the-vote="1" data-vote-id="" data-vote-action="3" data-vote-rating="4.33" data-vote-voted="0" id="rating__1" src="/extensions/VoteNY/images/star_on.gif" alt="" /><img class="vote-rating-star" data-vote-the-vote="2" data-vote-id="" data-vote-action="3" data-vote-rating="4.33" data-vote-voted="0" id="rating__2" src="/extensions/VoteNY/images/star_on.gif" alt="" /><img class="vote-rating-star" data-vote-the-vote="3" data-vote-id="" data-vote-action="3" data-vote-rating="4.33" data-vote-voted="0" id="rating__3" src="/extensions/VoteNY/images/star_on.gif" alt="" /><img class="vote-rating-star" data-vote-the-vote="4" data-vote-id="" data-vote-action="3" data-vote-rating="4.33" data-vote-voted="0" id="rating__4" src="/extensions/VoteNY/images/star_on.gif" alt="" /><img class="vote-rating-star" data-vote-the-vote="5" data-vote-id="" data-vote-action="3" data-vote-rating="4.33" data-vote-voted="0" id="rating__5" src="/extensions/VoteNY/images/star_half.gif" alt="" /> <span class="rating-total">(6 votes)</span></div>
				<div class="rating-clear">
			</div></div>
</div>
<div>
<p>Approved for Versions:4.8
</p>
</div>
</div>
<div style="background-color: #fff5cd; border: 1px solid #FF7400; border-left: 5px solid #FF7400; padding: 5px; min-height: 40px;">
<div class="floatleft"><img alt="Note" src="https://d26ilriwvtzlb.cloudfront.net/a/a5/Icon_template_note1.png" width="30" height="35" /></div> <b>Some or all of the information on this page is inconsistent, irrelevant or confusing.</b>
<p>Please help clean it up if you are able.
</p>
</div><div class="thumb tright"><div class="thumbinner" style="width:402px;"><a href="/File:Hello_slate.png" class="image"><img alt="" src="https://d3ar1piqh1oeli.cloudfront.net/3/38/Hello_slate.png/400px-Hello_slate.png" width="400" height="232" class="thumbimage" srcset="https://d3ar1piqh1oeli.cloudfront.net/3/38/Hello_slate.png/600px-Hello_slate.png 1.5x, https://d3ar1piqh1oeli.cloudfront.net/3/38/Hello_slate.png/800px-Hello_slate.png 2x" /></a>  <div class="thumbcaption"><div class="magnify"><a href="/File:Hello_slate.png" class="internal" title="Enlarge"><img src="/skins/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>Hello Slate!</div></div></div>
<p>This tutorial assumes an intermediate understanding of C++ and event driven systems. It will give you a basic introduction to adding HUD capable of rendering Slate Widgets. In line with ancient tradition, the Slate Widget will render a text-box displaying the message "Hello, Slate!". Aside from the sources, there are a several steps involved in setting up a project that can handle Slate Widgets. Some things that may be glaringly obvious to someone with experience might be glazed over that aren't as obvious to someone just learning C. If you're having trouble, there is a start-to-finish video walk-through.
</p><p>Update 4.8 (Katianie 6/14/2015): I am modifying this tutorial to reflect the changes in Unreal 4.8. I followed this tutorial a few hours ago and I noticed that about half the stuff that was mentioned has been changed.
</p>
<div id="toc" class="toc"><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Creating_a_project"><span class="tocnumber">1</span> <span class="toctext">Creating a project</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Allow_C.2B.2B_Access_to_Slate_API_by_Modifying_Build_File"><span class="tocnumber">2</span> <span class="toctext">Allow C++ Access to Slate API by Modifying Build File</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#Creating_a_new_Slate_Widget_class"><span class="tocnumber">3</span> <span class="toctext">Creating a new Slate Widget class</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="#Further_Reading"><span class="tocnumber">4</span> <span class="toctext">Further Reading</span></a></li>
</ul>
</div>

<h2><span class="mw-headline" id="Creating_a_project">Creating a project</span></h2>
<p>If you have not done so already the first thing to do is to create a blank C++ project. For the purpose of this tutorial, it is recommended that you have "Include Starter Content" unticked. This tutorial will use the project name HelloSlate, however you can call it anything of your own choosing as long as you're comfortable with making the appropriate changes to the provided source files. For beginners I would suggest that you do not diverge from the provided example.
</p>
<ul class="gallery mw-gallery-traditional">
		<li class="gallerybox" style="width: 155px"><div style="width: 155px">
			<div class="thumb" style="width: 150px;"><div style="margin:41px auto;"><a href="/File:File_add_code_to_project.png" class="image"><img alt="" src="https://d3ar1piqh1oeli.cloudfront.net/c/cd/File_add_code_to_project.png/120px-File_add_code_to_project.png" width="120" height="68" /></a></div></div>
			<div class="gallerytext">
<p>Add Code
</p>
			</div>
		</div></li>
		<li class="gallerybox" style="width: 155px"><div style="width: 155px">
			<div class="thumb" style="width: 150px;"><div style="margin:40px auto;"><a href="/File:Choose_parent_class_hud.png" class="image"><img alt="" src="https://d3ar1piqh1oeli.cloudfront.net/5/53/Choose_parent_class_hud.png/120px-Choose_parent_class_hud.png" width="120" height="70" /></a></div></div>
			<div class="gallerytext">
<p>Choose HUD
</p>
			</div>
		</div></li>
		<li class="gallerybox" style="width: 155px"><div style="width: 155px">
			<div class="thumb" style="width: 150px;"><div style="margin:40px auto;"><a href="/File:Name_your_new_hud.png" class="image"><img alt="" src="https://d3ar1piqh1oeli.cloudfront.net/3/37/Name_your_new_hud.png/120px-Name_your_new_hud.png" width="120" height="70" /></a></div></div>
			<div class="gallerytext">
<p>Name HUD
</p>
			</div>
		</div></li>
</ul>
<p>You can do the above or you can manually create the the four files that we will need:
</p>
<ul>
<li> StandardHUD.h
</li>
<li> StandardHUD.cpp
</li>
<li> StandardSlateWidget.h
</li>
<li> StandardSlateWidget.cpp
</li>
</ul>
<h2><span class="mw-headline" id="Allow_C.2B.2B_Access_to_Slate_API_by_Modifying_Build_File">Allow C++ Access to Slate API by Modifying Build File</span></h2>
<p>Open the HelloSltate.Build.cs file and modify it to allow Slate:
<br />
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="co1">// Fill out your copyright notice in the Description page of Project Settings.</span>
<span class="kw2">using</span> UnrealBuildTool<span class="sy4">;</span>
&#160;
<span class="kw2">public</span> <span class="kw2">class</span> HelloSlate <span class="sy4">:</span> ModuleRules
<span class="br0">&#123;</span>
	<span class="kw2">public</span> HelloSlate<span class="br0">&#40;</span>TargetInfo Target<span class="br0">&#41;</span>
	<span class="br0">&#123;</span>
		PublicDependencyModuleNames.<span class="me1">AddRange</span><span class="br0">&#40;</span><span class="kw3">new</span> string<span class="br0">&#91;</span><span class="br0">&#93;</span> <span class="br0">&#123;</span> <span class="st0">&quot;Core&quot;</span>, <span class="st0">&quot;CoreUObject&quot;</span>, <span class="st0">&quot;Engine&quot;</span>, <span class="st0">&quot;InputCore&quot;</span> <span class="br0">&#125;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
		PrivateDependencyModuleNames.<span class="me1">AddRange</span><span class="br0">&#40;</span><span class="kw3">new</span> string<span class="br0">&#91;</span><span class="br0">&#93;</span> <span class="br0">&#123;</span>  <span class="br0">&#125;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
		<span class="co1">// Uncomment if you are using Slate UI</span>
		PrivateDependencyModuleNames.<span class="me1">AddRange</span><span class="br0">&#40;</span><span class="kw3">new</span> string<span class="br0">&#91;</span><span class="br0">&#93;</span> <span class="br0">&#123;</span> <span class="st0">&quot;Slate&quot;</span>, <span class="st0">&quot;SlateCore&quot;</span> <span class="br0">&#125;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
		<span class="co1">// Uncomment if you are using online features</span>
		<span class="co1">// PrivateDependencyModuleNames.Add(&quot;OnlineSubsystem&quot;);</span>
		<span class="co1">// if ((Target.Platform == UnrealTargetPlatform.Win32) || (Target.Platform == UnrealTargetPlatform.Win64))</span>
		<span class="co1">// {</span>
		<span class="co1">//		if (UEBuildConfiguration.bCompileSteamOSS == true)</span>
		<span class="co1">//		{</span>
		<span class="co1">//			DynamicallyLoadedModuleNames.Add(&quot;OnlineSubsystemSteam&quot;);</span>
		<span class="co1">//		}</span>
		<span class="co1">// }</span>
	<span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre></div></div>
<p>Save and close, next time you build your project your sources can link to the Slate API.
</p>
<h2><span class="mw-headline" id="Creating_a_new_Slate_Widget_class">Creating a new Slate Widget class</span></h2>
<p>All together this project spans 4 source files. These files should now be created but are blank. Below Is the code behind each file. The StandardHUD class is basically just copy paste a default HUD. The Widget files ("What the hell's a Widget!?" -Rodney Dangerfield) aka The Slate Widget is a custom Slate GUI component. The widget is where we will display "Hello Slate!".
</p><p>The four source files are:
</p>
<ul>
<li> StandardHUD.h
</li>
<li> StandardHUD.cpp
</li>
<li> StandardSlateWidget.h
</li>
<li> StandardSlateWidget.cpp
</li>
</ul>
<p>As you might be aware of already, when you create .cpp and .h files manually, Unreal puts the files in the intermediate folder. Make sure your files are in the source folder like they should be.
</p><p><b>StandardHUD.h:</b>
<br />
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="co1">// Fill out your copyright notice in the Description page of Project Settings.</span>
<span class="co2">#pragma once</span>
<span class="co2">#include &quot;GameFramework/HUD.h&quot;</span>
<span class="co2">#include &quot;StandardHUD.generated.h&quot;</span>
&#160;
<span class="kw2">class</span> SStandardSlateWidget<span class="sy4">;</span>
&#160;
UCLASS<span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="kw2">class</span> AStandardHUD <span class="sy4">:</span> <span class="kw2">public</span> AHUD
<span class="br0">&#123;</span>
	GENERATED_BODY<span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="kw2">public</span><span class="sy4">:</span>
	AStandardHUD<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
	<span class="co1">////////////////////////////////////////////////////////////////////////////////////////////////////</span>
	<span class="co1">/////Reference to an SCompoundWidget, TSharedPtr adds to the refcount of MyUIWidget</span>
	<span class="co1">/////MyUIWidget will not self-destruct as long as refcount &gt; 0</span>
	<span class="co1">/////MyUIWidget refcount will be (refcout-1) if HUD is destroyed.</span>
	TSharedPtr<span class="sy1">&lt;</span>SStandardSlateWidget<span class="sy1">&gt;</span> MyUIWidget<span class="sy4">;</span>
&#160;
	<span class="co1">////////////////////////////////////////////////////////////////////////////////////////////////////</span>
	<span class="co1">/////Called as soon as game starts, create SCompoundWidget and give Viewport access</span>
	<span class="kw4">void</span> BeginPlay<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
<span class="br0">&#125;</span><span class="sy4">;</span></pre></div></div>
<p><b>StandardHUD.cpp:</b>
<br />
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="co1">// Fill out your copyright notice in the Description page of Project Settings.</span>
&#160;
<span class="co2">#include &quot;HelloSlate.h&quot;</span>
<span class="co2">#include &quot;StandardSlateWidget.h&quot;</span>
<span class="co2">#include &quot;StandardHUD.h&quot;</span>
&#160;
AStandardHUD<span class="sy4">::</span><span class="me2">AStandardHUD</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>
&#160;
<span class="br0">&#125;</span>
&#160;
<span class="kw4">void</span> AStandardHUD<span class="sy4">::</span><span class="me2">BeginPlay</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>
	<span class="co1">////////////////////////////////////////////////////////////////////////////////////////////////////</span>
	<span class="co1">/////So far only TSharedPtr&lt;SMyUIWidget&gt; has been created, now create the actual object.</span>
	<span class="co1">/////Create a SMyUIWidget on heap, our MyUIWidget shared pointer provides handle to object</span>
	<span class="co1">/////Widget will not self-destruct unless the HUD's SharedPtr (and all other SharedPtrs) destruct first.</span>
	MyUIWidget <span class="sy1">=</span> SNew<span class="br0">&#40;</span>SStandardSlateWidget<span class="br0">&#41;</span>.<span class="me1">OwnerHUD</span><span class="br0">&#40;</span><span class="kw3">this</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
	<span class="co1">////////////////////////////////////////////////////////////////////////////////////////////////////</span>
	<span class="co1">/////Pass our viewport a weak ptr to our widget</span>
	<span class="co1">/////Viewport's weak ptr will not give Viewport ownership of Widget</span>
	GEngine<span class="sy2">-</span><span class="sy1">&gt;</span>GameViewport<span class="sy2">-</span><span class="sy1">&gt;</span>AddViewportWidgetContent<span class="br0">&#40;</span>SNew<span class="br0">&#40;</span>SWeakWidget<span class="br0">&#41;</span>.<span class="me1">PossiblyNullContent</span><span class="br0">&#40;</span>MyUIWidget.<span class="me1">ToSharedRef</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
	<span class="co1">////////////////////////////////////////////////////////////////////////////////////////////////////</span>
	<span class="co1">/////Set widget's properties as visible (sets child widget's properties recursively)</span>
	MyUIWidget<span class="sy2">-</span><span class="sy1">&gt;</span>SetVisibility<span class="br0">&#40;</span>EVisibility<span class="sy4">::</span><span class="me2">Visible</span><span class="br0">&#41;</span><span class="sy4">;</span>
<span class="br0">&#125;</span></pre></div></div>
<p><br />
<b>StandardSlateWidget.h:</b>
<br />
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="co1">//Copyright 1998-2014 Epic Games, Inc. All Rights Reserved.</span>
&#160;
<span class="co2">#pragma once</span>
<span class="co2">#include &quot;StandardHUD.h&quot;</span>
<span class="co2">#include &quot;SlateBasics.h&quot;</span>
&#160;
<span class="kw2">class</span> SStandardSlateWidget <span class="sy4">:</span> <span class="kw2">public</span> SCompoundWidget
<span class="br0">&#123;</span>
	SLATE_BEGIN_ARGS<span class="br0">&#40;</span>SStandardSlateWidget<span class="br0">&#41;</span><span class="br0">&#123;</span><span class="br0">&#125;</span>
&#160;
	<span class="coMULTI">/*See private declaration of OwnerHUD below.*/</span>
	SLATE_ARGUMENT<span class="br0">&#40;</span>TWeakObjectPtr<span class="sy1">&lt;</span><span class="kw2">class</span> AStandardHUD<span class="sy1">&gt;</span>, OwnerHUD<span class="br0">&#41;</span>
&#160;
	SLATE_END_ARGS<span class="br0">&#40;</span><span class="br0">&#41;</span>
&#160;
<span class="kw2">public</span><span class="sy4">:</span>
	<span class="co1">////////////////////////////////////////////////////////////////////////////////////////////////////</span>
	<span class="co1">/////Needed for every widget</span>
	<span class="co1">/////Builds this widget and any of it's children</span>
	<span class="kw4">void</span> Construct<span class="br0">&#40;</span><span class="kw4">const</span> FArguments<span class="sy3">&amp;</span> InArgs<span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
<span class="kw2">private</span><span class="sy4">:</span>
	<span class="co1">////////////////////////////////////////////////////////////////////////////////////////////////////</span>
	<span class="co1">/////Pointer to our parent HUD</span>
	<span class="co1">/////To make sure HUD's lifetime is controlled elsewhere, use &quot;weak&quot; ptr.</span>
	<span class="co1">/////HUD has &quot;strong&quot; pointer to Widget,</span>
	<span class="co1">/////circular ownership would prevent/break self-destruction of hud/widget (cause memory leak).</span>
	TWeakObjectPtr<span class="sy1">&lt;</span><span class="kw2">class</span> AStandardHUD<span class="sy1">&gt;</span> OwnerHUD<span class="sy4">;</span>
<span class="br0">&#125;</span><span class="sy4">;</span></pre></div></div>
<p><b>StandardSlateWidget.cpp:</b>
<br />
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="co2">#include &quot;HelloSlate.h&quot;</span>
<span class="co2">#include &quot;StandardSlateWidget.h&quot;</span>
<span class="co2">#include &quot;StandardHUD.h&quot;</span>
&#160;
<span class="co2">#define LOCTEXT_NAMESPACE &quot;SStandardSlateWidget&quot;</span>
&#160;
<span class="kw4">void</span> SStandardSlateWidget<span class="sy4">::</span><span class="me2">Construct</span><span class="br0">&#40;</span><span class="kw4">const</span> FArguments<span class="sy3">&amp;</span> InArgs<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
	OwnerHUD <span class="sy1">=</span> InArgs._OwnerHUD<span class="sy4">;</span>
&#160;
	<span class="co1">////////////////////////////////////////////////////////////////////////////////////////////////////</span>
	<span class="co1">/////If the code below doesn't look like C++ to you it's because it (sort-of) isn't,</span>
	<span class="co1">/////Slate makes extensive use of the C++ Prerocessor(macros) and operator overloading,</span>
	<span class="co1">/////Epic is trying to make our lives easier, look-up the macro/operator definitions to see why.</span>
	ChildSlot
	.<span class="me1">VAlign</span><span class="br0">&#40;</span>VAlign_Fill<span class="br0">&#41;</span>
	.<span class="me1">HAlign</span><span class="br0">&#40;</span>HAlign_Fill<span class="br0">&#41;</span>
	<span class="br0">&#91;</span>
		SNew<span class="br0">&#40;</span>SOverlay<span class="br0">&#41;</span>
		<span class="sy2">+</span>SOverlay<span class="sy4">::</span><span class="me2">Slot</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
		.<span class="me1">VAlign</span><span class="br0">&#40;</span>VAlign_Top<span class="br0">&#41;</span>
		.<span class="me1">HAlign</span><span class="br0">&#40;</span>HAlign_Center<span class="br0">&#41;</span>
		<span class="br0">&#91;</span>
			SNew<span class="br0">&#40;</span>STextBlock<span class="br0">&#41;</span>
			.<span class="me1">ShadowColorAndOpacity</span><span class="br0">&#40;</span>FLinearColor<span class="sy4">::</span><span class="me2">Black</span><span class="br0">&#41;</span>
			.<span class="me1">ColorAndOpacity</span><span class="br0">&#40;</span>FLinearColor<span class="sy4">::</span><span class="me2">Red</span><span class="br0">&#41;</span>
			.<span class="me1">ShadowOffset</span><span class="br0">&#40;</span>FIntPoint<span class="br0">&#40;</span><span class="sy2">-</span><span class="nu0">1</span>, <span class="nu0">1</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
                        .<span class="me1">Font</span><span class="br0">&#40;</span>FSlateFontInfo<span class="br0">&#40;</span><span class="st0">&quot;Veranda&quot;</span>, <span class="nu0">16</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
			.<span class="me1">Text</span><span class="br0">&#40;</span>LOCTEXT<span class="br0">&#40;</span><span class="st0">&quot;HelloSlate&quot;</span>, <span class="st0">&quot;Hello, Slate!&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
		<span class="br0">&#93;</span>
	<span class="br0">&#93;</span><span class="sy4">;</span>
<span class="br0">&#125;</span>
&#160;
<span class="co2">#undef LOCTEXT_NAMESPACE</span></pre></div></div>
<p><br />
Now, clean/rebuild your project, launch the Editor from Visual Studio. The last thing we need to do is set our GameMode's HUD class to the one we just built. Every project has a default Game Mode, and every GameMode has a default Pawn, HUD, PlayerController, and GameState. To do this in 4.8, we will modify the HelloSlateGameMode.h and cpp. This is a necessary step to tell Unreal what HUD to use by default:
</p><p><b>HelloSlateGameMode.h:</b>
<br />
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="co1">// Fill out your copyright notice in the Description page of Project Settings.</span>
&#160;
<span class="co2">#pragma once</span>
<span class="co2">#include &quot;GameFramework/GameMode.h&quot;</span>
<span class="co2">#include &quot;HelloSlateGameMode.generated.h&quot;</span>
&#160;
UCLASS<span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="kw2">class</span> AHelloSlateGameMode <span class="sy4">:</span> <span class="kw2">public</span> AGameMode
<span class="br0">&#123;</span>
	GENERATED_BODY<span class="br0">&#40;</span><span class="br0">&#41;</span>
&#160;
<span class="kw2">public</span><span class="sy4">:</span>
	AHelloSlateGameMode<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
<span class="br0">&#125;</span><span class="sy4">;</span></pre></div></div>
<p><b>HelloSlateGameMode.cpp:</b>
<br />
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="co1">// Fill out your copyright notice in the Description page of Project Settings.</span>
&#160;
<span class="co2">#include &quot;HelloSlate.h&quot;</span>
<span class="co2">#include &quot;StandardHUD.h&quot;</span>
<span class="co2">#include &quot;HelloSlateGameMode.h&quot;</span>
&#160;
AHelloSlateGameMode<span class="sy4">::</span><span class="me2">AHelloSlateGameMode</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy4">:</span> Super<span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>
	<span class="co1">//Set the hud class to use our custom HUD by default.</span>
	this<span class="sy2">-</span><span class="sy1">&gt;</span>HUDClass <span class="sy1">=</span> AStandardHUD<span class="sy4">::</span><span class="me2">StaticClass</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
<span class="br0">&#125;</span></pre></div></div>
<p>Hit "play", hopefully you CAN see the result at the top of the Viewport. If you run into any questions try dropping a line in this wiki's thread.
</p><p><a rel="nofollow" class="external free" href="https://forums.unrealengine.com/showthread.php?822-Slate-Tutorial">https://forums.unrealengine.com/showthread.php?822-Slate-Tutorial</a>
</p><p>For more information on more advanced uses of Slate you can see some examples of Loading Slate Styles &amp; Resources here...<br />
<a rel="nofollow" class="external free" href="https://wiki.unrealengine.com/Loading_Slate_Styles_%26_Resources">https://wiki.unrealengine.com/Loading_Slate_Styles_%26_Resources</a>
</p><p>Update 4.8: Thank you Unreal community for having the old tutorial here so I had a place to start. I will try to go through the further reading and also update those as well.
</p><p>Update 4.8.2 (7/18/2015): I probably should have done this sooner but <a rel="nofollow" class="external text" href="http://katianie.com/Unreal_Source_Code/HelloSlate.zip">here is a link to the full project</a>. I started to mess around a bit with the stuff in the next tutorial "How to Make Fancy Custom Buttons" so there is some commented out code related to that. I just tested the project before zipping it up and it works, let me know if you guys have any trouble, you can reach me on Skype at Katianie9 or send me a message through here.
</p>
<h2><span class="mw-headline" id="Further_Reading">Further Reading</span></h2>
<p><a href="/Slate,_How_to_Make_Fancy_Custom_SButtons" title="Slate, How to Make Fancy Custom SButtons">Slate,_How_to_Make_Fancy_Custom_SButtons</a>
</p>
<!-- 
NewPP limit report
CPU time usage: 0.105 seconds
Real time usage: 0.140 seconds
Preprocessor visited node count: 107/1000000
Preprocessor generated node count: 254/1000000
Post‐expand include size: 514/2097152 bytes
Template argument size: 10/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
-->
</div>												<div class="printfooter">
				Retrieved from "<a href="https://wiki.unrealengine.com/index.php?title=Slate,_Hello&amp;oldid=14734">https://wiki.unrealengine.com/index.php?title=Slate,_Hello&amp;oldid=14734</a>"				</div>
												<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="/Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="/Category:Tutorials" title="Category:Tutorials">Tutorials</a></li><li><a href="/Category:Code" title="Category:Code">Code</a></li><li><a href="/Category:Community_Created_Content" title="Category:Community Created Content">Community Created Content</a></li></ul></div><div id="mw-hidden-catlinks" class="mw-hidden-catlinks mw-hidden-cats-hidden">Hidden category: <ul><li><a href="/Category:Templates" title="Category:Templates">Templates</a></li></ul></div></div>												<div class="visualClear"></div>
							</div>
		</div>
		</div>
		</div>
		
		<div id="footer">
			<div id="brand">

			</div>
			<div id="legal">
				<div id="copyright">
					&copy; 2004-2015, Epic Games, Inc. All rights reserved. Unreal and its logo are Epic's trademarks or registered trademarks in the US and elsewhere.
				</div>
				<div id="terms">
					<a target="_blank" href="http://epicgames.com/tou">TERMS OF USE</a> | <a target="_blank" href="http://epicgames.com/privacynotice">PRIVACY POLICY</a>
				</div>
			</div>
		</div>
	</div>
		<!--<div id="footer" role="contentinfo">
										<ul id="footer-icons" class="noprint">
					<li id="footer-copyrightico">
						<div name="copyright">&#169; 2004-2014, Epic Games, Inc. All rights reserved. Epic Games, Unreal, Unreal Engine, Unreal Tournament, and their respective logos are Epic's trademarks or registered trademarks in the US and elsewhere.</div>
					</li>
					<li id="footer-termsofuseico">
						<div name="termsofuse"><a href="http://epicgames.com/tou" target="_blank">Terms of Use</a></div>
					</li>
					<li id="footer-privacynoticeico">
						<div name="privacynotice"><a href="http://epicgames.com/privacynotice" target="_blank">Privacy Policy</a></div>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>-->
		<script>/*<![CDATA[*/window.jQuery && jQuery.ready();/*]]>*/</script><script>if(window.mw){
mw.loader.state({"site":"loading","user":"ready","user.groups":"ready"});
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.action.view.postEdit","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.searchSuggest","skins.vector.collapsibleNav"],null,true);
}</script>
<script src="/extensions/EpicSearchSystem/Javascript/Search.js?399"></script>
<script src="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=epic&amp;*"></script>
<!-- Served in 0.224 secs. -->		<img src="https://tracking.unrealengine.com/track.png" width="1" height="1">
		<!--<script type="text/javascript">
			setTimeout(function () {
				var a = document.createElement("script");
				var b = document.getElementsByTagName("script")[0];
				a.src = document.location.protocol + "//script.crazyegg.com/pages/scripts/0028/4572.js?" + Math.floor(new Date().getTime() / 3600000);
				a.async = true; a.type = "text/javascript"; b.parentNode.insertBefore(a, b)
			}, 1);
		</script>-->
	</body>
</html>

		