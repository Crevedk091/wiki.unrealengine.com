<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<meta charset="UTF-8" /><title>View source for Building On Linux - Epic Wiki</title>
<meta name="generator" content="MediaWiki 1.22.2" />
<meta name="robots" content="noindex,nofollow" />
<link rel="shortcut icon" href="/favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="/opensearch_desc.php" title="Epic Wiki (en)" />
<link rel="EditURI" type="application/rsd+xml" href="https://wiki.unrealengine.com/api.php?action=rsd" />
<link rel="alternate" type="application/atom+xml" title="Epic Wiki Atom feed" href="/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="stylesheet" href="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.legacy.commonPrint%2Cshared%7Cskins.vector&amp;only=styles&amp;skin=epic&amp;*" />
<link rel="stylesheet" href="/extensions/EpicVideoSystem/CSS/VideoSystem.css" />
<link rel="stylesheet" href="/skins/epic/resources/screen.css?303" media="screen" />
<link rel="stylesheet" href="/skins/epic/resources/epic.css?303" media="screen" />
<link rel="stylesheet" href="/skins/epic/resources/prettify.css?303" media="screen" />
<link rel="stylesheet" href="/skins/epic/resources/jquery.qtip.css?303" media="screen" /><meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=epic&amp;*" />
<style>a:lang(ar),a:lang(ckb),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}
/* cache key: my_wiki:resourceloader:filter:minify-css:7:07b6a8ccf3fd62e770f192d0a6f8e123 */</style>

<script src="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=epic&amp;*"></script>
<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Building_On_Linux","wgTitle":"Building On Linux","wgCurRevisionId":24133,"wgRevisionId":0,"wgArticleId":854,"wgIsArticle":false,"wgIsRedirect":false,"wgAction":"edit","wgUserName":null,"wgUserGroups":["*"],"wgCategories":[],"wgBreakFrames":true,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Building_On_Linux","wgIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgWikiEditorEnabledModules":{"toolbar":true,"dialogs":true,"hidesig":true,"templateEditor":false,"templates":false,"preview":true,"previewDialog":false,"publish":true,"toc":false}});
}</script><script>if(window.mw){
mw.loader.implement("user.options",function(){mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"epic","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"vector-simplesearch":1,"watchcreations":0,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,"watchlisthidebots":0,
"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"useeditwarning":1,"prefershttps":1,"usebetatoolbar":1,"usebetatoolbar-cgd":1,"wikieditor-preview":1,"wikieditor-publish":1,"language":"en","variant-gan":"gan","variant-iu":"iu","variant-kk":"kk","variant-ku":"ku","variant-shi":"shi","variant-sr":"sr","variant-tg":"tg","variant-uz":"uz","variant-zh":"zh","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false,"variant":"en"});},{},{});mw.loader.implement("user.tokens",function(){mw.user.tokens.set({"editToken":"+\\","patrolToken":false,"watchToken":false});},{},{});
/* cache key: my_wiki:resourceloader:filter:minify-js:7:2197af7670c41256853f340e275ede1b */
}</script>
<script src="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=skins.epic.extras.js%7Cskins.epic.fancybox.js%7Cskins.epic.js%7Cskins.epic.qtip.js%7Cskins.epic.slimscroll.js&amp;only=scripts&amp;skin=epic&amp;*"></script>
<script>if(window.mw){
mw.loader.load(["mediawiki.page.startup","mediawiki.legacy.wikibits","mediawiki.legacy.ajax","skins.vector.js"]);
}</script>
<!--[if lt IE 7]><style type="text/css">body{behavior:url("/skins/epic/csshover.min.htc")}</style><![endif]--><script type="text/javascript">
var experimentID = false;
var cxApi = null;
var variation = 0;
var fancyTitle = "";
var CE_SNAPSHOT_NAME = document.getElementsByTagName("title")[0].innerHTML;
$(document).ready(function(){
	if(experimentID != false)
	{
		$(head).append('<script src="//www.google-analytics.com/cx/api.js?experiment=' + experimentID + '" />' + '</scr' + 'ipt>');
		HandleExperiment();
	}
	else
	{
		CE_SNAPSHOT_NAME = (fancyTitle != "" ? fancyTitle : document.getElementsByTagName("title")[0].innerHTML);
		setTimeout(function () {
			var a = document.createElement("script");
			var b = document.getElementsByTagName("script")[0];
			a.src = document.location.protocol + "//script.crazyegg.com/pages/scripts/0028/4572.js?" + Math.floor(new Date().getTime() / 3600000);
			a.async = true; a.type = "text/javascript"; b.parentNode.insertBefore(a, b)
		}, 1);	
	}
});
function HandleExperiment()
{
	CE_SNAPSHOT_NAME = (fancyTitle != "" ? fancyTitle : document.getElementsByTagName("title")[0].innerHTML);
	if(cxApi != null)
	{
		variation = cxApi.chooseVariation();
		cxApi.setChosenVariation(variation, experimentID);
		if(variation != cxApi.ORIGINAL_VARIATION && variation != cxApi.NO_CHOSEN_VARIATION && variation != cxApi.NOT_PARTICIPATING)
		{
			//var URL = document.location.href + (document.location.search != '' ? '&var=' : '?var=') + variation;
			ga('send', 'event', 'A/B', 'ID: ' + experimentID, 'Variation: ' + variation, {'nonInteraction': 1});
			//document.location.href = URL; 
			CE_SNAPSHOT_NAME = document.getElementsByTagName("title")[0].innerHTML + ' (variation ' + variation + ')';
			var test = "";
		}
		else
		{
			ga('send', 'event', 'A/B', 'ID: ' + experimentID, 'Variation: ' + variation, {'nonInteraction': 1});
		}
		ToggleExperimentContent(variation);
		setTimeout(function () {
			var a = document.createElement("script");
			var b = document.getElementsByTagName("script")[0];
			a.src = document.location.protocol + "//script.crazyegg.com/pages/scripts/0028/4572.js?" + Math.floor(new Date().getTime() / 3600000);
			a.async = true; a.type = "text/javascript"; b.parentNode.insertBefore(a, b)
		}, 1);
	}
	else
	{
		setTimeout("HandleExperiment()", 500);
	}
}

function ToggleExperimentContent(variation)
{
	$('.AB').hide();
	$('#variation_' + variation).show();
}
</script></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Building_On_Linux skin-epic action-edit vector-animateLayout">
		<!--<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>-->
		<!-- Google Tag Manager -->
		<noscript>
			<iframe src="//www.googletagmanager.com/ns.html?id=GTM-KWRD6D"
					height="0" width="0" style="display:none;visibility:hidden"></iframe>
		</noscript>
		<script>
		(function (w, d, s, l, i) {
		w[l] = w[l] || []; w[l].push({
		'gtm.start':
		new Date().getTime(), event: 'gtm.js'
		}); var f = d.getElementsByTagName(s)[0],
		j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : ''; j.async = true; j.src =
		'//www.googletagmanager.com/gtm.js?id=' + i + dl; f.parentNode.insertBefore(j, f);
		})(window, document, 'script', 'dataLayer', 'GTM-KWRD6D');</script>
		<!-- End Google Tag Manager -->
		<div id="webThree">
		<div id="head"></div>
		<div id="pagedefault">		
                    <div id="pagenav">
                        <div>
                            <!-- Start of Other language links -->
                            <!-- End of Other language links -->
                            <div class="homelink_container">
                                <a href="https://wiki.unrealengine.com" title="UE4 Wiki Home" class="homelink">HOME</a>
                            </div>
                        </div>
                        <div style="clear:both;">
                        </div>
                    </div>	
		<div id="mw-navigation" style="max-width:972px;margin:1em auto 0 auto;">
			<h2>Navigation menu</h2>
			<div id="mw-head">
				<div id="jumplink" onclick="$('#sidebar').toggle();">
					Navigation
				</div>
				<div id="sidebar">
					<!-- Start of jump page links -->
					<div class="largetitle">
						Quick Links
					</div>
					<div class="arrowlist">
						<!-- End of jump page links -->
						<!-- Start of related page links -->
						<!-- End of related page links -->								
						<div id="mw-panel">
							<div class="portal" role="navigation" id='p-navigation' aria-labelledby='p-navigation-label'>
	<h3 id='p-navigation-label'>Navigation</h3>
	<div class="body">
		<ul>
			<li id="n-mainpage-description"><a href="/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
			<li id="n-recentchanges"><a href="/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
			<li id="n-randompage"><a href="/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-Community' aria-labelledby='p-Community-label'>
	<h3 id='p-Community-label'>Community</h3>
	<div class="body">
		<ul>
			<li id="n-UE4-Games"><a href="/Category:Games">UE4 Games</a></li>
			<li id="n-Dev-Blogs"><a href="/Developer_Blogs">Dev Blogs</a></li>
			<li id="n-Dev-Livestreams"><a href="/Developer_Livestreams">Dev Livestreams</a></li>
			<li id="n-Code-Sharing-Hub"><a href="/GitHub_Sharing_Hub">Code Sharing Hub</a></li>
			<li id="n-UE-User-Groups"><a href="/User_Group_Map">UE User Groups</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-Learning_Resources' aria-labelledby='p-Learning_Resources-label'>
	<h3 id='p-Learning_Resources-label'>Learning Resources</h3>
	<div class="body">
		<ul>
			<li id="n-Tutorials"><a href="/Category:Tutorials">Tutorials</a></li>
			<li id="n-Example-Projects"><a href="/Category:Example_Projects">Example Projects</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-Software_and_Tools' aria-labelledby='p-Software_and_Tools-label'>
	<h3 id='p-Software_and_Tools-label'>Software and Tools</h3>
	<div class="body">
		<ul>
			<li id="n-Plug-ins"><a href="/Category:Plug-ins">Plug-ins</a></li>
			<li id="n-Art:-3D"><a href="/3D_Art_Resources">Art: 3D</a></li>
			<li id="n-Art:-2D"><a href="/2D_Art_Resources">Art: 2D</a></li>
			<li id="n-Audio"><a href="/Audio_Resources">Audio</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-Modding' aria-labelledby='p-Modding-label'>
	<h3 id='p-Modding-label'>Modding</h3>
	<div class="body">
		<ul>
			<li id="n-Modding-Resources"><a href="/Category:Modding_Resources">Modding Resources</a></li>
			<li id="n-Moddable-Games"><a href="/Category:Moddable_Games">Moddable Games</a></li>
			<li id="n-Unreal-Tournament"><a href="/Category:Unreal_Tournament">Unreal Tournament</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-Epic_Official' aria-labelledby='p-Epic_Official-label'>
	<h3 id='p-Epic_Official-label'>Epic Official</h3>
	<div class="body">
		<ul>
			<li id="n-Website"><a href="https://www.unrealengine.com" rel="nofollow">Website</a></li>
			<li id="n-Learning-Resources"><a href="https://docs.unrealengine.com/latest/INT/" rel="nofollow">Learning Resources</a></li>
			<li id="n-Forums"><a href="https://forums.unrealengine.com/" rel="nofollow">Forums</a></li>
			<li id="n-Blog"><a href="https://www.unrealengine.com/blog" rel="nofollow">Blog</a></li>
			<li id="n-YouTube"><a href="https://www.youtube.com/UnrealEngine" rel="nofollow">YouTube</a></li>
			<li id="n-Twitch"><a href="http://www.twitch.tv/unrealengine" rel="nofollow">Twitch</a></li>
			<li id="n-Twitter"><a href="https://twitter.com/UnrealEngine" rel="nofollow">Twitter</a></li>
			<li id="n-Facebook"><a href="https://www.facebook.com/UnrealEngine" rel="nofollow">Facebook</a></li>
			<li id="n-Instagram"><a href="https://instagram.com/unrealengine/" rel="nofollow">Instagram</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-tb' aria-labelledby='p-tb-label'>
	<h3 id='p-tb-label'>Tools</h3>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="/Special:WhatLinksHere/Building_On_Linux" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="/Special:RecentChangesLinked/Building_On_Linux" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-specialpages"><a href="/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li id="t-info"><a href="/index.php?title=Building_On_Linux&amp;action=info">Page information</a></li>
		</ul>
	</div>
</div>
						</div>
					</div>
				</div>				
				<div id="left-navigation">
					<div id="p-namespaces" role="navigation" class="vectorTabs" aria-labelledby="p-namespaces-label">
	<h3 id="p-namespaces-label">Namespaces</h3>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="/Building_On_Linux"  title="View the content page [c]" accesskey="c">Page</a></span></li>
					<li  id="ca-talk"><span><a href="/Talk:Building_On_Linux"  title="Discussion about the content page [t]" accesskey="t">Discussion</a></span></li>
			</ul>
</div>
<div id="p-variants" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-variants-label">
	<h3 id="mw-vector-current-variant">
		</h3>
	<h3 id="p-variants-label"><span>Variants</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
				</div>
				<div id="right-navigation">
					<div id="p-views" role="navigation" class="vectorTabs" aria-labelledby="p-views-label">
	<h3 id="p-views-label">Views</h3>
	<ul>
					<li id="ca-view"><span><a href="/Building_On_Linux" >View</a></span></li>
					<li id="ca-viewsource" class="selected"><span><a href="/index.php?title=Building_On_Linux&amp;action=edit"  title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="/index.php?title=Building_On_Linux&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">History</a></span></li>
			</ul>
</div>
<div id="p-cactions" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-cactions-label">
	<h3 id="p-cactions-label"><span>Actions</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
<div id="p-personal" role="navigation" class="" aria-labelledby="p-personal-label">
	<h3 id="p-personal-label">Personal tools</h3>
	<ul>
<li id="pt-createaccount"><a href="/index.php?title=Special:UserLogin&amp;returnto=Building+On+Linux&amp;returntoquery=action%3Dedit&amp;type=signup">Create account</a></li><li id="pt-login"><a href="/index.php?title=Special:UserLogin&amp;returnto=Building+On+Linux&amp;returntoquery=action%3Dedit" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>	</ul>
</div>
				</div>
			</div>
		</div>
		<div id="maincol">
		<div class="mw-body" role="main">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<!-- Start of crumbs links -->
			<div class="crumbs">
			<p>
							</p>
			</div>
			<!-- End of crumbs links -->
			<h1 id="firstHeading" class="firstHeading" lang="en"><span dir="auto">View source for Building On Linux</span></h1>
			<div id="bodyContent">
				<div id="contentSub">← <a href="/Building_On_Linux" title="Building On Linux">Building On Linux</a></div>
																<div id="mw-content-text"><p>You do not have permission to edit this page, for the following reason:
</p>
<div class="permissions-errors">
<p>The action you have requested is limited to users in the group: <a href="/index.php?title=Epic_Wiki:Users&amp;action=edit&amp;redlink=1" class="new" title="Epic Wiki:Users (page does not exist)">Users</a>.
</p>
</div>
<hr />
<p>You can view and copy the source of this page:
</p><textarea readonly="" accesskey="," id="wpTextbox1" cols="80" rows="25" style="" lang="en" dir="ltr" name="wpTextbox1">[[Category:Tutorials]]
[[Category:Code]]
[[Category:Community Created Content]]
{{Rating|Type=Article|Versions=(please verify)}}
This page contains information about the effort to build UE4 natively on a Linux host.  If you are looking for information about targeting Linux using the existing Mac or Windows tools please see [[Compiling_For_Linux|Compiling For Linux]]. The main page is [[Linux_Support|Linux support]].

== Foreword before building ==
&lt;big>'''For the love of all good, please don't use the ''root'' user to compile and run Unreal Engine 4. Create another un-privileged user on the system and, build and run under it.'''&lt;/big>

== Prerequisites ==
As per [https://www.unrealengine.com/faq Epic's FAQ] minimum system requirements for UE4 are:

 Desktop PC or Mac
 Quad-core Intel or AMD processor, 2.5 GHz or faster
 NVIDIA GeForce 470 GTX or AMD Radeon 6870 HD series card or higher
 8 GB RAM

Please make sure that you at least meet the minimum system requirements and are running a native Linux install (not a VM), with binary NVIDIA or AMD graphics drivers.

The officially used (by Epic QA) Linux distribution is Ubuntu, and we suggest you have, or install, Ubuntu 16.04 LTS for its longevity and compatibility. UE4 only works on 64-bit architecture so make sure you get that right as well.

'''Note: '''
'''We get too many questions from people who do not even meet minimum requirements, wondering why something does not build or run. So please, just because you are running Linux, it does not mean you can use some 10+ year old clunker of a computer to build and run a next-gen game engine (which UE4 is).'''

= Getting Started =

==Current State==
We've been discussing it mostly on the IRC at irc://irc.freenode.net/UE4Linux, but you can also find a few forum threads about it.  If you'd like to have native Linux development tools, please jump in and join us. To catch up on our IRC conversations, you can access channel logs at http://teemperor.de/ue4-logs/ue4linux/.

Most current stable branch we suggest you use is ''Release'' from [https://github.com/EpicGames/UnrealEngine Epic GitHub]:

Epic source code repositories (https://www.unrealengine.com/ue4-on-github) are set to private. In order to gain access you need to add your GitHub username when you sign up at https://unrealengine.com. If you do not have a GitHub username, then you need to get one first.

If you get a message that repository does not exist, you probably:
* did not accept invitation from Epic to join their Git,
* did not log into GitHub (if browsing via web),
* have forgotten to add your GitHub username to your profile at https://unrealengine.com, or
* just need to wait a few minutes after accepting the invitation.

==Building==

===First Time Setup===

Make sure you linked your GitHub account to your profile on https://unrealengine.com, as all Epic repositories are private.

For the first time setup (if you just want to use the release version, if not follow the instructions after the following instructions), run the below commands in your favorite terminal:

 $ git clone https://github.com/EpicGames/UnrealEngine.git
 $ # or if you are using ssh authentication: 
 $ # git clone git@github.com:EpicGames/UnrealEngine.git
 $ cd UnrealEngine
 $ ./Setup.sh
 $ ./GenerateProjectFiles.sh 

Or if you want to use a versioned branch that the latest Release is based on to get latest fixes, use a versioned branch for the release version. For the moment it is 4.14. (Note to maintainers, please keep this section up to date with 

 $ git clone -b 4.14 https://github.com/EpicGames/UnrealEngine.git
 $ # or if you are using ssh authentication: 
 $ # git clone -b 4.14 git@github.com:EpicGames/UnrealEngine.git
 $ cd UnrealEngine
 $ ./Setup.sh
 $ ./GenerateProjectFiles.sh 

The script may ask you to install additional packages (on certain distributions), and either git hooks will download the binary dependencies or the script will handle that for you.

Now you should be all set and you can build all needed UE4 projects to develop your projects using the generated Makefile. e.g:

 $ make

This will compile the most needed UE4 binaries and will take a while. After finishing the binaries (Unreal Engine 4 Editor included) will be located in your Engine/Binaries/Linux subfolder. You can also import CMakeLists.txt which is generated by GenerateProjectFiles.sh as well into your favorite IDE (KDevelop, QTCreator, Codelite, or any that will handle a Makefile project or CMake project.).

You are ready to test it now.

 $ ./Engine/Binaries/Linux/UE4Editor

If something goes wrong run UE4Editor through gdb using a generated project by passing the path to the project in gdb via : (relpace $USER with your user name and $PROJECT with the name of a default project or your project)

 $ gdb ./Engine/Binaries/Linux/UE4Editor

Then in gdb: (/home/$USER/Documents/Unreal Projects/ is the default location that UE4Editor creates projects)

 set args "/home/$USER/Documents/Unreal Projects/$PROJECT/$PROJECT.uproject"

Then you can run the commands to get the information you need, which may be limited since the default editor is built against the Developer profile and not Debug, for than you need to build the Debug editor (see below for instructions on building the Debug editor)

If you get a core dump message, the core file may not be saved, if the error/crash is repeatable, you will need to set it to unlimited using ulimit and rerun the editor(run this as your default user, not as root or sudo).

 $ ulimit -c unlimited

The core file is massive, the greater side of 1.8 Gigs, if you need to share the core file with others, or you want to store it without it taking up all that space, you can tar it:
If you ran it from the root UnrealEngine folder.

 $ tar Jvcf core-`date +%Y%m%d`.tar.xz ./Engine/Binaries/Linux/core 

Otherwise, the Editor should present you with a Project Browser Window. Hooray. First time run will be longer because shaders need to convert/compile,
so sit tight and if you don't have a Dual Xeon 12-Core workstation, process will take > 5 mins (even > 1 hour on 2-Core systems).

You are on your own now, create a new project and play with the Editor ;)

===Controlling the Build Environment===

UnrealBuildTool (UBT) can be configured further by editing:

 Engine/Saved/UnrealBuildTool/BuildConfiguration.xml

See the default file for a list of possible keys:

 Engine/Programs/UnrealBuildTool/BuildConfiguration.xml

== Build Prerequisites ==

=== 4.9 and later ===                                                                                      
    Setup.sh

will fetch required packages. This is the main and supported method of getting required packages.

=== 4.7 ===
    Setup.sh

or the manual method below. While you can certainly use the manual way, it is preferred to use - and test - provided "out of the box" experience'''.

=== Before 4.7 ===
Manual installations.
                                                                                                     
You will need '''''mono 3.2.8+''''', C# compiler (mcs), clang, dos2unix and cmake installed in order to build the editor:                                                                       
     build-essential mono-gmcs mono-xbuild mono-dmcs libmono-corlib4.0-cil libmono-system-data-datasetextensions4.0-cil 
     libmono-system-web-extensions4.0-cil libmono-system-management4.0-cil libmono-system-xml-linq4.0-cil cmake dos2unix clang xdg-user-dirs

'''Note: Only used for 4.7 and bellow. -> Depending whether you wish to use Qt or GTK for your dialogs, libqt4-dev or libqt5-dev or gtk2 or gtk3 will be needed. Setup.sh asks to install libqt4-dev'''.

If you wish to recompile third party dependencies (which is no longer a necessary step for ''release'' or ''versioned release numbered'' branch), you will also need autoconf, bison, flex, libz, glew and possibly more.

==== Clang ====

On Ubuntu 16.04, use Clang 3.8 .

On Ubuntu 14.04, use Clang 3.5 or Clang 3.3 . Do not use Clang 3.4, as it has issues.

One of the websites with precompiled binaries of Clang 3.3 is http://gaming.jhu.edu/mirror/archlinux/extra/os/x86_64/, you will need clang-3.3, llvm-3.3 and, llvm-libs-3.3


===Enhancing the Makefile===

Makefile does not contain a '''clean''' method, but you can clean any target by adding ARGS=-clean to it, like this

  make UE4Editor ARGS=-clean

The above is the preferred way to clean a target, although you can also remove target files manually. Edit the Makefile in the engine's root and add the following to it before '''.PHONY:''' statement at the bottom:

 shaders-clean:
        rm -rf Engine/Intermediate/Shaders Engine/Saved Engine/DerivedDataCache Engine/Intermediate/CachedAssetRegistry.bin
 
 editor-clean:
        rm -rf Engine/Intermediate/Build/Linux/x86_64-unknown-linux-gnu/UE4Editor Engine/Binaries/Linux/libUE4Editor-* Engine/Binaries/Linux/UE4Editor
 
 clean:
        rm -f Engine/Binaries/Linux/Unreal* Engine/Binaries/Linux/UE* \
        Engine/Binaries/Linux/libUnreal* Engine/Binaries/Linux/libUE* Engine/Binaries/Linux/libSh* \
        Engine/Binaries/Linux/ShaderCompileWorker* Engine/Binaries/Linux/SlateViewer* Engine/Binaries/Linux/CrashReportClient*
        rm -rf Engine/Intermediate/Build Engine/Binaries/Linux/HTML5 Engine/Binaries/Linux/Linux Engine/Binaries/Linux/Android Engine/Binaries/Linux/IOS Engine/Binaries/Linux/HTML5

Make sure that the indented sections are not made out of spaces, but a single tab.

==Known Issues==

See [[Linux_Known_Issues|Known Issues]]

==Miscellaneous==

===Building with a VM===
Distributions of Linux that are not officially supported (e.g. Arch Linux) may have difficulty compiling and/or running the engine. You can build with the supported Linux distribution (Ubuntu 14.04 LTS at the time of this writing) like so:
* set up a virtual machine with this OS
* create a shared folder between the guest and host OS
* place the Unreal Engine code in this folder
* build Unreal Engine inside the VM
* run the compiled executable on the host machine


=== Recent version of Mono required ===
If you are getting an error like this:
   Could not load file or assembly 'Microsoft.Build.Tasks.v4.0' or one of its dependencies.

You may need to upgrade your mono version:
   http://stackoverflow.com/questions/25116391/building-sln-on-mono-ubuntu
   http://www.mono-project.com/docs/getting-started/install/linux/#debian-ubuntu-and-derivatives

(at least this fixed the problem for me).

===Recent Mono versions===

'''Note: this should not be the case as of 4.7.'''

If you are getting an error like this:

 &lt;snip>Engine/Engine/Source/Programs/AutomationTool/Linux/Linux.Automation.csproj:  warning : Project has unknown ToolsVersion '11.0'. Using the default tools version '2.0' instead.
 /usr/lib/mono/2.0/Microsoft.Common.targets:  warning : TargetFrameworkVersion 'v4.0' not supported by this toolset (ToolsVersion: 2.0).
 /usr/lib/mono/2.0/Microsoft.CSharp.targets: error : Error executing task Csc: Argument cannot be null.

Edit the following files:

* Engine/Source/Programs/AutomationTool/Linux/Linux.Automation.csproj

* Engine/Source/Programs/AutomationTool/Android/Android.Automation.csproj

* Engine/Source/Programs/AutomationTool/HTML5/HTML5.Automation.csproj

And change

 ToolsVersion="11.0"

to

 ToolsVersion="4.0"

usually found on the second or third line.

This can be automated with:

 $ find Engine/Source/Programs/AutomationTool -name "*Automation.csproj" -exec sed -i "s/ToolsVersion=\"11.0\"/ToolsVersion=\"4.0\"/g" "{}" \;

You also have to export MSBuildToolsVersion=4.0 in the latest master it seems.

=== Builds and runs ===

* UnrealHeaderTool
* BlankProgram
* SlateViewer
* UE4Editor
* ShaderCompileWorker
* UnrealLightmass
* UnrealPak
* UE4Client
* UE4Game
* UE4Server

Builds - Mostly Untested:
* UE4EditorServices
* UnrealFileServer
* UnrealVersionSelector
* UnrealFrontend
* CrashReportClient

Not appropiate on Linux:
* MinidumpDiagnostics
* UnrealLaunchDaemon
* SymbolDebugger
* UnrealSync

=== SDL2 with multi-monitor support ===
If you run multi-monitor setup and have issues e.g. Editor splash screen appears centered between displays, make sure that SDL2 is compiled with xinerama and/or xrandr support.
You will need to have the dev libs of both installed ahead of time. In Ubuntu (and alike) do:
 $ sudo apt-get install libxinerama-dev libxrandr-dev x11proto-xinerama-dev
Then re-build SDL2:
 $ cd Engine/Source/ThirdParty/SDL2 &amp;&amp; ./build.sh

==Distro Specific Instructions==


===Setting up on Ubuntu===

====Installing Dependencies====
Ubuntu users can install the dependencies needed to build Unreal Engine 4 by running the following command:

__14.04__

 $ sudo apt-get install build-essential mono-gmcs mono-xbuild mono-dmcs libmono-corlib4.0-cil libmono-system-data-datasetextensions4.0-cil libmono-system-web-extensions4.0-cil libmono-system-management4.0-cil libmono-system-xml-linq4.0-cil cmake dos2unix clang-3.5 libfreetype6-dev libgtk-3-dev libmono-microsoft-build-tasks-v4.0-4.0-cil xdg-user-dirs

__16.04__

 $ sudo apt-get install build-essential mono-mcs mono-devel mono-xbuild mono-dmcs mono-reference-assemblies-4.0 libmono-system-data-datasetextensions4.0-cil libmono-system-web-extensions4.0-cil libmono-system-management4.0-cil libmono-system-xml-linq4.0-cil cmake dos2unix clang-3.5 libfreetype6-dev libgtk-3-dev libmono-microsoft-build-tasks-v4.0-4.0-cil xdg-user-dirs

===Setting up on CentOS 7===

See [[Building_On_Centos|Building on CentOS]] page.


===Setting up on Fedora 20===

See https://forums.unrealengine.com/showthread.php?53451-Successful-4-6-0-build-on-Fedora-20-x86_64


===Setting up on Arch Linux===

For a manual install, the dependencies needed to build Unreal Engine 4 can be added by running the following command:
 $ sudo pacman -S mono clang35 dos2unix cmake

Arch users will have to either recompile their Clang or get a compiled package that does not use ld.gold, because ld.gold causes linking problems yet has been hard coded into Clang.

Optionally you could go through the following steps for a work around (faster and easier):

1. Open up a terminal.

2. Execute the following command:

 $ mkdir ~/bin/ &amp;&amp; cd ~/bin/ &amp;&amp; ln -s /bin/ld.bfd ./ld.gold

3. Add the following line to your .bashrc (or .zshrc if you use zsh) usually found in the home folder (hidden).

 export PATH=$HOME/bin:$PATH

4. Close all your terminals to apply the changes.

'''Arch Linux users should try building the Editor using the Debug profile if Development (default) does not work''':

 $ make UE4Editor-Linux-Debug

This might work better and not cause threading crashes seen when building standard "Development" profile. More investigation is needed at this point.

===Setting up on Linux Mint===

====Before running "First Time Setup"====
Mint users should install the dependencies needed to build Unreal Engine 4 by running the following command:

version (09.2016):

 sudo apt install git build-essential clang-3.8 libglew-dev libcheese8 libcheese-gtk25 libclutter-gst-3.0-0 libcogl20 libclutter-gtk-1.0-0 libclutter-1.0-0  xserver-xorg-input-all

Now that Clang is installed; Mint users should also make a Symlink for clang &amp; clang++:

 sudo ln -s /usr/bin/clang-3.8 /usr/bin/clang
 sudo ln -s /usr/bin/clang++-3.8 /usr/bin/clang++

====libGL====

When running SlateViewer, and later UE4Editor, libGL.so.1 needs to be either preloaded with LD_PRELOAD -OR- an installation of a package like fglrx to add the library to the build.

installation example:
 sudo apt-get install fglrx

-OR-

LD_PRELOAD method:
After "make ./SlateViewer":
 export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/mesa/libGL.so.1 SlateViewer 
then run ./SlateViewer
 
and after UE4Editor is built:
 export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/mesa/libGL.so.1 UE4Editor
then run ./UE4Editor

= After Building =

==Generating project files for your project==

To generate project files for your project, you need to run this command from the UnrealEngine folder:
 $ ./GenerateProjectFiles.sh -project="/home/user/Documents/Unreal\ Projects/MyProject/MyProject.uproject" -game -engine

==Opening your project==

To open your project directly from the command line, you need to run this command from the Engine/Binaries/Linux folder in the UnrealEngine folder:
 $ ./UE4Editor "/home/user/Documents/Unreal\ Projects/MyProject/MyProject.uproject"


&lt;div style="border-top: 1px solid gray; width: 300px; font-size: 14px; color: #666; margin-top: 20px; padding: 6px">&lt;-- Back to the main [[Linux_Support|Linux Support]] page.&lt;/div>
</textarea><div class="templatesUsed"><div class="mw-templatesUsedExplanation"><p>Template used on this page:
</p></div><ul>
<li><a href="/Template:Rating" title="Template:Rating">Template:Rating</a> (<a href="/index.php?title=Template:Rating&amp;action=edit" title="Template:Rating">view source</a>) (protected)</li></ul></div><p id="mw-returnto">Return to <a href="/Building_On_Linux" title="Building On Linux">Building On Linux</a>.</p>
</div>												<div class="printfooter">
				Retrieved from "<a href="https://wiki.unrealengine.com/Building_On_Linux">https://wiki.unrealengine.com/Building_On_Linux</a>"				</div>
												<div id='catlinks' class='catlinks catlinks-allhidden'></div>												<div class="visualClear"></div>
							</div>
		</div>
		</div>
		</div>
		
		<div id="footer">
			<div id="brand">

			</div>
			<div id="legal">
				<div id="copyright">
					&copy; 2004-2015, Epic Games, Inc. All rights reserved. Unreal and its logo are Epic's trademarks or registered trademarks in the US and elsewhere.
				</div>
				<div id="terms">
					<a target="_blank" href="http://epicgames.com/tou">TERMS OF USE</a> | <a target="_blank" href="http://epicgames.com/privacynotice">PRIVACY POLICY</a>
				</div>
			</div>
		</div>
	</div>
		<!--<div id="footer" role="contentinfo">
										<ul id="footer-icons" class="noprint">
					<li id="footer-copyrightico">
						<div name="copyright">&#169; 2004-2014, Epic Games, Inc. All rights reserved. Epic Games, Unreal, Unreal Engine, Unreal Tournament, and their respective logos are Epic's trademarks or registered trademarks in the US and elsewhere.</div>
					</li>
					<li id="footer-termsofuseico">
						<div name="termsofuse"><a href="http://epicgames.com/tou" target="_blank">Terms of Use</a></div>
					</li>
					<li id="footer-privacynoticeico">
						<div name="privacynotice"><a href="http://epicgames.com/privacynotice" target="_blank">Privacy Policy</a></div>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>-->
		<script>/*<![CDATA[*/window.jQuery && jQuery.ready();/*]]>*/</script><script>if(window.mw){
mw.loader.state({"site":"loading","user":"ready","user.groups":"ready"});
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.action.edit.collapsibleFooter","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.searchSuggest","skins.vector.collapsibleNav"],null,true);
}</script>
<script src="/extensions/EpicSearchSystem/Javascript/Search.js?303"></script>
<script src="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=epic&amp;*"></script>
<!-- Served in 0.061 secs. -->		<img src="https://tracking.unrealengine.com/track.png" width="1" height="1">
		<!--<script type="text/javascript">
			setTimeout(function () {
				var a = document.createElement("script");
				var b = document.getElementsByTagName("script")[0];
				a.src = document.location.protocol + "//script.crazyegg.com/pages/scripts/0028/4572.js?" + Math.floor(new Date().getTime() / 3600000);
				a.async = true; a.type = "text/javascript"; b.parentNode.insertBefore(a, b)
			}, 1);
		</script>-->
	</body>
</html>

		