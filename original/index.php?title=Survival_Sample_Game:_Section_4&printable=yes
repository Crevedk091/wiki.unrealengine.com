<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<meta charset="UTF-8" /><title>Survival Sample Game: Section 4 - Epic Wiki</title>
<meta name="generator" content="MediaWiki 1.22.2" />
<meta name="robots" content="noindex,follow" />
<link rel="shortcut icon" href="/favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="/opensearch_desc.php" title="Epic Wiki (en)" />
<link rel="EditURI" type="application/rsd+xml" href="https://wiki.unrealengine.com/api.php?action=rsd" />
<link rel="alternate" type="application/atom+xml" title="Epic Wiki Atom feed" href="/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="stylesheet" href="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.legacy.commonPrint%2Cshared%7Cskins.vector&amp;only=styles&amp;printable=1&amp;skin=epic&amp;*" />
<link rel="stylesheet" href="/extensions/EpicVideoSystem/CSS/VideoSystem.css" /><meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;printable=1&amp;skin=epic&amp;*" />
<style>a:lang(ar),a:lang(ckb),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}
/* cache key: my_wiki:resourceloader:filter:minify-css:7:07b6a8ccf3fd62e770f192d0a6f8e123 */</style>

<script src="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;printable=1&amp;skin=epic&amp;*"></script>
<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Survival_Sample_Game:_Section_4","wgTitle":"Survival Sample Game: Section 4","wgCurRevisionId":14127,"wgRevisionId":14127,"wgArticleId":4081,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Tutorial","SurvivalGameSeries","Code","Templates"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Survival_Sample_Game:_Section_4","wgIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgWikiEditorEnabledModules":{"toolbar":true,"dialogs":true,"hidesig":true,"templateEditor":false,"templates":false,"preview":true,"previewDialog":false,"publish":true,"toc":false}});
}</script><script>if(window.mw){
mw.loader.implement("user.options",function(){mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"epic","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"vector-simplesearch":1,"watchcreations":0,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,"watchlisthidebots":0,
"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"useeditwarning":1,"prefershttps":1,"usebetatoolbar":1,"usebetatoolbar-cgd":1,"wikieditor-preview":1,"wikieditor-publish":1,"language":"en","variant-gan":"gan","variant-iu":"iu","variant-kk":"kk","variant-ku":"ku","variant-shi":"shi","variant-sr":"sr","variant-tg":"tg","variant-uz":"uz","variant-zh":"zh","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false,"variant":"en"});},{},{});mw.loader.implement("user.tokens",function(){mw.user.tokens.set({"editToken":"+\\","patrolToken":false,"watchToken":false});},{},{});
/* cache key: my_wiki:resourceloader:filter:minify-js:7:2197af7670c41256853f340e275ede1b */
}</script>
<script src="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=skins.epic.extras.js%7Cskins.epic.fancybox.js%7Cskins.epic.js%7Cskins.epic.qtip.js%7Cskins.epic.slimscroll.js&amp;only=scripts&amp;printable=1&amp;skin=epic&amp;*"></script>
<script>if(window.mw){
mw.loader.load(["ext.voteNY","mediawiki.page.startup","mediawiki.legacy.wikibits","mediawiki.legacy.ajax","skins.vector.js"]);
}</script>
<style type="text/css">/*<![CDATA[*/
.source-cpp {line-height: normal;}
.source-cpp li, .source-cpp pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for cpp
 * CSS class: source-cpp, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.cpp.source-cpp .de1, .cpp.source-cpp .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.cpp.source-cpp  {font-family:monospace;}
.cpp.source-cpp .imp {font-weight: bold; color: red;}
.cpp.source-cpp li, .cpp.source-cpp .li1 {font-weight: normal; vertical-align:top;}
.cpp.source-cpp .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.cpp.source-cpp .li2 {font-weight: bold; vertical-align:top;}
.cpp.source-cpp .kw1 {color: #0000ff;}
.cpp.source-cpp .kw2 {color: #0000ff;}
.cpp.source-cpp .kw3 {color: #0000dd;}
.cpp.source-cpp .kw4 {color: #0000ff;}
.cpp.source-cpp .co1 {color: #666666;}
.cpp.source-cpp .co2 {color: #339900;}
.cpp.source-cpp .coMULTI {color: #ff0000; font-style: italic;}
.cpp.source-cpp .es0 {color: #000099; font-weight: bold;}
.cpp.source-cpp .es1 {color: #000099; font-weight: bold;}
.cpp.source-cpp .es2 {color: #660099; font-weight: bold;}
.cpp.source-cpp .es3 {color: #660099; font-weight: bold;}
.cpp.source-cpp .es4 {color: #660099; font-weight: bold;}
.cpp.source-cpp .es5 {color: #006699; font-weight: bold;}
.cpp.source-cpp .br0 {color: #008000;}
.cpp.source-cpp .sy0 {color: #008000;}
.cpp.source-cpp .sy1 {color: #000080;}
.cpp.source-cpp .sy2 {color: #000040;}
.cpp.source-cpp .sy3 {color: #000040;}
.cpp.source-cpp .sy4 {color: #008080;}
.cpp.source-cpp .st0 {color: #FF0000;}
.cpp.source-cpp .nu0 {color: #0000dd;}
.cpp.source-cpp .nu6 {color: #208080;}
.cpp.source-cpp .nu8 {color: #208080;}
.cpp.source-cpp .nu12 {color: #208080;}
.cpp.source-cpp .nu16 {color:#800080;}
.cpp.source-cpp .nu17 {color:#800080;}
.cpp.source-cpp .nu18 {color:#800080;}
.cpp.source-cpp .nu19 {color:#800080;}
.cpp.source-cpp .me1 {color: #007788;}
.cpp.source-cpp .me2 {color: #007788;}
.cpp.source-cpp .ln-xtra, .cpp.source-cpp li.ln-xtra, .cpp.source-cpp div.ln-xtra {background-color: #ffc;}
.cpp.source-cpp span.xtra { display:block; }

/*]]>*/
</style><!--[if lt IE 7]><style type="text/css">body{behavior:url("/skins/epic/csshover.min.htc")}</style><![endif]--><script type="text/javascript">
var experimentID = false;
var cxApi = null;
var variation = 0;
var fancyTitle = "";
var CE_SNAPSHOT_NAME = document.getElementsByTagName("title")[0].innerHTML;
$(document).ready(function(){
	if(experimentID != false)
	{
		$(head).append('<script src="//www.google-analytics.com/cx/api.js?experiment=' + experimentID + '" />' + '</scr' + 'ipt>');
		HandleExperiment();
	}
	else
	{
		CE_SNAPSHOT_NAME = (fancyTitle != "" ? fancyTitle : document.getElementsByTagName("title")[0].innerHTML);
		setTimeout(function () {
			var a = document.createElement("script");
			var b = document.getElementsByTagName("script")[0];
			a.src = document.location.protocol + "//script.crazyegg.com/pages/scripts/0028/4572.js?" + Math.floor(new Date().getTime() / 3600000);
			a.async = true; a.type = "text/javascript"; b.parentNode.insertBefore(a, b)
		}, 1);	
	}
});
function HandleExperiment()
{
	CE_SNAPSHOT_NAME = (fancyTitle != "" ? fancyTitle : document.getElementsByTagName("title")[0].innerHTML);
	if(cxApi != null)
	{
		variation = cxApi.chooseVariation();
		cxApi.setChosenVariation(variation, experimentID);
		if(variation != cxApi.ORIGINAL_VARIATION && variation != cxApi.NO_CHOSEN_VARIATION && variation != cxApi.NOT_PARTICIPATING)
		{
			//var URL = document.location.href + (document.location.search != '' ? '&var=' : '?var=') + variation;
			ga('send', 'event', 'A/B', 'ID: ' + experimentID, 'Variation: ' + variation, {'nonInteraction': 1});
			//document.location.href = URL; 
			CE_SNAPSHOT_NAME = document.getElementsByTagName("title")[0].innerHTML + ' (variation ' + variation + ')';
			var test = "";
		}
		else
		{
			ga('send', 'event', 'A/B', 'ID: ' + experimentID, 'Variation: ' + variation, {'nonInteraction': 1});
		}
		ToggleExperimentContent(variation);
		setTimeout(function () {
			var a = document.createElement("script");
			var b = document.getElementsByTagName("script")[0];
			a.src = document.location.protocol + "//script.crazyegg.com/pages/scripts/0028/4572.js?" + Math.floor(new Date().getTime() / 3600000);
			a.async = true; a.type = "text/javascript"; b.parentNode.insertBefore(a, b)
		}, 1);
	}
	else
	{
		setTimeout("HandleExperiment()", 500);
	}
}

function ToggleExperimentContent(variation)
{
	$('.AB').hide();
	$('#variation_' + variation).show();
}
</script></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Survival_Sample_Game_Section_4 skin-epic action-view vector-animateLayout">
		<!--<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>-->
		<!-- Google Tag Manager -->
		<noscript>
			<iframe src="//www.googletagmanager.com/ns.html?id=GTM-KWRD6D"
					height="0" width="0" style="display:none;visibility:hidden"></iframe>
		</noscript>
		<script>
		(function (w, d, s, l, i) {
		w[l] = w[l] || []; w[l].push({
		'gtm.start':
		new Date().getTime(), event: 'gtm.js'
		}); var f = d.getElementsByTagName(s)[0],
		j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : ''; j.async = true; j.src =
		'//www.googletagmanager.com/gtm.js?id=' + i + dl; f.parentNode.insertBefore(j, f);
		})(window, document, 'script', 'dataLayer', 'GTM-KWRD6D');</script>
		<!-- End Google Tag Manager -->
		<div id="webThree">
		<div id="head"></div>
		<div id="pagedefault">		
                    <div id="pagenav">
                        <div>
                            <!-- Start of Other language links -->
                            <!-- End of Other language links -->
                            <div class="homelink_container">
                                <a href="https://wiki.unrealengine.com" title="UE4 Wiki Home" class="homelink">HOME</a>
                            </div>
                        </div>
                        <div style="clear:both;">
                        </div>
                    </div>	
		<div id="mw-navigation" style="max-width:972px;margin:1em auto 0 auto;">
			<h2>Navigation menu</h2>
			<div id="mw-head">
				<div id="jumplink" onclick="$('#sidebar').toggle();">
					Navigation
				</div>
				<div id="sidebar">
					<!-- Start of jump page links -->
					<div class="largetitle">
						Quick Links
					</div>
					<div class="arrowlist">
						<!-- End of jump page links -->
						<!-- Start of related page links -->
						<!-- End of related page links -->								
						<div id="mw-panel">
							<div class="portal" role="navigation" id='p-navigation' aria-labelledby='p-navigation-label'>
	<h3 id='p-navigation-label'>Navigation</h3>
	<div class="body">
		<ul>
			<li id="n-mainpage-description"><a href="/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
			<li id="n-recentchanges"><a href="/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
			<li id="n-randompage"><a href="/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-Community' aria-labelledby='p-Community-label'>
	<h3 id='p-Community-label'>Community</h3>
	<div class="body">
		<ul>
			<li id="n-UE4-Games"><a href="/Category:Games">UE4 Games</a></li>
			<li id="n-Dev-Blogs"><a href="/Developer_Blogs">Dev Blogs</a></li>
			<li id="n-Dev-Livestreams"><a href="/Developer_Livestreams">Dev Livestreams</a></li>
			<li id="n-Code-Sharing-Hub"><a href="/GitHub_Sharing_Hub">Code Sharing Hub</a></li>
			<li id="n-UE-User-Groups"><a href="/User_Group_Map">UE User Groups</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-Learning_Resources' aria-labelledby='p-Learning_Resources-label'>
	<h3 id='p-Learning_Resources-label'>Learning Resources</h3>
	<div class="body">
		<ul>
			<li id="n-Tutorials"><a href="/Category:Tutorials">Tutorials</a></li>
			<li id="n-Example-Projects"><a href="/Category:Example_Projects">Example Projects</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-Software_and_Tools' aria-labelledby='p-Software_and_Tools-label'>
	<h3 id='p-Software_and_Tools-label'>Software and Tools</h3>
	<div class="body">
		<ul>
			<li id="n-Plug-ins"><a href="/Category:Plug-ins">Plug-ins</a></li>
			<li id="n-Art:-3D"><a href="/3D_Art_Resources">Art: 3D</a></li>
			<li id="n-Art:-2D"><a href="/2D_Art_Resources">Art: 2D</a></li>
			<li id="n-Audio"><a href="/Audio_Resources">Audio</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-Modding' aria-labelledby='p-Modding-label'>
	<h3 id='p-Modding-label'>Modding</h3>
	<div class="body">
		<ul>
			<li id="n-Modding-Resources"><a href="/Category:Modding_Resources">Modding Resources</a></li>
			<li id="n-Moddable-Games"><a href="/Category:Moddable_Games">Moddable Games</a></li>
			<li id="n-Unreal-Tournament"><a href="/Category:Unreal_Tournament">Unreal Tournament</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-Epic_Official' aria-labelledby='p-Epic_Official-label'>
	<h3 id='p-Epic_Official-label'>Epic Official</h3>
	<div class="body">
		<ul>
			<li id="n-Website"><a href="https://www.unrealengine.com" rel="nofollow">Website</a></li>
			<li id="n-Learning-Resources"><a href="https://docs.unrealengine.com/latest/INT/" rel="nofollow">Learning Resources</a></li>
			<li id="n-Forums"><a href="https://forums.unrealengine.com/" rel="nofollow">Forums</a></li>
			<li id="n-Blog"><a href="https://www.unrealengine.com/blog" rel="nofollow">Blog</a></li>
			<li id="n-YouTube"><a href="https://www.youtube.com/UnrealEngine" rel="nofollow">YouTube</a></li>
			<li id="n-Twitch"><a href="http://www.twitch.tv/unrealengine" rel="nofollow">Twitch</a></li>
			<li id="n-Twitter"><a href="https://twitter.com/UnrealEngine" rel="nofollow">Twitter</a></li>
			<li id="n-Facebook"><a href="https://www.facebook.com/UnrealEngine" rel="nofollow">Facebook</a></li>
			<li id="n-Instagram"><a href="https://instagram.com/unrealengine/" rel="nofollow">Instagram</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-tb' aria-labelledby='p-tb-label'>
	<h3 id='p-tb-label'>Tools</h3>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="/Special:WhatLinksHere/Survival_Sample_Game:_Section_4" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="/Special:RecentChangesLinked/Survival_Sample_Game:_Section_4" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-specialpages"><a href="/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li id="t-permalink"><a href="/index.php?title=Survival_Sample_Game:_Section_4&amp;oldid=14127" title="Permanent link to this revision of the page">Permanent link</a></li>
			<li id="t-info"><a href="/index.php?title=Survival_Sample_Game:_Section_4&amp;action=info">Page information</a></li>
		</ul>
	</div>
</div>
						</div>
					</div>
				</div>				
				<div id="left-navigation">
					<div id="p-namespaces" role="navigation" class="vectorTabs" aria-labelledby="p-namespaces-label">
	<h3 id="p-namespaces-label">Namespaces</h3>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="/Survival_Sample_Game:_Section_4"  title="View the content page [c]" accesskey="c">Page</a></span></li>
					<li  id="ca-talk" class="new"><span><a href="/index.php?title=Talk:Survival_Sample_Game:_Section_4&amp;action=edit&amp;redlink=1"  title="Discussion about the content page [t]" accesskey="t">Discussion</a></span></li>
			</ul>
</div>
<div id="p-variants" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-variants-label">
	<h3 id="mw-vector-current-variant">
		</h3>
	<h3 id="p-variants-label"><span>Variants</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
				</div>
				<div id="right-navigation">
					<div id="p-views" role="navigation" class="vectorTabs" aria-labelledby="p-views-label">
	<h3 id="p-views-label">Views</h3>
	<ul>
					<li id="ca-view" class="selected"><span><a href="/Survival_Sample_Game:_Section_4" >View</a></span></li>
					<li id="ca-viewsource"><span><a href="/index.php?title=Survival_Sample_Game:_Section_4&amp;action=edit"  title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="/index.php?title=Survival_Sample_Game:_Section_4&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">History</a></span></li>
			</ul>
</div>
<div id="p-cactions" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-cactions-label">
	<h3 id="p-cactions-label"><span>Actions</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
<div id="p-personal" role="navigation" class="" aria-labelledby="p-personal-label">
	<h3 id="p-personal-label">Personal tools</h3>
	<ul>
<li id="pt-createaccount"><a href="/index.php?title=Special:UserLogin&amp;returnto=Survival+Sample+Game%3A+Section+4&amp;returntoquery=printable%3Dyes&amp;type=signup">Create account</a></li><li id="pt-login"><a href="/index.php?title=Special:UserLogin&amp;returnto=Survival+Sample+Game%3A+Section+4&amp;returntoquery=printable%3Dyes" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>	</ul>
</div>
				</div>
			</div>
		</div>
		<div id="maincol">
		<div class="mw-body" role="main">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<!-- Start of crumbs links -->
			<div class="crumbs">
			<p>
							</p>
			</div>
			<!-- End of crumbs links -->
			<h1 id="firstHeading" class="firstHeading" lang="en"><span dir="auto">Survival Sample Game: Section 4</span></h1>
			<div id="bodyContent">
				<div id="contentSub"></div>
																<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><div class="aux">
<div>
<b>Rate this Tutorial:</b> <div id="rating_"><div class="rating-score"><div class="voteboxrate">5.00</div></div><div class="rating-section"><img class="vote-rating-star" data-vote-the-vote="1" data-vote-id="" data-vote-action="3" data-vote-rating="5.00" data-vote-voted="0" id="rating__1" src="/extensions/VoteNY/images/star_on.gif" alt="" /><img class="vote-rating-star" data-vote-the-vote="2" data-vote-id="" data-vote-action="3" data-vote-rating="5.00" data-vote-voted="0" id="rating__2" src="/extensions/VoteNY/images/star_on.gif" alt="" /><img class="vote-rating-star" data-vote-the-vote="3" data-vote-id="" data-vote-action="3" data-vote-rating="5.00" data-vote-voted="0" id="rating__3" src="/extensions/VoteNY/images/star_on.gif" alt="" /><img class="vote-rating-star" data-vote-the-vote="4" data-vote-id="" data-vote-action="3" data-vote-rating="5.00" data-vote-voted="0" id="rating__4" src="/extensions/VoteNY/images/star_on.gif" alt="" /><img class="vote-rating-star" data-vote-the-vote="5" data-vote-id="" data-vote-action="3" data-vote-rating="5.00" data-vote-voted="0" id="rating__5" src="/extensions/VoteNY/images/star_on.gif" alt="" /> <span class="rating-total">(2 votes)</span></div>
				<div class="rating-clear">
			</div></div>
</div>
<div>
<p>Approved for Versions:4.7
</p>
</div>
</div>
<p>C++ Sample project covering common gameplay concepts packed in a small coop survival game.
</p>
<div id="toc" class="toc"><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Introduction"><span class="tocnumber">1</span> <span class="toctext">Introduction</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="#Links"><span class="tocnumber">1.1</span> <span class="toctext">Links</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-3"><a href="#Time_of_Day_in_Multiplayer"><span class="tocnumber">2</span> <span class="toctext">Time of Day in Multiplayer</span></a>
<ul>
<li class="toclevel-2 tocsection-4"><a href="#Client-side_smoothing"><span class="tocnumber">2.1</span> <span class="toctext">Client-side smoothing</span></a></li>
<li class="toclevel-2 tocsection-5"><a href="#Level_Setup"><span class="tocnumber">2.2</span> <span class="toctext">Level Setup</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-6"><a href="#Showing_HUD_Messages_using_Events"><span class="tocnumber">3</span> <span class="toctext">Showing HUD Messages using Events</span></a></li>
<li class="toclevel-1 tocsection-7"><a href="#Exposing_functions_to_commandline"><span class="tocnumber">4</span> <span class="toctext">Exposing functions to commandline</span></a></li>
<li class="toclevel-1 tocsection-8"><a href="#Spectating_other_players"><span class="tocnumber">5</span> <span class="toctext">Spectating other players</span></a></li>
<li class="toclevel-1 tocsection-9"><a href="#Respawning"><span class="tocnumber">6</span> <span class="toctext">Respawning</span></a>
<ul>
<li class="toclevel-2 tocsection-10"><a href="#Respawn_at_team_using_the_Navigation_Mesh"><span class="tocnumber">6.1</span> <span class="toctext">Respawn at team using the Navigation Mesh</span></a></li>
<li class="toclevel-2 tocsection-11"><a href="#Respawn_using_Spawnpoints"><span class="tocnumber">6.2</span> <span class="toctext">Respawn using Spawnpoints</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-12"><a href="#In_Closing"><span class="tocnumber">7</span> <span class="toctext">In Closing</span></a>
<ul>
<li class="toclevel-2 tocsection-13"><a href="#Links_2"><span class="tocnumber">7.1</span> <span class="toctext">Links</span></a></li>
<li class="toclevel-2 tocsection-14"><a href="#Notes"><span class="tocnumber">7.2</span> <span class="toctext">Notes</span></a></li>
</ul>
</li>
</ul>
</div>

<h2><span class="mw-headline" id="Introduction">Introduction</span></h2>
<p>In section 4 of the ongoing survival game series we introduced a dynamic time of day, advanced player spawning and a basic game loop.
</p><p>If you are not yet familiar with this ongoing project be sure to check out the <a rel="nofollow" class="external text" href="https://wiki.unrealengine.com/Survival_sample_game">project overview</a> for information on the series!
</p><p><a href="/File:Survival_section4_banner01.jpg" class="image"><img alt="Survival section4 banner01.jpg" src="https://d26ilriwvtzlb.cloudfront.net/5/5f/Survival_section4_banner01.jpg" width="1266" height="664" /></a>
</p><p>Please consider this documentation a reference guide to get additional information on topics covered in the sample game's source itself. If you have any questions or think a documented concept requires more details then feel free to leave your feedback on the <a rel="nofollow" class="external text" href="https://forums.unrealengine.com/showthread.php?69308-Announcing-Section-4-for-Survival-Game-Setting-up-the-survival-game-loop">section-specific forum thread!</a>
</p>
<h3><span class="mw-headline" id="Links">Links</span></h3>
<ul>
<li> <a rel="nofollow" class="external text" href="https://forums.unrealengine.com/showthread.php?63678-Ongoing-C-Gameplay-Example-Series-Making-a-Survival-Game">Forum Thread</a>
</li>
<li> <a rel="nofollow" class="external text" href="https://wiki.unrealengine.com/Survival_sample_game">Project Overview</a>
</li>
<li> <a rel="nofollow" class="external text" href="https://wiki.unrealengine.com/Survival_Sample_Game:_Section_3">Previous Section (Enemy AI with Behavior Trees)</a>
</li>
<li> <a rel="nofollow" class="external text" href="https://github.com/tomlooman/EpicSurvivalGameSeries">Source at GitHub</a>
</li>
</ul>
<h2><span class="mw-headline" id="Time_of_Day_in_Multiplayer">Time of Day in Multiplayer</span></h2>
<p><a href="/File:Survival_section4_tod01.jpg" class="image"><img alt="Survival section4 tod01.jpg" src="https://d26ilriwvtzlb.cloudfront.net/6/6e/Survival_section4_tod01.jpg" width="1242" height="442" /></a>
</p><p>Dynamic time of day is a common feature in (open world) survival games. In this series we use it to drive certain gameplay elements beyond visual aspect such as spawning of enemies and respawning players who died during the night at sunrise. That is entirely GameMode specific and can be omitted if you are only interested in steering your time of day in a networked scenario.
</p><p>Using the existing features, setting up a dynamic time of day is pretty simple. The primary requirements are, a DirectionalLight set to Movable, an instance of BP_SkySphere (automatically added by the default level template) and finally an Actor that holds the time and update the other actors. For this last one I created STimeOfDayManager.cpp, with BP_TimeOfDayManager to update the sun position of the BP_SkySphere which we cannot access from C++ because it's implemented in Blueprint.
</p><p>The time of day value is stored in SGameState.cpp. <a rel="nofollow" class="external text" href="https://docs.unrealengine.com/latest/INT/Gameplay/Framework/GameState/index.html">GameState</a> objects exist on both the server and client (unlike GameMode, which is unique to the server) and are a good place to store state data on the world.
</p><p>Replicated values that should appear smooth (like the sun crawling along the horizon) require some additional smoothing on the client side or the result is a choppy motion as data is only received once every few ticks and can be unpredictable with higher latency or packet loss in actual networking scenarios. The Gamemode class controls the sun position on the server side, updated once every second. The client needs to smooth out this 1-second interval by performing some simple prediction which I will explain below.
</p>
<h3><span class="mw-headline" id="Client-side_smoothing">Client-side smoothing</span></h3>
<p>The variable that controls the time of day is only updated and replicated once per second in our Gamemode. So we need to apply our own per-frame interpolation to smooth out the sun movement.
</p><p>We smooth out the movement by keeping track of the last time we received and update for ElapsedGameTime variable (stored in SGameState) and applying a prediction to the sun position based on how long ago that was multiplied by the speed the sun is moving.
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="co1">// STimeOfDayManager.cpp</span>
&#160;
<span class="kw4">void</span> ASTimeOfDayManager<span class="sy4">::</span><span class="me2">Tick</span><span class="br0">&#40;</span><span class="kw4">float</span> DeltaSeconds<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
	Super<span class="sy4">::</span><span class="me2">Tick</span><span class="br0">&#40;</span>DeltaSeconds<span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
	ASGameState<span class="sy2">*</span> MyGameState <span class="sy1">=</span> Cast<span class="sy1">&lt;</span>ASGameState<span class="sy1">&gt;</span><span class="br0">&#40;</span>GetWorld<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy2">-</span><span class="sy1">&gt;</span>GetGameState<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span>
	<span class="kw1">if</span> <span class="br0">&#40;</span>MyGameState<span class="br0">&#41;</span>
	<span class="br0">&#123;</span>
		<span class="coMULTI">/* Update the position of the sun. */</span>
		<span class="kw1">if</span> <span class="br0">&#40;</span>PrimarySunLight<span class="br0">&#41;</span>
		<span class="br0">&#123;</span>
			<span class="kw1">if</span> <span class="br0">&#40;</span>LastTimeOfDay <span class="sy1">==</span> MyGameState<span class="sy2">-</span><span class="sy1">&gt;</span>ElapsedGameMinutes<span class="br0">&#41;</span>
			<span class="br0">&#123;</span>
				TimeSinceLastIncrement <span class="sy2">+</span><span class="sy1">=</span> DeltaSeconds<span class="sy4">;</span>
			<span class="br0">&#125;</span>
			<span class="kw1">else</span>
			<span class="br0">&#123;</span>
				<span class="coMULTI">/* Reset prediction */</span>
				TimeSinceLastIncrement <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span>
			<span class="br0">&#125;</span>
&#160;
			<span class="coMULTI">/* Predict the movement of the sun to smooth out the rotations between replication updates of the actual time of day */</span>
			<span class="kw4">const</span> <span class="kw4">float</span> PredictedIncrement <span class="sy1">=</span> MyGameState<span class="sy2">-</span><span class="sy1">&gt;</span>GetTimeOfDayIncrement<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy2">*</span> TimeSinceLastIncrement<span class="sy4">;</span>
&#160;
			<span class="coMULTI">/* TimeOfDay is expressed in minutes, we need to convert this into a pitch rotation */</span>
			<span class="kw4">const</span> <span class="kw4">float</span> MinutesInDay <span class="sy1">=</span> <span class="nu0">24</span> <span class="sy2">*</span> <span class="nu0">60</span><span class="sy4">;</span>
			<span class="kw4">const</span> <span class="kw4">float</span> PitchOffset <span class="sy1">=</span> <span class="nu0">90</span><span class="sy4">;</span> <span class="coMULTI">/* The offset to account for time of day 0 should equal midnight */</span>
			<span class="kw4">const</span> <span class="kw4">float</span> PitchRotation <span class="sy1">=</span> <span class="nu0">360</span> <span class="sy2">*</span> <span class="br0">&#40;</span><span class="br0">&#40;</span>MyGameState<span class="sy2">-</span><span class="sy1">&gt;</span>ElapsedGameMinutes <span class="sy2">+</span> PredictedIncrement<span class="br0">&#41;</span> <span class="sy2">/</span> MinutesInDay<span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
			FRotator NewSunRotation <span class="sy1">=</span> FRotator<span class="br0">&#40;</span>PitchRotation <span class="sy2">+</span> PitchOffset, <span class="nu17">45.0f</span>, <span class="nu0">0</span><span class="br0">&#41;</span><span class="sy4">;</span>
			PrimarySunLight<span class="sy2">-</span><span class="sy1">&gt;</span>SetActorRelativeRotation<span class="br0">&#40;</span>NewSunRotation<span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
			LastTimeOfDay <span class="sy1">=</span> MyGameState<span class="sy2">-</span><span class="sy1">&gt;</span>ElapsedGameMinutes<span class="sy4">;</span>
		<span class="br0">&#125;</span>
       <span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre></div></div>
<p>This yields a nice and smooth sun crawling along the sky with a time of day that is only replicated once per second.
</p>
<h3><span class="mw-headline" id="Level_Setup">Level Setup</span></h3>
<p>The dynamic time of day requires a few Actors to exist and be properly configured in your level. The BP_SkySphere, which is included with default map template. A directional light, that must be set to <b>Movable</b>. A SkyLight Actor, also set to <b>Movable</b> and finally our own Blueprint object BP_TimeOfDayManager (in Content/Base/...)
</p><p><a href="/File:Survival_section4_level01.jpg" class="image"><img alt="Survival section4 level01.jpg" src="https://d26ilriwvtzlb.cloudfront.net/a/aa/Survival_section4_level01.jpg" width="1696" height="589" /></a>
</p><p>BP_TimeOfDayManager grabs references to the skylight, directional light and skysphere objects during BeginPlay, so there is no further manual setup required.
</p>
<h2><span class="mw-headline" id="Showing_HUD_Messages_using_Events">Showing HUD Messages using Events</span></h2>
<p><a href="/File:Survival_section4_hudevents.jpg" class="image"><img alt="Survival section4 hudevents.jpg" src="https://d26ilriwvtzlb.cloudfront.net/0/0d/Survival_section4_hudevents.jpg" width="1262" height="414" /></a>
</p><p>When an important gameplay event happens we want to notify the player through the HUD. One example is announcing the sun has fallen and the dangerous night just started. We set up the event function in C++ and make it Blueprint accessible. Now when something interesting happens the Blueprint HUD class can respond by updating a text widget with the text data we sent.
</p><p>The function is marked BlueprintImplementableEvent so we can setup the HUD in Blueprint to pass the FString data to the appropriate UMG Widget (which our C++ level has no reference to, so we must do this in Blueprint)
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="co1">// SHUD.cpp</span>
&#160;
<span class="coMULTI">/* An event hook to call HUD text events to display in the HUD. Blueprint HUD class must implement how to deal with this event. */</span>
UFUNCTION<span class="br0">&#40;</span>BlueprintImplementableEvent, Category <span class="sy1">=</span> <span class="st0">&quot;HUDEvents&quot;</span><span class="br0">&#41;</span>
<span class="kw4">void</span> MessageReceived<span class="br0">&#40;</span><span class="kw4">const</span> FString<span class="sy3">&amp;</span> TextMessage<span class="br0">&#41;</span><span class="sy4">;</span></pre></div></div>
<p>The Blueprint implementation simply redirects this event to the UMG widget where we added a function called SetMessage to internally update a Text Block (and perform some timer logic to fade-out after several sections)
</p><p><a href="/File:Survival_section4_hudBP01.jpg" class="image"><img alt="Survival section4 hudBP01.jpg" src="https://d26ilriwvtzlb.cloudfront.net/9/91/Survival_section4_hudBP01.jpg" width="1062" height="473" /></a>
</p><p>This type of event messaging is great for many different interactions between the C++ and your HUD. For example one could use it to display hit notifications when a zombie damaged the player.
</p>
<h2><span class="mw-headline" id="Exposing_functions_to_commandline">Exposing functions to commandline</span></h2>
<p>It's very easy to expose your functions to the command line (~ tilde) input which is incredibly valuable for debugging (eg. infinite ammo, god mode, teleport etc.) All you need is to specify the "exec" keyword with your UFUNCTION() as below.
</p><p><a href="/File:Survival_section4_cmdline.jpg" class="image"><img alt="Survival section4 cmdline.jpg" src="https://d26ilriwvtzlb.cloudfront.net/a/a8/Survival_section4_cmdline.jpg" width="1075" height="304" /></a>
</p><p>While in-game, type ~ (tilde) and start typing your function name, you will see it appear in the auto completion and it supports parameter passing like the time of day float in the sample above.
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="co1">// SGameState.cpp</span>
&#160;
<span class="coMULTI">/* By passing in &quot;exec&quot; we expose it as a command line (press ~ to open) */</span>
UFUNCTION<span class="br0">&#40;</span>exec<span class="br0">&#41;</span>
<span class="kw4">void</span> SetTimeOfDay<span class="br0">&#40;</span><span class="kw4">float</span> NewTimeOfDay<span class="br0">&#41;</span><span class="sy4">;</span></pre></div></div>
<p>Exposing functions this way is a great tool for debugging, but keep in mind that most commands are only valid on the server.
</p>
<h2><span class="mw-headline" id="Spectating_other_players">Spectating other players</span></h2>
<p><a href="/File:Survival_section4_spectating.jpg" class="image"><img alt="Survival section4 spectating.jpg" src="https://d26ilriwvtzlb.cloudfront.net/0/0b/Survival_section4_spectating.jpg" width="1254" height="344" /></a>
</p><p>When a player dies and another player is still alive he will spectate the player until he respawns. With the current ruleset respawning happens at sunrise (more on that in the next block "Respawning" below)
</p><p>In the following code snippet (taken from SPlayerController) you can see we initiate spectating at the UnFreeze() call (the moment the controller receives access to input) which happens almost immediately after death.
</p><p>The state is updated to Spectating on client and server and by calling ViewAPlayer(direction) we set the spectating focus on on the other player that is (possibly) still alive. Finally the HUD is updated to show the spectator screen.
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="co1">// SPlayerController.cpp</span>
&#160;
<span class="kw4">void</span> ASPlayerController<span class="sy4">::</span><span class="me2">UnFreeze</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>
	Super<span class="sy4">::</span><span class="me2">UnFreeze</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
        <span class="co1">// ...</span>
&#160;
	StartSpectating<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
<span class="br0">&#125;</span>
&#160;
<span class="kw4">void</span> ASPlayerController<span class="sy4">::</span><span class="me2">StartSpectating</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>
	<span class="coMULTI">/* Update the state on server */</span>
	PlayerState<span class="sy2">-</span><span class="sy1">&gt;</span>bIsSpectator <span class="sy1">=</span> <span class="kw2">true</span><span class="sy4">;</span>
	ChangeState<span class="br0">&#40;</span>NAME_Spectating<span class="br0">&#41;</span><span class="sy4">;</span>
	<span class="coMULTI">/* Push the state update to the client */</span>
	ClientGotoState<span class="br0">&#40;</span>NAME_Spectating<span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
	<span class="coMULTI">/* Focus on the remaining alive player */</span>
	ViewAPlayer<span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
	<span class="coMULTI">/* Update the HUD to show the spectator screen */</span>
	ClientHUDStateChanged<span class="br0">&#40;</span>EHUDState<span class="sy4">::</span><span class="me2">Spectating</span><span class="br0">&#41;</span><span class="sy4">;</span>
<span class="br0">&#125;</span></pre></div></div>
<p>The ViewAPlayer takes care of the camera management of setting it to the 3rd-person view, locked to the remaining player. You can repeatedly call this function to cycle through remaining players while spectating. Keep in mind that we filter out the bots by overwriting the CanSpectate logic of GameMode, see below.
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="kw4">bool</span> ASGameMode<span class="sy4">::</span><span class="me2">CanSpectate</span><span class="br0">&#40;</span>APlayerController<span class="sy2">*</span> Viewer, APlayerState<span class="sy2">*</span> ViewTarget<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
	<span class="coMULTI">/* Don't allow spectating of other non-player bots */</span>
	<span class="kw1">return</span> <span class="br0">&#40;</span>ViewTarget <span class="sy3">&amp;&amp;</span> <span class="sy3">!</span>ViewTarget<span class="sy2">-</span><span class="sy1">&gt;</span>bIsABot<span class="br0">&#41;</span><span class="sy4">;</span>
<span class="br0">&#125;</span></pre></div></div>
<p>This could be further extended to filter by TeamIndex if multiple teams exist on the map or by checking if the player is still alive.
</p>
<h2><span class="mw-headline" id="Respawning">Respawning</span></h2>
<p>By default the gamemode attempts to spawn players and bots at PlayerStart actors. You can add your own logic on how to pick the best player start, for example by checking if a start is exclusive to a specific team, or if it's a player-only spawn or through a weighting system that does line of sight checks so any spawnpoint out of sight of players is preferred. You simply implement any kind of logic in the ChoosePlayerStart function of GameMode, see "Respawn Using Spawnpoints" below for an example.
</p><p>For the coop gamemode we respawn players not at PlayerStarts, but near teammates.
</p>
<h3><span class="mw-headline" id="Respawn_at_team_using_the_Navigation_Mesh">Respawn at team using the Navigation Mesh</span></h3>
<p><a href="/File:Survival_section4_navmeshrespawn.jpg" class="image"><img alt="Survival section4 navmeshrespawn.jpg" src="https://d26ilriwvtzlb.cloudfront.net/8/80/Survival_section4_navmeshrespawn.jpg" width="1816" height="558" /></a>
</p><p>In the coop ruleset we (re-)spawn at any player that is still alive. For this we utilize the NavigationMesh data that is orignally intended for AI pathfinding. (Press "P" in the map to see the navigation mesh, if your map doesn't have a nav mesh you need to insert a <b>NavMeshBoundsVolume</b>) By using this navigation data we know it will get a valid walking position and we don't accidentally spawn our player into a wall or other blocking Actor.
</p><p>The following function to respawn the player can be split into 4 distinct parts. First we try to get a position and rotation from the first alive player we can find. If we failed to find a player, we fall back to using PlayerStart Actors instead (as defined in the base class of GameMode) On success however, we query the navigation system to find a random point in a small radius around the other player. The final part is almost identical to the base GameMode function and it's where we create a new pawn, let the controller possess it and finally adjust rotation to match that of the currently alive player.
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="co1">// SGameMode.cpp</span>
&#160;
<span class="kw4">void</span> ASGameMode<span class="sy4">::</span><span class="me2">RestartPlayer</span><span class="br0">&#40;</span><span class="kw2">class</span> AController<span class="sy2">*</span> NewPlayer<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
	<span class="co1">// ...</span>
&#160;
	<span class="coMULTI">/* Look for a live player to spawn next to */</span>
	FVector SpawnOrigin <span class="sy1">=</span> FVector<span class="sy4">::</span><span class="me2">ZeroVector</span><span class="sy4">;</span>
	FRotator StartRotation <span class="sy1">=</span> FRotator<span class="sy4">::</span><span class="me2">ZeroRotator</span><span class="sy4">;</span>
	<span class="kw1">for</span> <span class="br0">&#40;</span>FConstPawnIterator It <span class="sy1">=</span> GetWorld<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy2">-</span><span class="sy1">&gt;</span>GetPawnIterator<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span> It<span class="sy4">;</span> It<span class="sy2">++</span><span class="br0">&#41;</span>
	<span class="br0">&#123;</span>
		ASCharacter<span class="sy2">*</span> MyCharacter <span class="sy1">=</span> Cast<span class="sy1">&lt;</span>ASCharacter<span class="sy1">&gt;</span><span class="br0">&#40;</span><span class="sy2">*</span>It<span class="br0">&#41;</span><span class="sy4">;</span>
		<span class="kw1">if</span> <span class="br0">&#40;</span>MyCharacter <span class="sy3">&amp;&amp;</span> MyCharacter<span class="sy2">-</span><span class="sy1">&gt;</span>IsAlive<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
		<span class="br0">&#123;</span>
			<span class="coMULTI">/* Get the origin of the first player we can find */</span>
			SpawnOrigin <span class="sy1">=</span> MyCharacter<span class="sy2">-</span><span class="sy1">&gt;</span>GetActorLocation<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
			StartRotation <span class="sy1">=</span> MyCharacter<span class="sy2">-</span><span class="sy1">&gt;</span>GetActorRotation<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
			<span class="kw1">break</span><span class="sy4">;</span>
		<span class="br0">&#125;</span>
	<span class="br0">&#125;</span>
&#160;
	<span class="coMULTI">/* No player is alive (yet) - spawn using one of the PlayerStarts */</span>
	<span class="kw1">if</span> <span class="br0">&#40;</span>SpawnOrigin <span class="sy1">==</span> FVector<span class="sy4">::</span><span class="me2">ZeroVector</span><span class="br0">&#41;</span>
	<span class="br0">&#123;</span>
		Super<span class="sy4">::</span><span class="me2">RestartPlayer</span><span class="br0">&#40;</span>NewPlayer<span class="br0">&#41;</span><span class="sy4">;</span>
		<span class="kw1">return</span><span class="sy4">;</span>
	<span class="br0">&#125;</span>
&#160;
	<span class="coMULTI">/* Get a point on the nav mesh near the other player */</span>
	FVector StartLocation <span class="sy1">=</span> UNavigationSystem<span class="sy4">::</span><span class="me2">GetRandomPointInRadius</span><span class="br0">&#40;</span>NewPlayer, SpawnOrigin, <span class="nu17">250.0f</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
	<span class="co1">// Try to create a pawn to use of the default class for this player</span>
	<span class="kw1">if</span> <span class="br0">&#40;</span>NewPlayer<span class="sy2">-</span><span class="sy1">&gt;</span>GetPawn<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy1">==</span> nullptr <span class="sy3">&amp;&amp;</span> GetDefaultPawnClassForController<span class="br0">&#40;</span>NewPlayer<span class="br0">&#41;</span> <span class="sy3">!</span><span class="sy1">=</span> nullptr<span class="br0">&#41;</span>
	<span class="br0">&#123;</span>
		FActorSpawnParameters SpawnInfo<span class="sy4">;</span>
		SpawnInfo.<span class="me1">Instigator</span> <span class="sy1">=</span> Instigator<span class="sy4">;</span>
		APawn<span class="sy2">*</span> ResultPawn <span class="sy1">=</span> GetWorld<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy2">-</span><span class="sy1">&gt;</span>SpawnActor<span class="sy1">&lt;</span>APawn<span class="sy1">&gt;</span><span class="br0">&#40;</span>GetDefaultPawnClassForController<span class="br0">&#40;</span>NewPlayer<span class="br0">&#41;</span>, StartLocation, StartRotation, SpawnInfo<span class="br0">&#41;</span><span class="sy4">;</span>
		<span class="kw1">if</span> <span class="br0">&#40;</span>ResultPawn <span class="sy1">==</span> nullptr<span class="br0">&#41;</span>
		<span class="br0">&#123;</span>
			UE_LOG<span class="br0">&#40;</span>LogGameMode, Warning, TEXT<span class="br0">&#40;</span><span class="st0">&quot;Couldn't spawn Pawn of type&#160;%s at&#160;%s&quot;</span><span class="br0">&#41;</span>, <span class="sy2">*</span>GetNameSafe<span class="br0">&#40;</span>DefaultPawnClass<span class="br0">&#41;</span>, <span class="sy3">&amp;</span>StartLocation<span class="br0">&#41;</span><span class="sy4">;</span>
		<span class="br0">&#125;</span>
		NewPlayer<span class="sy2">-</span><span class="sy1">&gt;</span>SetPawn<span class="br0">&#40;</span>ResultPawn<span class="br0">&#41;</span><span class="sy4">;</span>
	<span class="br0">&#125;</span>
&#160;
	<span class="kw1">if</span> <span class="br0">&#40;</span>NewPlayer<span class="sy2">-</span><span class="sy1">&gt;</span>GetPawn<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy1">==</span> nullptr<span class="br0">&#41;</span>
	<span class="br0">&#123;</span>
		NewPlayer<span class="sy2">-</span><span class="sy1">&gt;</span>FailedToSpawnPawn<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
	<span class="br0">&#125;</span>
	<span class="kw1">else</span>
	<span class="br0">&#123;</span>
		NewPlayer<span class="sy2">-</span><span class="sy1">&gt;</span>Possess<span class="br0">&#40;</span>NewPlayer<span class="sy2">-</span><span class="sy1">&gt;</span>GetPawn<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
		<span class="co1">// If the Pawn is destroyed as part of possession we have to abort</span>
		<span class="kw1">if</span> <span class="br0">&#40;</span>NewPlayer<span class="sy2">-</span><span class="sy1">&gt;</span>GetPawn<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy1">==</span> nullptr<span class="br0">&#41;</span>
		<span class="br0">&#123;</span>
			NewPlayer<span class="sy2">-</span><span class="sy1">&gt;</span>FailedToSpawnPawn<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
		<span class="br0">&#125;</span>
		<span class="kw1">else</span>
		<span class="br0">&#123;</span>
			<span class="co1">// Set initial control rotation to player start's rotation</span>
			NewPlayer<span class="sy2">-</span><span class="sy1">&gt;</span>ClientSetRotation<span class="br0">&#40;</span>NewPlayer<span class="sy2">-</span><span class="sy1">&gt;</span>GetPawn<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy2">-</span><span class="sy1">&gt;</span>GetActorRotation<span class="br0">&#40;</span><span class="br0">&#41;</span>, <span class="kw2">true</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
			FRotator NewControllerRot <span class="sy1">=</span> StartRotation<span class="sy4">;</span>
			NewControllerRot.<span class="me1">Roll</span> <span class="sy1">=</span> <span class="nu0">0</span>.<span class="me1">f</span><span class="sy4">;</span>
			NewPlayer<span class="sy2">-</span><span class="sy1">&gt;</span>SetControlRotation<span class="br0">&#40;</span>NewControllerRot<span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
			SetPlayerDefaults<span class="br0">&#40;</span>NewPlayer<span class="sy2">-</span><span class="sy1">&gt;</span>GetPawn<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span>
		<span class="br0">&#125;</span>
	<span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre></div></div>
<h3><span class="mw-headline" id="Respawn_using_Spawnpoints">Respawn using Spawnpoints</span></h3>
<p><a href="/File:Survival_section4_spawnpoints.jpg" class="image"><img alt="Survival section4 spawnpoints.jpg" src="https://d26ilriwvtzlb.cloudfront.net/6/6c/Survival_section4_spawnpoints.jpg" width="1835" height="639" /></a>
</p><p>To spawn enemies and players into our level we setup PlayerStart actors at appropriate points. To designate a specific PlayerStart as "player only" we setup an extension SPlayerStart.cpp with a boolean bPlayerOnly. The base PlayerStart can still be used to spawn the zombie AI and if the bPlayerOnly is TRUE it's automatically the preferred spawn location for any player.
</p><p>The ChoosePlayerStart function is called by RestartPlayer on respawn. By checking IsSpawnpointAllowed and IsSpawnpointPreferred on all playerstarts we can determine the best spawn position for bots and players.
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="co1">// SGameMode.cpp</span>
&#160;
AActor<span class="sy2">*</span> ASGameMode<span class="sy4">::</span><span class="me2">ChoosePlayerStart</span><span class="br0">&#40;</span>AController<span class="sy2">*</span> Player<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
	TArray<span class="sy1">&lt;</span>APlayerStart<span class="sy2">*</span><span class="sy1">&gt;</span> PreferredSpawns<span class="sy4">;</span>
	TArray<span class="sy1">&lt;</span>APlayerStart<span class="sy2">*</span><span class="sy1">&gt;</span> FallbackSpawns<span class="sy4">;</span>
&#160;
	<span class="kw1">for</span> <span class="br0">&#40;</span><span class="kw4">int32</span> i <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span> i <span class="sy1">&lt;</span> PlayerStarts.<span class="me1">Num</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span> i<span class="sy2">++</span><span class="br0">&#41;</span>
	<span class="br0">&#123;</span>
		APlayerStart<span class="sy2">*</span> TestStart <span class="sy1">=</span> PlayerStarts<span class="br0">&#91;</span>i<span class="br0">&#93;</span><span class="sy4">;</span>
		<span class="kw1">if</span> <span class="br0">&#40;</span>IsSpawnpointAllowed<span class="br0">&#40;</span>TestStart, Player<span class="br0">&#41;</span><span class="br0">&#41;</span>
		<span class="br0">&#123;</span>
			<span class="kw1">if</span> <span class="br0">&#40;</span>IsSpawnpointPreferred<span class="br0">&#40;</span>TestStart, Player<span class="br0">&#41;</span><span class="br0">&#41;</span>
			<span class="br0">&#123;</span>
				PreferredSpawns.<span class="me1">Add</span><span class="br0">&#40;</span>TestStart<span class="br0">&#41;</span><span class="sy4">;</span>
			<span class="br0">&#125;</span>
			<span class="kw1">else</span>
			<span class="br0">&#123;</span>
				FallbackSpawns.<span class="me1">Add</span><span class="br0">&#40;</span>TestStart<span class="br0">&#41;</span><span class="sy4">;</span>
			<span class="br0">&#125;</span>
		<span class="br0">&#125;</span>
	<span class="br0">&#125;</span>
&#160;
	APlayerStart<span class="sy2">*</span> BestStart <span class="sy1">=</span> nullptr<span class="sy4">;</span>
	<span class="kw1">if</span> <span class="br0">&#40;</span>PreferredSpawns.<span class="me1">Num</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy1">&gt;</span> <span class="nu0">0</span><span class="br0">&#41;</span>
	<span class="br0">&#123;</span>
		BestStart <span class="sy1">=</span> PreferredSpawns<span class="br0">&#91;</span>FMath<span class="sy4">::</span><span class="me2">RandHelper</span><span class="br0">&#40;</span>PreferredSpawns.<span class="me1">Num</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#93;</span><span class="sy4">;</span>
	<span class="br0">&#125;</span>
	<span class="kw1">else</span> <span class="kw1">if</span> <span class="br0">&#40;</span>FallbackSpawns.<span class="me1">Num</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy1">&gt;</span> <span class="nu0">0</span><span class="br0">&#41;</span>
	<span class="br0">&#123;</span>
		BestStart <span class="sy1">=</span> FallbackSpawns<span class="br0">&#91;</span>FMath<span class="sy4">::</span><span class="me2">RandHelper</span><span class="br0">&#40;</span>FallbackSpawns.<span class="me1">Num</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#93;</span><span class="sy4">;</span>
	<span class="br0">&#125;</span>
&#160;
	<span class="kw1">return</span> BestStart <span class="sy4">?</span> BestStart <span class="sy4">:</span> Super<span class="sy4">::</span><span class="me2">ChoosePlayerStart</span><span class="br0">&#40;</span>Player<span class="br0">&#41;</span><span class="sy4">;</span>
<span class="br0">&#125;</span>
&#160;
<span class="coMULTI">/* Check to see if a player and/or AI may spawn at the PlayerStart */</span>
<span class="kw4">bool</span> ASGameMode<span class="sy4">::</span><span class="me2">IsSpawnpointAllowed</span><span class="br0">&#40;</span>APlayerStart<span class="sy2">*</span> SpawnPoint, AController<span class="sy2">*</span> Controller<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
	<span class="kw1">if</span> <span class="br0">&#40;</span>Controller <span class="sy1">==</span> nullptr <span class="sy3">||</span> Controller<span class="sy2">-</span><span class="sy1">&gt;</span>PlayerState <span class="sy1">==</span> nullptr<span class="br0">&#41;</span>
		<span class="kw1">return</span> <span class="kw2">true</span><span class="sy4">;</span>
&#160;
	<span class="coMULTI">/* Check for extended playerstart class */</span>
	ASPlayerStart<span class="sy2">*</span> MyPlayerStart <span class="sy1">=</span> Cast<span class="sy1">&lt;</span>ASPlayerStart<span class="sy1">&gt;</span><span class="br0">&#40;</span>SpawnPoint<span class="br0">&#41;</span><span class="sy4">;</span>
	<span class="kw1">if</span> <span class="br0">&#40;</span>MyPlayerStart<span class="br0">&#41;</span>
	<span class="br0">&#123;</span>
		<span class="kw1">return</span> MyPlayerStart<span class="sy2">-</span><span class="sy1">&gt;</span>GetIsPlayerOnly<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy3">&amp;&amp;</span> <span class="sy3">!</span>Controller<span class="sy2">-</span><span class="sy1">&gt;</span>PlayerState<span class="sy2">-</span><span class="sy1">&gt;</span>bIsABot<span class="sy4">;</span>
	<span class="br0">&#125;</span>
&#160;
	<span class="coMULTI">/* Cast failed, Anyone can spawn at the base playerstart class */</span>
	<span class="kw1">return</span> <span class="kw2">true</span><span class="sy4">;</span>
<span class="br0">&#125;</span>
&#160;
<span class="kw4">bool</span> ASGameMode<span class="sy4">::</span><span class="me2">IsSpawnpointPreferred</span><span class="br0">&#40;</span>APlayerStart<span class="sy2">*</span> SpawnPoint, AController<span class="sy2">*</span> Controller<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
	<span class="kw1">if</span> <span class="br0">&#40;</span>SpawnPoint<span class="br0">&#41;</span>
	<span class="br0">&#123;</span>
		<span class="coMULTI">/* Iterate all pawns to check for collision overlaps with the spawn point */</span>
		<span class="kw4">const</span> FVector SpawnLocation <span class="sy1">=</span> SpawnPoint<span class="sy2">-</span><span class="sy1">&gt;</span>GetActorLocation<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
		<span class="kw1">for</span> <span class="br0">&#40;</span>FConstPawnIterator It <span class="sy1">=</span> GetWorld<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy2">-</span><span class="sy1">&gt;</span>GetPawnIterator<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span> It<span class="sy4">;</span> It<span class="sy2">++</span><span class="br0">&#41;</span>
		<span class="br0">&#123;</span>
			ACharacter<span class="sy2">*</span> OtherPawn <span class="sy1">=</span> Cast<span class="sy1">&lt;</span>ACharacter<span class="sy1">&gt;</span><span class="br0">&#40;</span><span class="sy2">*</span>It<span class="br0">&#41;</span><span class="sy4">;</span>
			<span class="kw1">if</span> <span class="br0">&#40;</span>OtherPawn<span class="br0">&#41;</span>
			<span class="br0">&#123;</span>
				<span class="kw4">const</span> <span class="kw4">float</span> CombinedHeight <span class="sy1">=</span> <span class="br0">&#40;</span>SpawnPoint<span class="sy2">-</span><span class="sy1">&gt;</span>GetCapsuleComponent<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy2">-</span><span class="sy1">&gt;</span>GetScaledCapsuleHalfHeight<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy2">+</span> OtherPawn<span class="sy2">-</span><span class="sy1">&gt;</span>GetCapsuleComponent<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy2">-</span><span class="sy1">&gt;</span>GetScaledCapsuleHalfHeight<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="sy2">*</span> <span class="nu17">2.0f</span><span class="sy4">;</span>
				<span class="kw4">const</span> <span class="kw4">float</span> CombinedWidth <span class="sy1">=</span> SpawnPoint<span class="sy2">-</span><span class="sy1">&gt;</span>GetCapsuleComponent<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy2">-</span><span class="sy1">&gt;</span>GetScaledCapsuleRadius<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy2">+</span> OtherPawn<span class="sy2">-</span><span class="sy1">&gt;</span>GetCapsuleComponent<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy2">-</span><span class="sy1">&gt;</span>GetScaledCapsuleRadius<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
				<span class="kw4">const</span> FVector OtherLocation <span class="sy1">=</span> OtherPawn<span class="sy2">-</span><span class="sy1">&gt;</span>GetActorLocation<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
				<span class="co1">// Check if player overlaps the playerstart</span>
				<span class="kw1">if</span> <span class="br0">&#40;</span>FMath<span class="sy4">::</span><span class="me2">Abs</span><span class="br0">&#40;</span>SpawnLocation.<span class="me1">Z</span> <span class="sy2">-</span> OtherLocation.<span class="me1">Z</span><span class="br0">&#41;</span> <span class="sy1">&lt;</span> CombinedHeight <span class="sy3">&amp;&amp;</span> <span class="br0">&#40;</span>SpawnLocation <span class="sy2">-</span> OtherLocation<span class="br0">&#41;</span>.<span class="me1">Size2D</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy1">&lt;</span> CombinedWidth<span class="br0">&#41;</span>
				<span class="br0">&#123;</span>
					<span class="kw1">return</span> <span class="kw2">false</span><span class="sy4">;</span>
				<span class="br0">&#125;</span>
			<span class="br0">&#125;</span>
		<span class="br0">&#125;</span>
&#160;
		<span class="coMULTI">/* Check if spawnpoint is exclusive to players */</span>
		ASPlayerStart<span class="sy2">*</span> MyPlayerStart <span class="sy1">=</span> Cast<span class="sy1">&lt;</span>ASPlayerStart<span class="sy1">&gt;</span><span class="br0">&#40;</span>SpawnPoint<span class="br0">&#41;</span><span class="sy4">;</span>
		<span class="kw1">if</span> <span class="br0">&#40;</span>MyPlayerStart<span class="br0">&#41;</span>
		<span class="br0">&#123;</span>
			<span class="kw1">return</span> MyPlayerStart<span class="sy2">-</span><span class="sy1">&gt;</span>GetIsPlayerOnly<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy3">&amp;&amp;</span> <span class="sy3">!</span>Controller<span class="sy2">-</span><span class="sy1">&gt;</span>PlayerState<span class="sy2">-</span><span class="sy1">&gt;</span>bIsABot<span class="sy4">;</span>
		<span class="br0">&#125;</span>
	<span class="br0">&#125;</span>
&#160;
	<span class="kw1">return</span> <span class="kw2">false</span><span class="sy4">;</span>
<span class="br0">&#125;</span></pre></div></div>
<p>This is pretty basic implementation of a spawn system. More advanced spawning could include line of sight checks to make sure we don't spawn enemies when a player is looking at that particular spawn point and take distance between spawns and players into account to either spread players out or keep them closely together.
</p>
<h2><span class="mw-headline" id="In_Closing">In Closing</span></h2>
<p>In the fourth section we added a basic framework for the gameloop of spawning both players and AI, a replicated time of day, scoring on kills and nights survived as well as a failure state for the game mode.
</p><p>Section 5 will be announced later this week May 22nd, so keep an eye out on the <a rel="nofollow" class="external text" href="https://forums.unrealengine.com/forumdisplay.php?8-Announcements-and-Releases">Announcement Forums</a>!
</p><p>If you have feedback or questions on this section, feel free to reach out through the <a rel="nofollow" class="external text" href="https://forums.unrealengine.com/showthread.php?69308-Announcing-Section-4-for-Survival-Game-Setting-up-the-survival-game-loop">official forum thread</a>.
</p>
<h3><span class="mw-headline" id="Links_2">Links</span></h3>
<ul>
<li> <a rel="nofollow" class="external text" href="https://forums.unrealengine.com/showthread.php?63678-Ongoing-C-Gameplay-Example-Series-Making-a-Survival-Game">Forum Thread</a>
</li>
<li> <a rel="nofollow" class="external text" href="https://wiki.unrealengine.com/Survival_sample_game">Project Overview</a>
</li>
<li> <a rel="nofollow" class="external text" href="https://wiki.unrealengine.com/Survival_Sample_Game:_Section_3">Previous Section (Enemy AI with Behavior Trees)</a>
</li>
<li> <a rel="nofollow" class="external text" href="https://github.com/tomlooman/EpicSurvivalGameSeries">Source at GitHub</a>
</li>
</ul>
<h3><span class="mw-headline" id="Notes">Notes</span></h3>
<p>Please keep in mind we assigned our SLocalPlayer in DefaultEngine.ini in case you are migrating code into your own project.
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="br0">&#91;</span><span class="sy2">/</span>Script<span class="sy2">/</span>Engine.<span class="me1">Engine</span><span class="br0">&#93;</span>
<span class="sy4">;</span> Our custom LocalPlayer <span class="kw2">class</span>
LocalPlayerClassName<span class="sy1">=</span><span class="sy2">/</span>Script<span class="sy2">/</span>SurvivalGame.<span class="me1">SLocalPlayer</span></pre></div></div>
<p><br />
<b>Project &amp; Wiki by <a rel="nofollow" class="external text" href="http://www.tomlooman.com/">Tom Looman</a></b>
</p>
<!-- 
NewPP limit report
CPU time usage: 0.121 seconds
Real time usage: 0.372 seconds
Preprocessor visited node count: 134/1000000
Preprocessor generated node count: 270/1000000
Post‐expand include size: 167/2097152 bytes
Template argument size: 11/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
-->
</div>												<div class="printfooter">
				Retrieved from "<a href="https://wiki.unrealengine.com/index.php?title=Survival_Sample_Game:_Section_4&amp;oldid=14127">https://wiki.unrealengine.com/index.php?title=Survival_Sample_Game:_Section_4&amp;oldid=14127</a>"				</div>
												<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="/Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="/Category:Tutorial" title="Category:Tutorial">Tutorial</a></li><li><a href="/index.php?title=Category:SurvivalGameSeries&amp;action=edit&amp;redlink=1" class="new" title="Category:SurvivalGameSeries (page does not exist)">SurvivalGameSeries</a></li><li><a href="/Category:Code" title="Category:Code">Code</a></li></ul></div><div id="mw-hidden-catlinks" class="mw-hidden-catlinks mw-hidden-cats-hidden">Hidden category: <ul><li><a href="/Category:Templates" title="Category:Templates">Templates</a></li></ul></div></div>												<div class="visualClear"></div>
							</div>
		</div>
		</div>
		</div>
		
		<div id="footer">
			<div id="brand">

			</div>
			<div id="legal">
				<div id="copyright">
					&copy; 2004-2015, Epic Games, Inc. All rights reserved. Unreal and its logo are Epic's trademarks or registered trademarks in the US and elsewhere.
				</div>
				<div id="terms">
					<a target="_blank" href="http://epicgames.com/tou">TERMS OF USE</a> | <a target="_blank" href="http://epicgames.com/privacynotice">PRIVACY POLICY</a>
				</div>
			</div>
		</div>
	</div>
		<!--<div id="footer" role="contentinfo">
										<ul id="footer-icons" class="noprint">
					<li id="footer-copyrightico">
						<div name="copyright">&#169; 2004-2014, Epic Games, Inc. All rights reserved. Epic Games, Unreal, Unreal Engine, Unreal Tournament, and their respective logos are Epic's trademarks or registered trademarks in the US and elsewhere.</div>
					</li>
					<li id="footer-termsofuseico">
						<div name="termsofuse"><a href="http://epicgames.com/tou" target="_blank">Terms of Use</a></div>
					</li>
					<li id="footer-privacynoticeico">
						<div name="privacynotice"><a href="http://epicgames.com/privacynotice" target="_blank">Privacy Policy</a></div>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>-->
		<script>/*<![CDATA[*/window.jQuery && jQuery.ready();/*]]>*/</script><script>if(window.mw){
mw.loader.state({"site":"loading","user":"ready","user.groups":"ready"});
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.action.view.postEdit","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.searchSuggest","skins.vector.collapsibleNav"],null,true);
}</script>
<script src="/extensions/EpicSearchSystem/Javascript/Search.js?303"></script>
<script src="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;printable=1&amp;skin=epic&amp;*"></script>
<!-- Served in 0.439 secs. -->		<img src="https://tracking.unrealengine.com/track.png" width="1" height="1">
		<!--<script type="text/javascript">
			setTimeout(function () {
				var a = document.createElement("script");
				var b = document.getElementsByTagName("script")[0];
				a.src = document.location.protocol + "//script.crazyegg.com/pages/scripts/0028/4572.js?" + Math.floor(new Date().getTime() / 3600000);
				a.async = true; a.type = "text/javascript"; b.parentNode.insertBefore(a, b)
			}, 1);
		</script>-->
	</body>
</html>

		