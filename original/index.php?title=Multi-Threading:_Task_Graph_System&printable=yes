<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/><script type="text/javascript">window.NREUM||(NREUM={}),__nr_require=function(e,t,n){function r(n){if(!t[n]){var o=t[n]={exports:{}};e[n][0].call(o.exports,function(t){var o=e[n][1][t];return r(o||t)},o,o.exports)}return t[n].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<n.length;o++)r(n[o]);return r}({1:[function(e,t,n){function r(){}function o(e,t,n){return function(){return i(e,[f.now()].concat(u(arguments)),t?null:this,n),t?void 0:this}}var i=e("handle"),a=e(2),u=e(3),c=e("ee").get("tracer"),f=e("loader"),s=NREUM;"undefined"==typeof window.newrelic&&(newrelic=s);var p=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit","addRelease"],d="api-",l=d+"ixn-";a(p,function(e,t){s[t]=o(d+t,!0,"api")}),s.addPageAction=o(d+"addPageAction",!0),s.setCurrentRouteName=o(d+"routeName",!0),t.exports=newrelic,s.interaction=function(){return(new r).get()};var m=r.prototype={createTracer:function(e,t){var n={},r=this,o="function"==typeof t;return i(l+"tracer",[f.now(),e,n],r),function(){if(c.emit((o?"":"no-")+"fn-start",[f.now(),r,o],n),o)try{return t.apply(this,arguments)}catch(e){throw c.emit("fn-err",[arguments,this,e],n),e}finally{c.emit("fn-end",[f.now()],n)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(e,t){m[t]=o(l+t)}),newrelic.noticeError=function(e){"string"==typeof e&&(e=new Error(e)),i("err",[e,f.now()])}},{}],2:[function(e,t,n){function r(e,t){var n=[],r="",i=0;for(r in e)o.call(e,r)&&(n[i]=t(r,e[r]),i+=1);return n}var o=Object.prototype.hasOwnProperty;t.exports=r},{}],3:[function(e,t,n){function r(e,t,n){t||(t=0),"undefined"==typeof n&&(n=e?e.length:0);for(var r=-1,o=n-t||0,i=Array(o<0?0:o);++r<o;)i[r]=e[t+r];return i}t.exports=r},{}],4:[function(e,t,n){t.exports={exists:"undefined"!=typeof window.performance&&window.performance.timing&&"undefined"!=typeof window.performance.timing.navigationStart}},{}],ee:[function(e,t,n){function r(){}function o(e){function t(e){return e&&e instanceof r?e:e?c(e,u,i):i()}function n(n,r,o,i){if(!d.aborted||i){e&&e(n,r,o);for(var a=t(o),u=m(n),c=u.length,f=0;f<c;f++)u[f].apply(a,r);var p=s[y[n]];return p&&p.push([b,n,r,a]),a}}function l(e,t){v[e]=m(e).concat(t)}function m(e){return v[e]||[]}function w(e){return p[e]=p[e]||o(n)}function g(e,t){f(e,function(e,n){t=t||"feature",y[n]=t,t in s||(s[t]=[])})}var v={},y={},b={on:l,emit:n,get:w,listeners:m,context:t,buffer:g,abort:a,aborted:!1};return b}function i(){return new r}function a(){(s.api||s.feature)&&(d.aborted=!0,s=d.backlog={})}var u="nr@context",c=e("gos"),f=e(2),s={},p={},d=t.exports=o();d.backlog=s},{}],gos:[function(e,t,n){function r(e,t,n){if(o.call(e,t))return e[t];var r=n();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(e,t,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return e[t]=r,r}var o=Object.prototype.hasOwnProperty;t.exports=r},{}],handle:[function(e,t,n){function r(e,t,n,r){o.buffer([e],r),o.emit(e,t,n)}var o=e("ee").get("handle");t.exports=r,r.ee=o},{}],id:[function(e,t,n){function r(e){var t=typeof e;return!e||"object"!==t&&"function"!==t?-1:e===window?0:a(e,i,function(){return o++})}var o=1,i="nr@id",a=e("gos");t.exports=r},{}],loader:[function(e,t,n){function r(){if(!x++){var e=h.info=NREUM.info,t=d.getElementsByTagName("script")[0];if(setTimeout(s.abort,3e4),!(e&&e.licenseKey&&e.applicationID&&t))return s.abort();f(y,function(t,n){e[t]||(e[t]=n)}),c("mark",["onload",a()+h.offset],null,"api");var n=d.createElement("script");n.src="https://"+e.agent,t.parentNode.insertBefore(n,t)}}function o(){"complete"===d.readyState&&i()}function i(){c("mark",["domContent",a()+h.offset],null,"api")}function a(){return E.exists&&performance.now?Math.round(performance.now()):(u=Math.max((new Date).getTime(),u))-h.offset}var u=(new Date).getTime(),c=e("handle"),f=e(2),s=e("ee"),p=window,d=p.document,l="addEventListener",m="attachEvent",w=p.XMLHttpRequest,g=w&&w.prototype;NREUM.o={ST:setTimeout,SI:p.setImmediate,CT:clearTimeout,XHR:w,REQ:p.Request,EV:p.Event,PR:p.Promise,MO:p.MutationObserver};var v=""+location,y={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-1071.min.js"},b=w&&g&&g[l]&&!/CriOS/.test(navigator.userAgent),h=t.exports={offset:u,now:a,origin:v,features:{},xhrWrappable:b};e(1),d[l]?(d[l]("DOMContentLoaded",i,!1),p[l]("load",r,!1)):(d[m]("onreadystatechange",o),p[m]("onload",r)),c("mark",["firstbyte",u],null,"api");var x=0,E=e(4)},{}]},{},["loader"]);</script>
<title>Multi-Threading: Task Graph System - Epic Wiki</title>
<script>document.documentElement.className = document.documentElement.className.replace( /(^|\s)client-nojs(\s|$)/, "$1client-js$2" );</script>
<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Multi-Threading:_Task_Graph_System","wgTitle":"Multi-Threading: Task Graph System","wgCurRevisionId":213,"wgRevisionId":213,"wgArticleId":106,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Tutorials","Code","Community Videos","Community Created Content"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Multi-Threading:_Task_Graph_System","wgRelevantArticleId":106,"wgRequestId":"5d39651bf3403c7fb1ae552e","wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[]});mw.loader.state({"site.styles":"ready","noscript":"ready","user.styles":"ready","user":"ready","user.options":"loading","user.tokens":"loading","mediawiki.legacy.shared":"ready","mediawiki.legacy.commonPrint":"ready","mediawiki.sectionAnchor":"ready","mediawiki.skinning.interface":"ready","skins.vector.styles":"ready"});mw.loader.implement("user.options@0bhc5ha",function($,jQuery,require,module){mw.user.options.set([]);});mw.loader.implement("user.tokens@1xxwts3",function ( $, jQuery, require, module ) {
mw.user.tokens.set({"editToken":"+\\","patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});/*@nomin*/

});mw.loader.load(["site","mediawiki.page.startup","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.toc","mediawiki.searchSuggest","skins.vector.js"]);});</script>
<link rel="stylesheet" href="/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.sectionAnchor%7Cmediawiki.skinning.interface%7Cskins.vector.styles&amp;only=styles&amp;printable=1&amp;skin=vector"/>
<script async="" src="/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;printable=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<meta name="generator" content="MediaWiki 1.30.0"/>
<meta name="robots" content="noindex,follow"/>
<link rel="shortcut icon" href="/favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="/opensearch_desc.php" title="Epic Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="https://wiki.unrealengine.com/api.php?action=rsd"/>
<link rel="license" href="https://www.epicgames.com/tos"/>
<link rel="alternate" type="application/atom+xml" title="Epic Wiki Atom feed" href="/index.php?title=Special:RecentChanges&amp;feed=atom"/>
<!--[if lt IE 9]><script src="/resources/lib/html5shiv/html5shiv.min.js?40bd4"></script><![endif]-->
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Multi-Threading_Task_Graph_System rootpage-Multi-Threading_Task_Graph_System skin-vector action-view"><!DOCTYPE html><html data-baseurl="https://www.unrealengine.com"><head><meta charSet="UTF-8"><meta httpEquiv="X-UA-Compatible" content="IE=9;IE=10;IE=11;IE=Edge,chrome=1"><meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no, minimal-ui"><meta name="host" content="ue-website-node-prod07-i-0a137bf8b82e8a632"><meta name="worker" content="129"><link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png"><link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png"><link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png"><link rel="manifest" href="/manifest.json"><link rel="mask-icon" href="/safari-pinned-tab.svg" color="#2a2a2a"><meta name="apple-mobile-web-app-title" content="Unreal Engine"><meta name="application-name" content="Unreal Engine"><meta name="msapplication-TileColor" content="#0aaff1"><meta name="msapplication-TileImage" content="/mstile-144x144.png"><meta name="theme-color" content="#0aaff1"><title data-react-helmet="true"></title></head><body><div id="epicGamesNavigation"></div><script>(function () {
    var config = {"serverUrl":"https://www.unrealengine.com","locale":"en-US","localeOptions":[{"lang":"en-US","name":"English"},{"lang":"ko","name":"한국어"},{"lang":"ja","name":"日本語"},{"lang":"zh-CN","name":"简体中文"}],"euCookieStrings":{"cookieString":"We use cookies to ensure the best experience on all Epic Games websites. To learn more, please see our {0}.","policyString":"privacy policy","closeString":"Close","policyUrl":"https://www.epicgames.com/privacypolicy"},"epicPropertyName":"unreal_engine","_createdBy":"tony.rossi","callToAction":{"_type":"Epic Header Call To Action","useCustomCallback":true,"href":"http://unrealengine.com/register","title":"Download"},"hideCallToAction":false,"hideLocale":true,"hideShieldDownload":false,"logoLink":{"_type":"Epic Header Action Link","useCustomCallback":true,"href":"http://unrealengine.com/what-is-unreal-engine-4","key":"logo"},"alert":{"msg":"","_type":"Epic Header Alert","id":"","type":"info","statusHref":""},"_activeDate":"2018-08-06T09:11:04.633Z","links":[{"isBarDivider":false,"_type":"Epic Header Link","useCustomCallback":true,"href":"http://unrealengine.com/blog","title":"News","key":"blog"},{"isBarDivider":false,"_type":"Epic Header Link","useCustomCallback":false,"title":"About","key":"about","kids":[{"_type":"Epic Header Submenu Item","useCustomCallback":true,"href":"http://unrealengine.com/what-is-unreal-engine-4","title":"Overview"},{"_type":"Epic Header Submenu Item","useCustomCallback":true,"href":"http://unrealengine.com/features","title":"Features"},{"_type":"Epic Header Submenu Item","useCustomCallback":true,"href":"http://unrealengine.com/vr","title":"VR / AR"},{"_type":"Epic Header Submenu Item","useCustomCallback":true,"href":"http://unrealengine.com/release-notes/","title":"What's New"},{"_type":"Epic Header Submenu Item","useCustomCallback":true,"href":"http://unrealengine.com/faq","title":"FAQ"},{"_type":"Epic Header Submenu Item","useCustomCallback":true,"href":"http://unrealengine.com/eula","title":"EULA"},{"_type":"Epic Header Submenu Item","useCustomCallback":true,"href":"http://unrealengine.com/previous-versions","title":"Previous Versions"}]},{"isBarDivider":false,"collapseTarget":"More","_type":"Epic Header Link","useCustomCallback":false,"title":"Learn","key":"learn","kids":[{"_type":"Epic Header Submenu Item","useCustomCallback":false,"href":"https://docs.unrealengine.com/","title":"Documentation"},{"_type":"Epic Header Submenu Item","useCustomCallback":false,"href":"https://academy.unrealengine.com/","title":"Video Tutorials","key":""},{"_type":"Epic Header Submenu Item","useCustomCallback":true,"href":"http://unrealengine.com/education","title":"Education"},{"_type":"Epic Header Submenu Item","useCustomCallback":true,"href":"http://unrealengine.com/support","title":"Support"},{"_type":"Epic Header Submenu Item","useCustomCallback":false,"href":"https://trello.com/b/TTAVI7Ny/ue4-roadmap","title":"Roadmap","target":"_blank"},{"_type":"Epic Header Submenu Item","useCustomCallback":false,"href":"https://issues.unrealengine.com/","title":"Issues"}]},{"isBarDivider":false,"collapseTarget":"More","_type":"Epic Header Link","useCustomCallback":false,"title":"Community","key":"community","kids":[{"_type":"Epic Header Submenu Item","useCustomCallback":false,"href":"https://forums.unrealengine.com/","title":"Forums"},{"_type":"Epic Header Submenu Item","useCustomCallback":false,"href":"https://wiki.unrealengine.com/Main_Page","title":"Wiki"},{"_type":"Epic Header Submenu Item","useCustomCallback":false,"href":"https://answers.unrealengine.com/","title":"AnswerHub"},{"_type":"Epic Header Submenu Item","useCustomCallback":true,"href":"http://unrealengine.com/unrealdevgrants","title":"Unreal Dev Grants","key":""},{"_type":"Epic Header Submenu Item","useCustomCallback":true,"href":"http://unrealengine.com/user-groups","title":"User Groups","key":""},{"_type":"Epic Header Submenu Item","useCustomCallback":true,"href":"http://unrealengine.com/events","title":"Events"},{"_type":"Epic Header Submenu Item","useCustomCallback":true,"href":"http://unrealengine.com/programs/nvidia-edge","title":"Nvidia Edge","key":"programs"},{"_type":"Epic Header Submenu Item","useCustomCallback":true,"href":"http://unrealengine.com/programs/intel-unreal","title":"Intel + Unreal","key":""}]},{"isBarDivider":false,"collapseTarget":"More","_type":"Epic Header Link","useCustomCallback":false,"title":"Marketplace","key":"marketplace","kids":[{"_type":"Epic Header Submenu Item","useCustomCallback":false,"href":"http://unrealengine.com/marketplace","title":"Browse"},{"_type":"Epic Header Submenu Item","useCustomCallback":false,"href":"https://publish.unrealengine.com/","title":"Submit Content"},{"_type":"Epic Header Submenu Item","useCustomCallback":true,"href":"http://unrealengine.com/marketplace-faq","title":"Marketplace FAQ"},{"_type":"Epic Header Submenu Item","useCustomCallback":true,"href":"http://unrealengine.com/marketplace-guidelines","title":"Marketplace Guidelines"},{"_type":"Epic Header Submenu Item","useCustomCallback":false,"href":"https://forums.unrealengine.com/forumdisplay.php?56-Marketplace","title":"Marketplace Forums"}]},{"isBarDivider":false,"collapseTarget":"More","_type":"Epic Header Link","useCustomCallback":false,"title":"Enterprise","key":"enterprise","kids":[{"_type":"Epic Header Submenu Item","useCustomCallback":true,"href":"http://unrealengine.com/studio","title":"Unreal Studio","key":"studio-overview"},{"_type":"Epic Header Submenu Item","useCustomCallback":true,"href":"http://unrealengine.com/enterprise/contact-us","title":"Enterprise Contact","key":"contact"}]}],"hideSearch":false,"_version":{"_comment":"Publish to server UnrealEngine.com (Production)","_createdBy":"tony.rossi"},"_currentVersion":"1.37.2.100","_type":"Epic Games Nav","hideSignIn":true,"pcDownloadUrl":"https://launcher-public-service-prod06.ol.epicgames.com/launcher/api/installer/download/EpicGamesLauncherInstaller.msi?productName=unrealengine","_uuid":"a0357fbf-1bd5-4eca-bbbf-48ea56e4ddb1","accountLinks":{"signOutLink":{"_type":"Epic Header Action Link","useCustomCallback":true,"href":"http://unrealengine.com/logout","key":"signout"},"dropdownLinks":[{"_type":"Epic Header Submenu Item","useCustomCallback":false,"href":"http://unrealengine.com/account/personal?lang=en-US","title":"Personal","key":"personal"},{"_type":"Epic Header Submenu Item","useCustomCallback":false,"href":"https://publish.unrealengine.com","title":"Seller","key":"seller"}],"signInLinks":[{"_type":"Epic Header Submenu Item","useCustomCallback":true,"href":"http://unrealengine.com/login","title":"Sign In","key":"signin"}],"_type":"Epic Header Account Links"},"_futureVersion":"none","downloadLink":{"_type":"Epic Header Submenu Item","useCustomCallback":false,"href":""},"_created":"2017-08-21T08:59:33.648Z","macDownloadUrl":"https://launcher-public-service-prod06.ol.epicgames.com/launcher/api/installer/download/EpicGamesLauncher.dmg?productName=unrealengine","messages":{"search":"Search","default_download":"Get Epic Games","default_username":"Account","_type":"Epic Header Messages","locale":"English","sign_in":"Sign In","sign_out":"Sign Out"},"hideShieldDropdown":false,"properties":[{"propertyKey":"paragon","_type":"Epic Games Property","egDisabled":true,"egSkip":true}],"_locale":"en_US","useServerUrl":true,"isEu":false};

    if (typeof window._egNavBeforeConfigSet === 'function') {
        window._egNavBeforeConfigSet();
        window._egNavBeforeConfigSetRun = true;
    }
    window._egNavBeforeConfigSetCalled = true;

    if (typeof window._epicGamesNav === 'undefined') {
        window._epicGamesNav = config;
    } else {
        var missingAssumeFalsey = ['hideLocale', 'hideSearch', 'hideSignIn', 'hideCallToAction'];
        for (var key in config) {
            if (typeof key === 'string') {
                if (!window._epicGamesNav[key] && config[key] !== null && missingAssumeFalsey.indexOf(key) === -1) {
                    window._epicGamesNav[key] = config[key];
                }
            }
        }
    }

    window._epicGamesNav.onSearch = function(query) {
        window.location.href = 'https://www.unrealengine.com' + '/bing-search?keyword=' + query;
    };

    if (typeof window._egNavAfterConfigSet === 'function') {
        window._egNavAfterConfigSet();
        window._egNavAfterConfigSetRun = true;
    }
    window._egNavAfterConfigSetCalled = true;
})();
window.__locale = '';
</script><link key="header-css" rel="stylesheet" href="https://static-assets-prod.epicgames.com/unrealengine/static/webpack/./header.epic-unreal-engine.100bcb10fc821c7c23f8.css"><script src="https://static-assets-prod.epicgames.com/unrealengine/static/webpack/./header.epic-unreal-engine.100bcb10fc821c7c23f8.js"></script></body></html>		<div class="container">
			<div id="mw-navigation">
				<h2>Navigation menu</h2>

				<div id="mw-head">
					<!-- 					<div id="p-personal" role="navigation" class="" aria-labelledby="p-personal-label">
						<h3 id="p-personal-label">Personal tools</h3>
						<ul>
							<li id="pt-login"><a href="/index.php?title=Special:UserLogin&amp;returnto=Multi-Threading%3A+Task+Graph+System&amp;returntoquery=printable%3Dyes" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>						</ul>
					</div>
					 -->
					<div class="homelink_container">
                        <a href="/" title="UE4 Wiki Home" class="homelink">HOME</a>
                    </div>
                    <div class="notice">
                    	We have temporarily disabled editing while we working on a new Wiki!
                    </div>
					<div id="left-navigation">
											<div id="p-namespaces" role="navigation" class="vectorTabs" aria-labelledby="p-namespaces-label">
						<h3 id="p-namespaces-label">Namespaces</h3>
						<ul>
														<li id="ca-nstab-main" class="selected"><span><a href="/index.php?title=Multi-Threading:_Task_Graph_System" title="View the content page [c]" accesskey="c">Page</a></span></li>
							<li id="ca-talk" class="new"><span><a href="/index.php?title=Talk:Multi-Threading:_Task_Graph_System&amp;action=edit&amp;redlink=1" rel="discussion" title="Discussion about the content page [t]" accesskey="t">Discussion</a></span></li>
						</ul>
					</div>
										<div id="p-variants" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-variants-label">
												<h3 id="p-variants-label">
							<span>Variants</span>
						</h3>

						<div class="menu">
							<ul>
															</ul>
						</div>
					</div>
										</div>
					<div id="right-navigation">
											<div id="p-views" role="navigation" class="vectorTabs" aria-labelledby="p-views-label">
						<h3 id="p-views-label">Views</h3>
						<ul>
														<li id="ca-view" class="selected"><span><a href="/index.php?title=Multi-Threading:_Task_Graph_System">Read</a></span></li>
							<li id="ca-viewsource"><span><a href="/index.php?title=Multi-Threading:_Task_Graph_System&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></span></li>
							<li id="ca-history" class="collapsible"><span><a href="/index.php?title=Multi-Threading:_Task_Graph_System&amp;action=history" title="Past revisions of this page [h]" accesskey="h">View history</a></span></li>
						</ul>
					</div>
										<div id="p-cactions" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-cactions-label">
						<h3 id="p-cactions-label"><span>More</span></h3>

						<div class="menu">
							<ul>
															</ul>
						</div>
					</div>
										<div id="p-search" role="search">
						<h3>
							<label for="searchInput">Search</label>
						</h3>

						<form action="/index.php" id="searchform">
							<div id="simpleSearch">
							<input type="search" name="search" placeholder="Search Epic Wiki" title="Search Epic Wiki [f]" accesskey="f" id="searchInput"/><input type="hidden" value="Special:Search" name="title"/><input type="submit" name="fulltext" value="Search" title="Search the pages for this text" id="mw-searchButton" class="searchButton mw-fallbackSearchButton"/><input type="submit" name="go" value="Go" title="Go to a page with this exact name if it exists" id="searchButton" class="searchButton"/>							</div>
						</form>
					</div>
										</div>
				</div>
				
			</div>
			<div id="content" class="mw-body" role="main">
				<a id="top"></a>

								<div class="mw-indicators mw-body-content">
</div>
				<h1 id="firstHeading" class="firstHeading" lang="en">Multi-Threading: Task Graph System</h1>
												<div id="bodyContent" class="mw-body-content">
											<div id="siteSub" class="noprint">From Epic Wiki</div>
										
															<div id="jump-to-nav" class="mw-jump">
						Jump to:						<a href="#mw-head">navigation</a>, 						<a href="#p-search">search</a>
					</div>
					<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><div class="mw-parser-output"><p><a href="/index.php?title=Template:Rating&amp;action=edit&amp;redlink=1" class="new" title="Template:Rating (page does not exist)">Template:Rating</a>
</p>
<div id="toc" class="toc"><div class="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Overview"><span class="tocnumber">1</span> <span class="toctext">Overview</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="#My_Example:_Calculate_first_50.2C000_Prime_Numbers"><span class="tocnumber">1.1</span> <span class="toctext">My Example: Calculate first 50,000 Prime Numbers</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-3"><a href="#Video"><span class="tocnumber">2</span> <span class="toctext">Video</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="#Comparing_Results"><span class="tocnumber">3</span> <span class="toctext">Comparing Results</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="#Entire_.CPP_Source_Code_For_You.21"><span class="tocnumber">4</span> <span class="toctext">Entire .CPP Source Code For You!</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="#ENamedThreads::GameThread.3F"><span class="tocnumber">5</span> <span class="toctext">ENamedThreads::GameThread?</span></a></li>
<li class="toclevel-1 tocsection-7"><a href="#Why_a_Name_Space.3F"><span class="tocnumber">6</span> <span class="toctext">Why a Name Space?</span></a></li>
<li class="toclevel-1 tocsection-8"><a href="#Knowing_When_All_Tasks_Are_Complete"><span class="tocnumber">7</span> <span class="toctext">Knowing When All Tasks Are Complete</span></a>
<ul>
<li class="toclevel-2 tocsection-9"><a href="#Completion_Events_Are_Filled_All_at_Once"><span class="tocnumber">7.1</span> <span class="toctext">Completion Events Are Filled All at Once</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-10"><a href="#Things_to_Note"><span class="tocnumber">8</span> <span class="toctext">Things to Note</span></a></li>
<li class="toclevel-1 tocsection-11"><a href="#AsyncWork_Task_Templates"><span class="tocnumber">9</span> <span class="toctext">AsyncWork Task Templates</span></a></li>
<li class="toclevel-1 tocsection-12"><a href="#What_About_Platforms_Without_Multithreading.3F"><span class="tocnumber">10</span> <span class="toctext">What About Platforms Without Multithreading?</span></a></li>
<li class="toclevel-1 tocsection-13"><a href="#Further_Reading"><span class="tocnumber">11</span> <span class="toctext">Further Reading</span></a>
<ul>
<li class="toclevel-2 tocsection-14"><a href="#ParallelFor"><span class="tocnumber">11.1</span> <span class="toctext">ParallelFor</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-15"><a href="#Conclusion"><span class="tocnumber">12</span> <span class="toctext">Conclusion</span></a></li>
</ul>
</div>

<h2><span class="mw-headline" id="Overview">Overview</span></h2>
<p><i>Author:</i> <a href="/index.php?title=User:Rama" title="User:Rama">Rama</a> (<a href="/index.php?title=User_talk:Rama" title="User talk:Rama">talk</a>)
</p><p>Dear Community,
</p><p>The UE4 task graph system allows you to perform many actions, each of which is relatively small, on separate threads from the game thread.
</p><p>Please note that a task graph <b>will sometimes use the game thread,</b> and therefore for large tasks you should use a FRunnable as demonstrated in <a rel="nofollow" class="external text" href="https://wiki.unrealengine.com/Multi-Threading:_How_to_Create_Threads_in_UE4">my other multi threading wiki.</a>
</p><p><b>AsyncWork.h</b>
</p>
<pre>* Tells the user job to do the work, sometimes called synchronously, sometimes from the thread pool. Calls the event tracker.
</pre>
<p><br /> 
</p>
<h3><span class="mw-headline" id="My_Example:_Calculate_first_50.2C000_Prime_Numbers">My Example: Calculate first 50,000 Prime Numbers</span></h3>
<p>In the video below I am calculating the first 50,000 prime numbers while the rest of the game thread continues to run!
</p><p>To put this in perspective, if I did what I do in the video without the UE4 task graph system, the game would be hanging while all those numbers get computed, for the total duration of the video&#160;:)
</p>
<h2><span class="mw-headline" id="Video">Video</span></h2>
<p>&lt;youtube&gt;<a rel="nofollow" class="external free" href="https://www.youtube.com/watch?v=cgELOodtoSU&amp;feature=youtu.be">https://www.youtube.com/watch?v=cgELOodtoSU&amp;feature=youtu.be</a>&lt;/youtube&gt;
</p>
<h2><span class="mw-headline" id="Comparing_Results">Comparing Results</span></h2>
<p>I show my results at the end of the video.
</p><p>You can compare them with this webpage!
</p><p>My multi-threading system did actually calculate the first 50,000 (+1) prime numbers!
</p><p><b><a rel="nofollow" class="external text" href="http://www.cs.arizona.edu/icon/oddsends/primes.htm">|First 50,000 Prime Numbers</a></b>
</p>
<h2><span class="mw-headline" id="Entire_.CPP_Source_Code_For_You.21">Entire .CPP Source Code For You!</span></h2>
<p>I am doing all of this as a test in my player controller class&#160;:)
</p><p>I did just about everything in the .cpp file alone using the Namespace.
</p><p>Please note that the timer that checks when the threads are done is also in the .h, as is the function start the whole process. (see toward the end of the code)
</p><p>&lt;syntaxhighlight lang="cpp"&gt;
//Multi thread Test, finding prime number
namespace VictoryMultiThreadTest
{
	//Multi-threaded link to UObjects, do not create,modify,destroy UObjects / AActors via this link!
	AVictoryGamePlayerController* ThePC;
</p><p>	//~~~~~~~~~~~~~~~~~~~~~~~~~~
	//~~~~~~~~~~~~~~~~~~~~~~~~~~
	//~~~~~~~~~~~~~~~~~~~~~~~~~~
	//   OUTPUT RESULTS OF TASK THREADS
	TArray&lt;uint32&gt; PrimeNumbers;
</p><p>	// This is the array of thread completions to know if all threads are done yet
	FGraphEventArray		VictoryMultithreadTest_CompletionEvents;
	//~~~~~~~~~~~~~~~~~~~~~~~~~~
	//~~~~~~~~~~~~~~~~~~~~~~~~~~
	//~~~~~~~~~~~~~~~~~~~~~~~~~~
</p><p>	//~~~~~~~~~~~~~~~
	//Are All Tasks Complete?
	//~~~~~~~~~~~~~~~
	bool TasksAreComplete()
	{
		//Check all thread completion events
		for (int32 Index = 0; Index &lt; VictoryMultithreadTest_CompletionEvents.Num(); Index++)
		{
			//If &#160;! IsComplete()
			if (!VictoryMultithreadTest_CompletionEvents[Index]-&gt;IsComplete())
			{
				return false;
			}
		}
		return true;
	}
	//~~~~~~~~~~~
	//Actual Task Code
	//~~~~~~~~~~~
	int32 FindNextPrimeNumber()
	{
		//Last known prime number  + 1
		int32 TestPrime = PrimeNumbers.Last();
</p><p>		bool NumIsPrime = false;
		while(&#160;! NumIsPrime)
		{
			NumIsPrime = true;
</p><p>			//Try Next Number
			TestPrime++;
</p><p>			//Modulus from 2 to current number - 1 
			for(int32 b = 2; b &lt; TestPrime; b++)
			{
				if(TestPrime&#160;% b == 0) 
				{
					NumIsPrime = false;
					break;
					//~~~
				}
			}
		}
</p><p>		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		//Did another thread find this number already?
		if(PrimeNumbers.Contains(TestPrime))
		{
			return FindNextPrimeNumber(); //recursion
		}
		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
</p><p>		//Success!
		return TestPrime;
	}
</p><p><br />
	//~~~~~~~~~~~
	//Each Task Thread
	//~~~~~~~~~~~
	class FVictoryTestTask
	{
</p><p>	  public:
		FVictoryTestTask() //send in property defaults here
		{
			//can add properties here
		}
</p><p>		/** return the name of the task **/
		static const TCHAR* GetTaskName()
		{
			return TEXT("FVictoryTestTask");
		}
		FORCEINLINE static TStatId GetStatId()
		{
			RETURN_QUICK_DECLARE_CYCLE_STAT(FVictoryTestTask, STATGROUP_TaskGraphTasks);
		}
		/** return the thread for this task **/
		static ENamedThreads::Type GetDesiredThread()
		{
			return ENamedThreads::AnyThread;
		}
</p><p><br />		
		/*
		namespace ESubsequentsMode
		{
			enum Type
			{
				//Necessary when another task will depend on this task. 
				TrackSubsequents,
				//Can be used to save task graph overhead when firing off a task that will not be a dependency of other tasks. 
				FireAndForget
			};
		}
		*/
		static ESubsequentsMode::Type GetSubsequentsMode() 
		{ 
			return ESubsequentsMode::TrackSubsequents; 
		}
</p>
<pre>               //~~~~~~~~~~~~~~~~~~~~~~~~
               //Main Function: Do Task!!
               //~~~~~~~~~~~~~~~~~~~~~~~~
</pre>
<p>		void DoTask(ENamedThreads::Type CurrentThread, const FGraphEventRef&amp; MyCompletionGraphEvent)
		{
			//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
</p><p>			PrimeNumbers.Add(FindNextPrimeNumber());
</p><p>			//***************************************
			//Show Incremental Results in Main Game Thread!
</p><p>			//	Please note you should not create, destroy, or modify UObjects here.
			//	  Do those sort of things after all thread are completed.
</p><p>			//	  All calcs for making stuff can be done in the threads
			//	     But the actual making/modifying of the UObjects should be done in main game thread,
			//		 which is AFTER all tasks have completed&#160;:)
</p><p>			ThePC-&gt;ClientMessage(FString("A thread completed! ~ ") + FString::FromInt(PrimeNumbers.Last()));
			//***************************************
		}
	};
</p><p>	//~~~~~~~~~~~~~~~~~~~
	//  Multi-Task Initiation Point 
	//~~~~~~~~~~~~~~~~~~~
	void FindPrimes(const uint32 TotalToFind)
	{
		PrimeNumbers.Empty();
		PrimeNumbers.Add(2);
		PrimeNumbers.Add(3);
</p><p>		//~~~~~~~~~~~~~~~~~~~~
		//Add thread / task for each of total prime numbers to find
		//~~~~~~~~~~~~~~~~~~~~
</p><p>		for(uint32 b = 0; b &lt; TotalToFind; b++)
		{
			VictoryMultithreadTest_CompletionEvents.Add(TGraphTask&lt;FVictoryTestTask&gt;::CreateTask(NULL, ENamedThreads::GameThread).ConstructAndDispatchWhenReady()); //add properties inside ConstructAndDispatchWhenReady()
		}
	}
</p><p>}
&lt;/syntaxhighlight&gt;
</p><p>&lt;syntaxhighlight lang="cpp"&gt;
//~~~ In the Game Thread ~~~
</p><p>//timer to check when threads are done
//Please note timers must be in the game thread / main / normal thread
void AVictoryGamePlayerController::VictoryCheckAllThreadsDone()
{
</p><p>	if(VictoryMultiThreadTest::TasksAreComplete() )
	{
		//Clear Timer
		GetWorldTimerManager().ClearTimer(this, 
			&amp;AVictoryGamePlayerController::VictoryCheckAllThreadsDone);
</p><p>		ClientMessage("Multi Thread Test Done!");
</p><p>		VShow("Prime Numbers Found:");
		for(int32 v = 0; v &lt; VictoryMultiThreadTest::PrimeNumbers.Num(); v++)
		{
			VShow(FString::FromInt(v) + FString("~ "), VictoryMultiThreadTest::PrimeNumbers[v]);
		}
	}
}
&lt;/syntaxhighlight&gt;
</p><p>&lt;syntaxhighlight lang="cpp"&gt;
//Starting the Tasks / Threads
void AVictoryGamePlayerController::StartThreadTest()
{
</p><p>	VictoryMultiThreadTest::ThePC = this;
	VictoryMultiThreadTest::FindPrimes(50000); //first 50,000 prime numbers
</p><p>	//Start a timer to check when all the threads are done!
	GetWorldTimerManager().SetTimer(this, 
		&amp;AVictoryGamePlayerController::VictoryCheckAllThreadsDone, 1, true);	
}
&lt;/syntaxhighlight&gt;
</p><p><br />
</p>
<h2><span class="mw-headline" id="ENamedThreads::GameThread.3F">ENamedThreads::GameThread?</span></h2>
<p>Please note in this line:
</p><p>&lt;syntaxhighlight lang="cpp"&gt;
VictoryMultithreadTest_CompletionEvents.Add(
</p>
<pre> TGraphTask&lt;FVictoryTestTask&gt;::CreateTask(NULL, ENamedThreads::GameThread).ConstructAndDispatchWhenReady()
</pre>
<p>); 
&lt;/syntaxhighlight&gt;
</p><p>GameThread simply signifies where the task is being initiated from, not where it is allowed to run.
</p><p>Unless you have threads starting other threads you will want to always specify GameThread&#160;:)
</p>
<h2><span class="mw-headline" id="Why_a_Name_Space.3F">Why a Name Space?</span></h2>
<p>&lt;syntaxhighlight lang="cpp"&gt;
//Multi thread Test, finding prime number
namespace VictoryMultiThreadTest
{
&lt;/syntaxhighlight&gt;	
It's just a convenient way to organize the required info for multi-threading&#160;:)
</p>
<h2><span class="mw-headline" id="Knowing_When_All_Tasks_Are_Complete">Knowing When All Tasks Are Complete</span></h2>
<p>I use a looping 1 second timer that runs this function:
</p><p>&lt;syntaxhighlight lang="cpp"&gt;
//Array of all task threads, instantly and entirely filled when FindPrimes is first called
FGraphEventArray		VictoryMultithreadTest_CompletionEvents;
</p><p>//~~~~~~~~~~~~~~~
//Are All Tasks Complete?
//~~~~~~~~~~~~~~~
bool TasksAreComplete()
{
	//Check all thread completion events
	for (int32 Index = 0; Index &lt; VictoryMultithreadTest_CompletionEvents.Num(); Index++)
	{
		//If &#160;! IsComplete()
		if (!VictoryMultithreadTest_CompletionEvents[Index]-&gt;IsComplete())
		{
			return false;
		}
	}
	return true;
}
&lt;/syntaxhighlight&gt;
</p><p>the critical line is this
</p><p>&lt;syntaxhighlight lang="cpp"&gt;
if (!VictoryMultithreadTest_CompletionEvents[Index]-&gt;IsComplete())
&lt;/syntaxhighlight&gt;
</p><p>See TaskGraphInterfaces.h for more info!
</p>
<h3><span class="mw-headline" id="Completion_Events_Are_Filled_All_at_Once">Completion Events Are Filled All at Once</span></h3>
<p>Please note that ALL completion events are created the instant the multi-threading process is initiated!
</p><p>This part is NOT multi-threaded&#160;:)
</p><p>&lt;syntaxhighlight lang="cpp"&gt;
//~~~~~~~~~~~~~~~~~~~
//  Multi-Task Initiation Point 
//~~~~~~~~~~~~~~~~~~~
void FindPrimes(const uint32 TotalToFind)
{
	PrimeNumbers.Empty();
	PrimeNumbers.Add(2);
	PrimeNumbers.Add(3);
</p><p>	//~~~~~~~~~~~~~~~~~~~~
	//Add thread / task for each of total prime numbers to find
	//~~~~~~~~~~~~~~~~~~~~
</p><p>	for(uint32 b = 0; b &lt; TotalToFind; b++)
	{
		VictoryMultithreadTest_CompletionEvents.Add(TGraphTask&lt;FVictoryTestTask&gt;::CreateTask(NULL, ENamedThreads::GameThread).ConstructAndDispatchWhenReady()); //add properties inside ConstructAndDispatchWhenReady()
	}
}
&lt;/syntaxhighlight&gt;
</p>
<h2><span class="mw-headline" id="Things_to_Note">Things to Note</span></h2>
<ul><li> Do not create, delete, or modify UObjects inside the DoTask() of each task thread ( unless you are on 4.8 or after -Rama )</li></ul>
<ul><li> Do not call timers inside of DoTask()</li></ul>
<ul><li> Dont try to draw debug lines/points etc, it will likely crash (true as of 4.6.1)</li></ul>
<ul><li> If you follow the above rules you can send incremental progress to yourself on the main thread as I am doing.</li></ul>
<p>I am actually calling a function in my HUD class from my player controller pointer, from DoTask()&#160;!
</p>
<h2><span class="mw-headline" id="AsyncWork_Task_Templates">AsyncWork Task Templates</span></h2>
<p>In AsyncWork.h you will find some great templates for tasks, such as FAsyncTask and FAutoDeleteAsyncTask
</p><p>I would post the code here but I can't due to the fact that this a public wiki.
</p><p>Have fun exploring AsyncWork.h!
</p>
<h2><span class="mw-headline" id="What_About_Platforms_Without_Multithreading.3F">What About Platforms Without Multithreading?</span></h2>
<p>Note that the task graph system accounts for whether the destination platform does not support multithreading, which at the moment is only HTML5 as far as I know. iOS and Android have multi-threading support.
</p><p>Inside of FTaskGraphImplementation::QueueTask
</p><p>&lt;syntaxhighlight lang="cpp"&gt;
if (FPlatformProcess::SupportsMultithreading())
{
//...
}
else
{
</p>
<pre> ThreadToExecuteOn = ENamedThreads::GameThread;
</pre>
<p>}
&lt;/syntaxhighlight&gt;
</p>
<h2><span class="mw-headline" id="Further_Reading">Further Reading</span></h2>
<p>Check out 
</p>
<pre> Core/Private/Async/TaskGraph.cpp 
</pre>
<p>to see how the tasks are created, and how whether the platform supports multi threading is taken into account!
</p>
<h3><span class="mw-headline" id="ParallelFor">ParallelFor</span></h3>
<p>This is a great article, but if you have a "really simple function" that you just want to run split-up between threads, take a look at ParallelFor (Runtime/Core/Public/Async/ParallelFor.h).  ParallelFor uses the Task Graph System underneath the covers. Use ParallelFor if you NEED results for a bunch of calculations this frame, and you can't use results that are a couple of frames old.
</p><p>&lt;syntaxhighlight lang="cpp"&gt;
int32 MaxEntries = 500;
ParallelFor( MaxEntries, [](int32 CurrIdx)
{
	// Your implementation may fetch/store results based on the CurrIdx, but
	// for simplicity we just have some dummy "expensive" calculation here.
	int32 Sum = 0;
	for ( int32 Idx = 0; Idx &lt; 1000 * 10; ++Idx )
	{
		Sum += FMath::Sqrt( 1234.56f );
	}
} );
&lt;/syntaxhighlight&gt;
For example, the above calculation takes about 30ms (on my PC) to run with a single thread, but just using ParallelFor will split the calculation between threads, making it complete in about 10ms instead.
</p>
<h2><span class="mw-headline" id="Conclusion">Conclusion</span></h2>
<p>Enjoy!
</p><p><a href="/index.php?title=User:Rama" title="User:Rama">Rama</a> (<a href="/index.php?title=User_talk:Rama" title="User talk:Rama">talk</a>)
</p>
<!-- 
NewPP limit report
Cached time: 20181005005314
Cache expiry: 86400
Dynamic content: false
CPU time usage: 0.016 seconds
Real time usage: 0.029 seconds
Preprocessor visited node count: 61/1000000
Preprocessor generated node count: 96/1000000
Post‐expand include size: 20/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    3.134      1 -total
100.00%    3.134      1 Template:Rating
-->
</div>
<!-- Saved in parser cache with key wiki_pd05v2:pcache:idhash:106-0!canonical and timestamp 20181005005314 and revision id 213
 -->
</div>						<div class="printfooter">
							Retrieved from "<a dir="ltr" href="https://wiki.unrealengine.com/index.php?title=Multi-Threading:_Task_Graph_System&amp;oldid=213">https://wiki.unrealengine.com/index.php?title=Multi-Threading:_Task_Graph_System&amp;oldid=213</a>"						</div>
					<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="/index.php?title=Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="/index.php?title=Category:Tutorials&amp;action=edit&amp;redlink=1" class="new" title="Category:Tutorials (page does not exist)">Tutorials</a></li><li><a href="/index.php?title=Category:Code" title="Category:Code">Code</a></li><li><a href="/index.php?title=Category:Community_Videos" title="Category:Community Videos">Community Videos</a></li><li><a href="/index.php?title=Category:Community_Created_Content" title="Category:Community Created Content">Community Created Content</a></li></ul></div></div>					<div class="visualClear"></div>
									</div>
			</div>
		</div>
		<div id="eg-footer" role="contentinfo">
			<!DOCTYPE html><html data-baseurl="https://www.unrealengine.com"><head><meta charSet="UTF-8"><meta httpEquiv="X-UA-Compatible" content="IE=9;IE=10;IE=11;IE=Edge,chrome=1"><meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no, minimal-ui"><meta name="host" content="ue-website-node-prod07-i-02a815c95fb568b8b"><meta name="worker" content="89"><link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png"><link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png"><link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png"><link rel="manifest" href="/manifest.json"><link rel="mask-icon" href="/safari-pinned-tab.svg" color="#2a2a2a"><meta name="apple-mobile-web-app-title" content="Unreal Engine"><meta name="application-name" content="Unreal Engine"><meta name="msapplication-TileColor" content="#0aaff1"><meta name="msapplication-TileImage" content="/mstile-144x144.png"><meta name="theme-color" content="#0aaff1"><title data-react-helmet="true"></title></head><body><div id="epicGamesFooter"></div><script>window._epicGamesFooter = {"serverUrl":"https://www.unrealengine.com","socialLinks":[{"_type":"Epic Footer Social Link","id":"twitter","href":"https://twitter.com/unrealengine"},{"_type":"Epic Footer Social Link","id":"facebook","href":"https://www.facebook.com/UnrealEngine"},{"_type":"Epic Footer Social Link","href":"http://www.twitch.tv/unrealengine","id":"twitch"},{"_type":"Epic Footer Social Link","id":"instagram","href":"http://instagram.com/UnrealEngine"},{"_type":"Epic Footer Social Link","href":"http://www.youtube.com/unrealengine","id":"youtube"},{"_type":"Epic Footer Social Link","href":"https://www.unrealengine.com/rss","id":"rss"}],"_currentVersion":"1.31","copyrights":["© 2004-{YEAR}, Epic Games, Inc. All rights reserved. Unreal and its logo are Epic’s trademarks or registered trademarks in the US and elsewhere."],"newsLetterConfigs":{"enableNewsLetterCMS":true,"titleMsg":"Sign Up for Unreal Engine News","btnTxt":"Subscribe","_type":"Epic Footer News Letter","logo":"https://cdn2.unrealengine.com/Unreal+Engine%2FUE-Logo-988x988-1dee3bc7f6714edf3c21ee71826ebab54ae02077.png","successMsg":"You have successfully subscribed to Unreal Engine Newsletter.","loginRequired":false},"_type":"Epic Games Footer","newLineCopyrights":false,"epicPropertyName":"unreal_engine","_createdBy":"tony.rossi","_uuid":"dbad9ee8-9ebd-49e5-a448-e930feda5b65","logos":[{"_type":"Epic Footer Logo","href":"https://epicgames.com","id":"eg","title":"Epic Games"},{"_type":"Epic Footer Logo","id":"ue"}],"callToAction":{"_type":"Epic Header Call To Action","useCustomCallback":false,"title":""},"_futureVersion":"none","_created":"2017-08-21T08:59:33.817Z","messages":{"_type":"Epic Footer Messages","tos":"Terms of Service","privacy":"Privacy Policy"},"links":[{"_type":"Epic Footer Link","useCustomCallback":true,"href":"http://unrealengine.com/features","title":"Features"},{"_type":"Epic Footer Link","useCustomCallback":true,"href":"http://unrealengine.com/branding","title":"Logo & Branding"},{"_type":"Epic Footer Link","useCustomCallback":false,"href":"https://trello.com/b/gHooNW9I/ue4-roadmap","title":"Roadmap"},{"_type":"Epic Footer Link","useCustomCallback":true,"href":"http://unrealengine.com/education","title":"Education"},{"_type":"Epic Footer Link","useCustomCallback":true,"href":"http://unrealengine.com/academic-partners","title":"Academic Partners"},{"_type":"Epic Footer Link","useCustomCallback":true,"href":"http://unrealengine.com/resources","title":"More Resources"},{"_type":"Epic Footer Link","useCustomCallback":true,"href":"http://unrealengine.com/awards","title":"Awards"},{"_type":"Epic Footer Link","useCustomCallback":true,"href":"http://unrealengine.com/custom-licensing","title":"Custom License Terms"}],"hideDefaultTermsPolicy":false,"_version":{"_comment":"Edit the global content type","_createdBy":"tony.rossi"},"_locale":"en_US","isEu":false,"useServerUrl":true};
window.__locale = '';
</script><link key="footer-css" rel="stylesheet" href="https://static-assets-prod.epicgames.com/unrealengine/static/webpack/./footer.epic-unreal-engine.100bcb10fc821c7c23f8.css"><script src="https://static-assets-prod.epicgames.com/unrealengine/static/webpack/./footer.epic-unreal-engine.100bcb10fc821c7c23f8.js"></script></body></html>		</div>
		<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.016","walltime":"0.029","ppvisitednodes":{"value":61,"limit":1000000},"ppgeneratednodes":{"value":96,"limit":1000000},"postexpandincludesize":{"value":20,"limit":2097152},"templateargumentsize":{"value":0,"limit":2097152},"expansiondepth":{"value":2,"limit":40},"expensivefunctioncount":{"value":0,"limit":100},"timingprofile":["100.00%    3.134      1 -total","100.00%    3.134      1 Template:Rating"]},"cachereport":{"timestamp":"20181005005314","ttl":86400,"transientcontent":false}}});});</script><script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgBackendResponseTime":206});});</script>
	<script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","licenseKey":"93a8bd5691","applicationID":"145396307","transactionName":"MlxXbUBZWkJUAkVQCgsWdFpGUVtfGgBSTQwKVxpPW11D","queueTime":0,"applicationTime":245,"atts":"HhtUGwhDSUw=","errorBeacon":"bam.nr-data.net","agent":""}</script></body>
</html>
