<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<meta charset="UTF-8" /><title>Survival Sample Game: Section 3 - Epic Wiki</title>
<meta name="generator" content="MediaWiki 1.22.2" />
<meta name="robots" content="noindex,follow" />
<link rel="shortcut icon" href="/favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="/opensearch_desc.php" title="Epic Wiki (en)" />
<link rel="EditURI" type="application/rsd+xml" href="https://wiki.unrealengine.com/api.php?action=rsd" />
<link rel="alternate" type="application/atom+xml" title="Epic Wiki Atom feed" href="/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="stylesheet" href="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.legacy.commonPrint%2Cshared%7Cskins.vector&amp;only=styles&amp;printable=1&amp;skin=epic&amp;*" />
<link rel="stylesheet" href="/extensions/EpicVideoSystem/CSS/VideoSystem.css" /><meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;printable=1&amp;skin=epic&amp;*" />
<style>a:lang(ar),a:lang(ckb),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}
/* cache key: my_wiki:resourceloader:filter:minify-css:7:07b6a8ccf3fd62e770f192d0a6f8e123 */</style>

<script src="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;printable=1&amp;skin=epic&amp;*"></script>
<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Survival_Sample_Game:_Section_3","wgTitle":"Survival Sample Game: Section 3","wgCurRevisionId":13944,"wgRevisionId":13944,"wgArticleId":4040,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Tutorial","Templates"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Survival_Sample_Game:_Section_3","wgIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgWikiEditorEnabledModules":{"toolbar":true,"dialogs":true,"hidesig":true,"templateEditor":false,"templates":false,"preview":true,"previewDialog":false,"publish":true,"toc":false}});
}</script><script>if(window.mw){
mw.loader.implement("user.options",function(){mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"epic","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"vector-simplesearch":1,"watchcreations":0,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,"watchlisthidebots":0,
"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"useeditwarning":1,"prefershttps":1,"usebetatoolbar":1,"usebetatoolbar-cgd":1,"wikieditor-preview":1,"wikieditor-publish":1,"language":"en","variant-gan":"gan","variant-iu":"iu","variant-kk":"kk","variant-ku":"ku","variant-shi":"shi","variant-sr":"sr","variant-tg":"tg","variant-uz":"uz","variant-zh":"zh","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false,"variant":"en"});},{},{});mw.loader.implement("user.tokens",function(){mw.user.tokens.set({"editToken":"+\\","patrolToken":false,"watchToken":false});},{},{});
/* cache key: my_wiki:resourceloader:filter:minify-js:7:2197af7670c41256853f340e275ede1b */
}</script>
<script src="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=skins.epic.extras.js%7Cskins.epic.fancybox.js%7Cskins.epic.js%7Cskins.epic.qtip.js%7Cskins.epic.slimscroll.js&amp;only=scripts&amp;printable=1&amp;skin=epic&amp;*"></script>
<script>if(window.mw){
mw.loader.load(["ext.voteNY","mediawiki.page.startup","mediawiki.legacy.wikibits","mediawiki.legacy.ajax","skins.vector.js"]);
}</script>
<style type="text/css">/*<![CDATA[*/
.source-cpp {line-height: normal;}
.source-cpp li, .source-cpp pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for cpp
 * CSS class: source-cpp, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.cpp.source-cpp .de1, .cpp.source-cpp .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.cpp.source-cpp  {font-family:monospace;}
.cpp.source-cpp .imp {font-weight: bold; color: red;}
.cpp.source-cpp li, .cpp.source-cpp .li1 {font-weight: normal; vertical-align:top;}
.cpp.source-cpp .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.cpp.source-cpp .li2 {font-weight: bold; vertical-align:top;}
.cpp.source-cpp .kw1 {color: #0000ff;}
.cpp.source-cpp .kw2 {color: #0000ff;}
.cpp.source-cpp .kw3 {color: #0000dd;}
.cpp.source-cpp .kw4 {color: #0000ff;}
.cpp.source-cpp .co1 {color: #666666;}
.cpp.source-cpp .co2 {color: #339900;}
.cpp.source-cpp .coMULTI {color: #ff0000; font-style: italic;}
.cpp.source-cpp .es0 {color: #000099; font-weight: bold;}
.cpp.source-cpp .es1 {color: #000099; font-weight: bold;}
.cpp.source-cpp .es2 {color: #660099; font-weight: bold;}
.cpp.source-cpp .es3 {color: #660099; font-weight: bold;}
.cpp.source-cpp .es4 {color: #660099; font-weight: bold;}
.cpp.source-cpp .es5 {color: #006699; font-weight: bold;}
.cpp.source-cpp .br0 {color: #008000;}
.cpp.source-cpp .sy0 {color: #008000;}
.cpp.source-cpp .sy1 {color: #000080;}
.cpp.source-cpp .sy2 {color: #000040;}
.cpp.source-cpp .sy3 {color: #000040;}
.cpp.source-cpp .sy4 {color: #008080;}
.cpp.source-cpp .st0 {color: #FF0000;}
.cpp.source-cpp .nu0 {color: #0000dd;}
.cpp.source-cpp .nu6 {color: #208080;}
.cpp.source-cpp .nu8 {color: #208080;}
.cpp.source-cpp .nu12 {color: #208080;}
.cpp.source-cpp .nu16 {color:#800080;}
.cpp.source-cpp .nu17 {color:#800080;}
.cpp.source-cpp .nu18 {color:#800080;}
.cpp.source-cpp .nu19 {color:#800080;}
.cpp.source-cpp .me1 {color: #007788;}
.cpp.source-cpp .me2 {color: #007788;}
.cpp.source-cpp .ln-xtra, .cpp.source-cpp li.ln-xtra, .cpp.source-cpp div.ln-xtra {background-color: #ffc;}
.cpp.source-cpp span.xtra { display:block; }

/*]]>*/
</style><!--[if lt IE 7]><style type="text/css">body{behavior:url("/skins/epic/csshover.min.htc")}</style><![endif]--><script type="text/javascript">
var experimentID = false;
var cxApi = null;
var variation = 0;
var fancyTitle = "";
var CE_SNAPSHOT_NAME = document.getElementsByTagName("title")[0].innerHTML;
$(document).ready(function(){
	if(experimentID != false)
	{
		$(head).append('<script src="//www.google-analytics.com/cx/api.js?experiment=' + experimentID + '" />' + '</scr' + 'ipt>');
		HandleExperiment();
	}
	else
	{
		CE_SNAPSHOT_NAME = (fancyTitle != "" ? fancyTitle : document.getElementsByTagName("title")[0].innerHTML);
		setTimeout(function () {
			var a = document.createElement("script");
			var b = document.getElementsByTagName("script")[0];
			a.src = document.location.protocol + "//script.crazyegg.com/pages/scripts/0028/4572.js?" + Math.floor(new Date().getTime() / 3600000);
			a.async = true; a.type = "text/javascript"; b.parentNode.insertBefore(a, b)
		}, 1);	
	}
});
function HandleExperiment()
{
	CE_SNAPSHOT_NAME = (fancyTitle != "" ? fancyTitle : document.getElementsByTagName("title")[0].innerHTML);
	if(cxApi != null)
	{
		variation = cxApi.chooseVariation();
		cxApi.setChosenVariation(variation, experimentID);
		if(variation != cxApi.ORIGINAL_VARIATION && variation != cxApi.NO_CHOSEN_VARIATION && variation != cxApi.NOT_PARTICIPATING)
		{
			//var URL = document.location.href + (document.location.search != '' ? '&var=' : '?var=') + variation;
			ga('send', 'event', 'A/B', 'ID: ' + experimentID, 'Variation: ' + variation, {'nonInteraction': 1});
			//document.location.href = URL; 
			CE_SNAPSHOT_NAME = document.getElementsByTagName("title")[0].innerHTML + ' (variation ' + variation + ')';
			var test = "";
		}
		else
		{
			ga('send', 'event', 'A/B', 'ID: ' + experimentID, 'Variation: ' + variation, {'nonInteraction': 1});
		}
		ToggleExperimentContent(variation);
		setTimeout(function () {
			var a = document.createElement("script");
			var b = document.getElementsByTagName("script")[0];
			a.src = document.location.protocol + "//script.crazyegg.com/pages/scripts/0028/4572.js?" + Math.floor(new Date().getTime() / 3600000);
			a.async = true; a.type = "text/javascript"; b.parentNode.insertBefore(a, b)
		}, 1);
	}
	else
	{
		setTimeout("HandleExperiment()", 500);
	}
}

function ToggleExperimentContent(variation)
{
	$('.AB').hide();
	$('#variation_' + variation).show();
}
</script></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Survival_Sample_Game_Section_3 skin-epic action-view vector-animateLayout">
		<!--<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>-->
		<!-- Google Tag Manager -->
		<noscript>
			<iframe src="//www.googletagmanager.com/ns.html?id=GTM-KWRD6D"
					height="0" width="0" style="display:none;visibility:hidden"></iframe>
		</noscript>
		<script>
		(function (w, d, s, l, i) {
		w[l] = w[l] || []; w[l].push({
		'gtm.start':
		new Date().getTime(), event: 'gtm.js'
		}); var f = d.getElementsByTagName(s)[0],
		j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : ''; j.async = true; j.src =
		'//www.googletagmanager.com/gtm.js?id=' + i + dl; f.parentNode.insertBefore(j, f);
		})(window, document, 'script', 'dataLayer', 'GTM-KWRD6D');</script>
		<!-- End Google Tag Manager -->
		<div id="webThree">
		<div id="head">
		









<!DOCTYPE html>
<html>
    <head>
        <script src="https://cdn1.unrealengine.com/2934028/epicGamesHeaderBundle-de871130cac2fcbcb9e0319daa733e58.js" defer></script>
        <link rel="stylesheet" href="https://cdn1.unrealengine.com/2934028/epicGamesHeader-d8854194f8c763b7fad3d04f3bb362d6.css">
    </head>

    <body>
        <input type="hidden" id="updateenable" value="true">

        
            

<!DOCTYPE html>
<html>
    <head>
    	<meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
        
            <link rel="stylesheet" href="https://cdn1.unrealengine.com/2934028/webpack/epicGamesHeader.epic-games-nav-d718c8388be863c1ecbae8d365e64cf4.css"/>
        
    </head>
    <body>
        <script type="text/javascript">
            //required so the config object is not utf-8 encoded
            
                (function() {
                    var config = (function(){ return {"macDownloadUrl":"https://launcher-public-service-prod06.ol.epicgames.com/launcher/api/installer/download/EpicGamesLauncher.dmg","hideSearch":false,"_contentType":426,"links":[{"title":"About","useCustomCallback":false,"kids":[{"title":"Overview","href":"https://www.unrealengine.com/what-is-unreal-engine-4"},{"title":"Features","href":"https://www.unrealengine.com/unreal-engine-4"},{"title":"Virtual Reality","href":"https://www.unrealengine.com/vr-page"},{"title":"Showcase","href":"https://www.unrealengine.com/showcase"},{"title":"What's New","href":"https://www.unrealengine.com/410-release-notes-overview"},{"title":"FAQ / EULA","href":"https://www.unrealengine.com/faq"},{"title":"Previous Versions","href":"https://www.unrealengine.com/previous-versions"},{"title":"Enterprise","href":"https://www.unrealengine.com/enterprise"}],"key":"about"},{"title":"Learn","useCustomCallback":false,"collapseTarget":"More","kids":[{"title":"Documentation","useCustomCallback":false,"href":"https://docs.unrealengine.com/"},{"title":"Video Tutorials","useCustomCallback":false,"href":"https://docs.unrealengine.com/latest/INT/Videos/"},{"title":"Wiki","useCustomCallback":false,"href":"https://wiki.unrealengine.com/Main_Page"}],"key":"learn"},{"title":"Community","useCustomCallback":false,"collapseTarget":"More","kids":[{"title":"Blog","href":"https://www.unrealengine.com/blog"},{"title":"Forums","useCustomCallback":false,"href":"https://forums.unrealengine.com/"},{"title":"AnswerHub","useCustomCallback":false,"href":"https://answers.unrealengine.com/"},{"title":"Roadmap","useCustomCallback":false,"href":"https://trello.com/b/gHooNW9I/ue4-roadmap"},{"title":"Unreal Dev Grants","href":"https://www.unrealengine.com/unrealdevgrants"},{"title":"Unreal Tournament","useCustomCallback":false,"href":"https://www.epicgames.com/unrealtournament/"}],"key":"community"},{"title":"Marketplace","useCustomCallback":false,"collapseTarget":"More","kids":[{"title":" Browse","href":"https://www.unrealengine.com/marketplace"},{"title":"Business Terms","useCustomCallback":false,"href":"https://publish.unrealengine.com/faq"},{"title":"Submission Guidelines","useCustomCallback":false,"href":"https://publish.unrealengine.com/submission-guidelines"},{"title":"Submit Your Content","useCustomCallback":false,"href":"https://publish.unrealengine.com/welcome"},{"title":"Marketplace Forums","useCustomCallback":false,"href":"https://forums.unrealengine.com/forumdisplay.php?56-Marketplace"}],"key":"marketplace"},{"title":"Academia","useCustomCallback":false,"collapseTarget":"More","kids":[{"title":"Education Program","href":"https://www.unrealengine.com/education"},{"title":"Academic Partners","href":"https://www.unrealengine.com/academic-partners"}],"key":"academia"}],"properties":[{"egSkip":false,"egDisabled":false,"propertyKey":"unreal_tournament","egHref":"https://www.epicgames.com/unrealtournament/"}],"epicPropertyName":"unreal_engine","pcDownloadUrl":"https://launcher-public-service-prod06.ol.epicgames.com/launcher/api/installer/download/EpicGamesLauncherInstaller.msi","hideLocale":true,"messages":{"sign_in":"Sign In","search":"Search","locale":"Locale","sign_out":"Sign Out","default_download":"Get Epic Games","default_username":"Account"},"logoLink":{"key":"logo","href":"https://www.unrealengine.com/blog"},"accountLinks":{"signOutLink":{"useCustomCallback":true,"key":"signout"},"signInLinks":[{"title":"Sign In","href":"https://www.unrealengine.com/login","key":"signin"}],"dropdownLinks":[{"title":"Personal","href":"https://www.unrealengine.com/dashboard","key":"personal"},{"title":"Seller","useCustomCallback":false,"href":"https://publish.unrealengine.com/","key":"seller"}]},"hideCallToAction":false,"downloadLink":{"useCustomCallback":false},"callToAction":{"title":"Get Unreal","useCustomCallback":true},"hideSignIn":false,"overrideParams":{"hideLocale":true,"useServerUrl":true},"locale":"en-US","serverUrl":"https://www.unrealengine.com","isLoggedIn":false}; })();
                    if (typeof window._epicGamesNav === 'undefined') {
                        window._epicGamesNav = config;
                    } else {
                        for (var key in config) {
                            if (typeof key === 'string') {
                                if (!window._epicGamesNav[key] && config[key] !== null) {
                                    window._epicGamesNav[key] = config[key];
                                }
                            }
                        }
                    }

                    /**
                     * For a documented example of what the config json object looks like:
                     *   /frontend/app/scripts/utils/epicGamesNavObserver.js
                     */
                })();
            
        </script>

        <div id="epicGamesNavigation" data-external="false"></div>

        
            <script src="https://cdn1.unrealengine.com/2934028/webpack/epicGamesHeader.epic-games-nav-f0fb4f9d2892e2e26f7d90e16135732c.js" type="text/javascript" ></script>
        
    </body>
</html>
        

        

        <div id="header" data-path="" data-sitepath="https://www.unrealengine.com">
            <input type="hidden" id="isUnified" value="1" />
            <input type="hidden" id="current_locale" value="en-US"/>
            <input type="hidden" id="header-host" value="https://www.unrealengine.com" />
            <input type="hidden" id="current_country" value="US"/>
        </div>
    </body>
</html>




		</div>
		<div id="pagedefault">		
                    <div id="pagenav">
                        <div>
                            <!-- Start of Other language links -->
                            <!-- End of Other language links -->
                            <div class="homelink_container">
                                <a href="https://wiki.unrealengine.com" title="UE4 Wiki Home" class="homelink">HOME</a>
                            </div>
                        </div>
                        <div style="clear:both;">
                        </div>
                    </div>	
		<div id="mw-navigation" style="max-width:972px;margin:1em auto 0 auto;">
			<h2>Navigation menu</h2>
			<div id="mw-head">
				<div id="jumplink" onclick="$('#sidebar').toggle();">
					Navigation
				</div>
				<div id="sidebar">
					<!-- Start of jump page links -->
					<div class="largetitle">
						Quick Links
					</div>
					<div class="arrowlist">
						<!-- End of jump page links -->
						<!-- Start of related page links -->
						<!-- End of related page links -->								
						<div id="mw-panel">
							<div class="portal" role="navigation" id='p-navigation' aria-labelledby='p-navigation-label'>
	<h3 id='p-navigation-label'>Navigation</h3>
	<div class="body">
		<ul>
			<li id="n-mainpage-description"><a href="/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
			<li id="n-recentchanges"><a href="/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
			<li id="n-randompage"><a href="/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-Community' aria-labelledby='p-Community-label'>
	<h3 id='p-Community-label'>Community</h3>
	<div class="body">
		<ul>
			<li id="n-UE4-Games"><a href="/Category:Games">UE4 Games</a></li>
			<li id="n-Dev-Blogs"><a href="/Developer_Blogs">Dev Blogs</a></li>
			<li id="n-Dev-Livestreams"><a href="/Developer_Livestreams">Dev Livestreams</a></li>
			<li id="n-Code-Sharing-Hub"><a href="/GitHub_Sharing_Hub">Code Sharing Hub</a></li>
			<li id="n-UE-User-Groups"><a href="/User_Group_Map">UE User Groups</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-Learning_Resources' aria-labelledby='p-Learning_Resources-label'>
	<h3 id='p-Learning_Resources-label'>Learning Resources</h3>
	<div class="body">
		<ul>
			<li id="n-Tutorials"><a href="/Category:Tutorials">Tutorials</a></li>
			<li id="n-Example-Projects"><a href="/Category:Example_Projects">Example Projects</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-Software_and_Tools' aria-labelledby='p-Software_and_Tools-label'>
	<h3 id='p-Software_and_Tools-label'>Software and Tools</h3>
	<div class="body">
		<ul>
			<li id="n-Plug-ins"><a href="/Category:Plug-ins">Plug-ins</a></li>
			<li id="n-Art:-3D"><a href="/3D_Art_Resources">Art: 3D</a></li>
			<li id="n-Art:-2D"><a href="/2D_Art_Resources">Art: 2D</a></li>
			<li id="n-Audio"><a href="/Audio_Resources">Audio</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-Modding' aria-labelledby='p-Modding-label'>
	<h3 id='p-Modding-label'>Modding</h3>
	<div class="body">
		<ul>
			<li id="n-Modding-Resources"><a href="/Category:Modding_Resources">Modding Resources</a></li>
			<li id="n-Moddable-Games"><a href="/Category:Moddable_Games">Moddable Games</a></li>
			<li id="n-Unreal-Tournament"><a href="/Category:Unreal_Tournament">Unreal Tournament</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-Epic_Official' aria-labelledby='p-Epic_Official-label'>
	<h3 id='p-Epic_Official-label'>Epic Official</h3>
	<div class="body">
		<ul>
			<li id="n-Website"><a href="https://www.unrealengine.com" rel="nofollow">Website</a></li>
			<li id="n-Learning-Resources"><a href="https://docs.unrealengine.com/latest/INT/" rel="nofollow">Learning Resources</a></li>
			<li id="n-Forums"><a href="https://forums.unrealengine.com/" rel="nofollow">Forums</a></li>
			<li id="n-Blog"><a href="https://www.unrealengine.com/blog" rel="nofollow">Blog</a></li>
			<li id="n-YouTube"><a href="https://www.youtube.com/UnrealEngine" rel="nofollow">YouTube</a></li>
			<li id="n-Twitch"><a href="http://www.twitch.tv/unrealengine" rel="nofollow">Twitch</a></li>
			<li id="n-Twitter"><a href="https://twitter.com/UnrealEngine" rel="nofollow">Twitter</a></li>
			<li id="n-Facebook"><a href="https://www.facebook.com/UnrealEngine" rel="nofollow">Facebook</a></li>
			<li id="n-Instagram"><a href="https://instagram.com/unrealengine/" rel="nofollow">Instagram</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-tb' aria-labelledby='p-tb-label'>
	<h3 id='p-tb-label'>Tools</h3>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="/Special:WhatLinksHere/Survival_Sample_Game:_Section_3" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="/Special:RecentChangesLinked/Survival_Sample_Game:_Section_3" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-specialpages"><a href="/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li id="t-permalink"><a href="/index.php?title=Survival_Sample_Game:_Section_3&amp;oldid=13944" title="Permanent link to this revision of the page">Permanent link</a></li>
			<li id="t-info"><a href="/index.php?title=Survival_Sample_Game:_Section_3&amp;action=info">Page information</a></li>
		</ul>
	</div>
</div>
						</div>
					</div>
				</div>				
				<div id="left-navigation">
					<div id="p-namespaces" role="navigation" class="vectorTabs" aria-labelledby="p-namespaces-label">
	<h3 id="p-namespaces-label">Namespaces</h3>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="/Survival_Sample_Game:_Section_3"  title="View the content page [c]" accesskey="c">Page</a></span></li>
					<li  id="ca-talk" class="new"><span><a href="/index.php?title=Talk:Survival_Sample_Game:_Section_3&amp;action=edit&amp;redlink=1"  title="Discussion about the content page [t]" accesskey="t">Discussion</a></span></li>
			</ul>
</div>
<div id="p-variants" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-variants-label">
	<h3 id="mw-vector-current-variant">
		</h3>
	<h3 id="p-variants-label"><span>Variants</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
				</div>
				<div id="right-navigation">
					<div id="p-views" role="navigation" class="vectorTabs" aria-labelledby="p-views-label">
	<h3 id="p-views-label">Views</h3>
	<ul>
					<li id="ca-view" class="selected"><span><a href="/Survival_Sample_Game:_Section_3" >View</a></span></li>
					<li id="ca-viewsource"><span><a href="/index.php?title=Survival_Sample_Game:_Section_3&amp;action=edit"  title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="/index.php?title=Survival_Sample_Game:_Section_3&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">History</a></span></li>
			</ul>
</div>
<div id="p-cactions" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-cactions-label">
	<h3 id="p-cactions-label"><span>Actions</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
<div id="p-personal" role="navigation" class="" aria-labelledby="p-personal-label">
	<h3 id="p-personal-label">Personal tools</h3>
	<ul>
<li id="pt-createaccount"><a href="/index.php?title=Special:UserLogin&amp;returnto=Survival+Sample+Game%3A+Section+3&amp;returntoquery=printable%3Dyes&amp;type=signup">Create account</a></li><li id="pt-login"><a href="/index.php?title=Special:UserLogin&amp;returnto=Survival+Sample+Game%3A+Section+3&amp;returntoquery=printable%3Dyes" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>	</ul>
</div>
				</div>
			</div>
		</div>
		<div id="maincol">
		<div class="mw-body" role="main">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<!-- Start of crumbs links -->
			<div class="crumbs">
			<p>
							</p>
			</div>
			<!-- End of crumbs links -->
			<h1 id="firstHeading" class="firstHeading" lang="en"><span dir="auto">Survival Sample Game: Section 3</span></h1>
			<div id="bodyContent">
				<div id="contentSub"></div>
																<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><div class="aux">
<div>
<b>Rate this Tutorial:</b> <div id="rating_"><div class="rating-score"><div class="voteboxrate">5.00</div></div><div class="rating-section"><img class="vote-rating-star" data-vote-the-vote="1" data-vote-id="" data-vote-action="3" data-vote-rating="5.00" data-vote-voted="0" id="rating__1" src="/extensions/VoteNY/images/star_on.gif" alt="" /><img class="vote-rating-star" data-vote-the-vote="2" data-vote-id="" data-vote-action="3" data-vote-rating="5.00" data-vote-voted="0" id="rating__2" src="/extensions/VoteNY/images/star_on.gif" alt="" /><img class="vote-rating-star" data-vote-the-vote="3" data-vote-id="" data-vote-action="3" data-vote-rating="5.00" data-vote-voted="0" id="rating__3" src="/extensions/VoteNY/images/star_on.gif" alt="" /><img class="vote-rating-star" data-vote-the-vote="4" data-vote-id="" data-vote-action="3" data-vote-rating="5.00" data-vote-voted="0" id="rating__4" src="/extensions/VoteNY/images/star_on.gif" alt="" /><img class="vote-rating-star" data-vote-the-vote="5" data-vote-id="" data-vote-action="3" data-vote-rating="5.00" data-vote-voted="0" id="rating__5" src="/extensions/VoteNY/images/star_on.gif" alt="" /> <span class="rating-total">(3 votes)</span></div>
				<div class="rating-clear">
			</div></div>
</div>
<div>
<p>Approved for Versions:4.7
</p>
</div>
</div>
<p><b>This section is part of the Survival Game project. You may first want to visit the <a rel="nofollow" class="external text" href="https://wiki.unrealengine.com/Survival_sample_game">project main page</a> for a section overview and recommended documentation.</b>
</p><p><b>The latest <a rel="nofollow" class="external text" href="https://github.com/tomlooman/EpicSurvivalGameSeries">source is available for download</a> through GitHub!</b>
</p><p><b>If you have any questions, you can ask them in the <a rel="nofollow" class="external text" href="https://forums.unrealengine.com/showthread.php?63678-Upcoming-C-Gameplay-Example-Series-Making-a-Survival-Game">official forum thread official forum thread</a>.</b>
</p>
<div id="toc" class="toc"><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Introduction"><span class="tocnumber">1</span> <span class="toctext">Introduction</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="#What_is_a_Blackboard.3F"><span class="tocnumber">1.1</span> <span class="toctext">What is a Blackboard?</span></a></li>
<li class="toclevel-2 tocsection-3"><a href="#What_is_a_Behavior_Tree.3F"><span class="tocnumber">1.2</span> <span class="toctext">What is a Behavior Tree?</span></a></li>
<li class="toclevel-2 tocsection-4"><a href="#PawnSensing"><span class="tocnumber">1.3</span> <span class="toctext">PawnSensing</span></a>
<ul>
<li class="toclevel-3 tocsection-5"><a href="#Seeing"><span class="tocnumber">1.3.1</span> <span class="toctext">Seeing</span></a></li>
<li class="toclevel-3 tocsection-6"><a href="#Hearing"><span class="tocnumber">1.3.2</span> <span class="toctext">Hearing</span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1 tocsection-7"><a href="#The_Structural_Layout_of_the_Zombie_AI"><span class="tocnumber">2</span> <span class="toctext">The Structural Layout of the Zombie AI</span></a>
<ul>
<li class="toclevel-2 tocsection-8"><a href="#SZombieAIController"><span class="tocnumber">2.1</span> <span class="toctext">SZombieAIController</span></a></li>
<li class="toclevel-2 tocsection-9"><a href="#SZombieCharacter"><span class="tocnumber">2.2</span> <span class="toctext">SZombieCharacter</span></a></li>
<li class="toclevel-2 tocsection-10"><a href="#Behavior_Tree"><span class="tocnumber">2.3</span> <span class="toctext">Behavior Tree</span></a></li>
<li class="toclevel-2 tocsection-11"><a href="#Blackboard"><span class="tocnumber">2.4</span> <span class="toctext">Blackboard</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-12"><a href="#Setting_up_the_senses_in_C.2B.2B"><span class="tocnumber">3</span> <span class="toctext">Setting up the senses in C++</span></a></li>
<li class="toclevel-1 tocsection-13"><a href="#Setting_up_the_AI_Controller"><span class="tocnumber">4</span> <span class="toctext">Setting up the AI Controller</span></a>
<ul>
<li class="toclevel-2 tocsection-14"><a href="#Initializing_Blackboard_.26_Behavior_Tree"><span class="tocnumber">4.1</span> <span class="toctext">Initializing Blackboard &amp; Behavior Tree</span></a></li>
<li class="toclevel-2 tocsection-15"><a href="#Updating_Blackboard_data"><span class="tocnumber">4.2</span> <span class="toctext">Updating Blackboard data</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-16"><a href="#Breaking_down_the_Behavior_Tree"><span class="tocnumber">5</span> <span class="toctext">Breaking down the Behavior Tree</span></a>
<ul>
<li class="toclevel-2 tocsection-17"><a href="#Chasing_the_player"><span class="tocnumber">5.1</span> <span class="toctext">Chasing the player</span></a></li>
<li class="toclevel-2 tocsection-18"><a href="#Wandering_the_map"><span class="tocnumber">5.2</span> <span class="toctext">Wandering the map</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-19"><a href="#Notes"><span class="tocnumber">6</span> <span class="toctext">Notes</span></a></li>
<li class="toclevel-1 tocsection-20"><a href="#Closing"><span class="tocnumber">7</span> <span class="toctext">Closing</span></a></li>
</ul>
</div>

<h1><span class="mw-headline" id="Introduction">Introduction</span></h1>
<p>In section three we introduce the first features for our enemy AI. It can sense a player with both vision (using line of sight checks) and by sensing noise made through footsteps and gun shots. The AI is set up using C++ and a Behavior Tree including a custom Behavior Tree task in C++ to find an appropriate waypoint to wander around the level.
</p><p><iframe width="560" height="315" src="//www.youtube.com/embed/27XFykjd8Ns" frameborder="0" allowfullscreen></iframe>
</p><p>For a step-by-step tutorial on setting up Behavior Trees to follow a sensed player (using Blueprint) see <a rel="nofollow" class="external text" href="https://docs.unrealengine.com/latest/INT/Engine/AI/BehaviorTrees/QuickStart/index.html">Behavior Tree Quick Start Guide</a>
</p><p>This section will go into the C++ concepts of dealing with PawnSensing, Blackboards and Behavior Trees in Unreal Engine 4.
</p><p><a href="/File:Survival_section3_overview01.jpg" class="image"><img alt="Survival section3 overview01.jpg" src="https://d26ilriwvtzlb.cloudfront.net/c/cf/Survival_section3_overview01.jpg" width="1000" height="555" /></a>
</p>
<h2><span class="mw-headline" id="What_is_a_Blackboard.3F">What is a Blackboard?</span></h2>
<p>A blackboard is a data container for the Behavior Tree to use for decision making. A few examples of Blackboard data are TargetLocation, NextWaypoint, TargetPlayer and NeedAmmo.
</p>
<h2><span class="mw-headline" id="What_is_a_Behavior_Tree.3F">What is a Behavior Tree?</span></h2>
<p>A Behavior Tree holds the logical tree to drive motion and decisions for a bot. It can be used to search for ammo, follow a player or hide from the player in case hitpoints are low or the bot has no ammo available. It requires a Blackboard to retrieve and store data.
</p>
<h2><span class="mw-headline" id="PawnSensing">PawnSensing</span></h2>
<p><a href="/File:Survival_section3_pawnsensing01.jpg" class="image"><img alt="Survival section3 pawnsensing01.jpg" src="https://d26ilriwvtzlb.cloudfront.net/9/99/Survival_section3_pawnsensing01.jpg" width="1000" height="534" /></a>
</p><p>UPawnSensingComponent will give eyes and ears to AI bots. For noise sensing an additional UPawnNoiseEmitterComponent is required on our AI character.
</p>
<h3><span class="mw-headline" id="Seeing">Seeing</span></h3>
<p>PawnSensing supports line of sight checks to sense other pawns. There are a couple of variables to tweak including  peripheral-vision angle and sight radius. By default only players are sensed, so we don't need to filter out AI controlled enemies when updating our target to follow.
</p>
<h3><span class="mw-headline" id="Hearing">Hearing</span></h3>
<p>PawnSensing supports hearing of other pawns. This has nothing to do with the actual audio playback in the game, but is a separate system that uses UPawnNoiseEmitterComponent and calls to MakeNoise(...) to trigger events related to noise (eg. footsteps or loud gun noises)
</p><p>For the AI of this project we implemented footsteps and gun sounds that both call MakeNoise(...). To trigger footstep noise at the appropriate moments of the animation we need a custom <a rel="nofollow" class="external text" href="https://docs.unrealengine.com/latest/INT/Engine/Animation/Sequences/Notifies/index.html">AnimNotify</a> as seen below.
</p><p>The top (yellow) notifies are custom notifies that we bind to our C++ code in the Animation Blueprint to add calls for MakeNoise and to keep track of the last moment a noise was made (to visualize noise in the HUD)
</p><p><a href="/File:Survival_section3_animbp_animnotify.jpg" class="image"><img alt="Survival section3 animbp animnotify.jpg" src="https://d26ilriwvtzlb.cloudfront.net/3/3b/Survival_section3_animbp_animnotify.jpg" width="1028" height="492" /></a>
</p><p><a href="/File:Survival_section3_animbp_noiseevents.jpg" class="image"><img alt="Survival section3 animbp noiseevents.jpg" src="https://d26ilriwvtzlb.cloudfront.net/d/d8/Survival_section3_animbp_noiseevents.jpg" width="973" height="716" /></a>
</p>
<h1><span class="mw-headline" id="The_Structural_Layout_of_the_Zombie_AI">The Structural Layout of the Zombie AI</span></h1>
<p>There are many ways of setting up your AI class structure, I will briefly go over the one used in this project to make it easier to dig into the code and follow along with this guide.
</p>
<h2><span class="mw-headline" id="SZombieAIController">SZombieAIController</span></h2>
<p>The AI Controller possesses an AI Character and holds the components for the Blackboard and Behavior Tree. It's the access point to update and retrieve Blackboard data in C++.
</p>
<h2><span class="mw-headline" id="SZombieCharacter">SZombieCharacter</span></h2>
<p>Has the components for pawn and noise sensing. Updates Blackboard data through its AI Controller. Contains a Behavior Tree asset that is initialized by the AI Controller on spawn/initialization. 
</p>
<h2><span class="mw-headline" id="Behavior_Tree">Behavior Tree</span></h2>
<p>Referenced by the AI Character class. Initialized by the AI Controller.
</p>
<h2><span class="mw-headline" id="Blackboard">Blackboard</span></h2>
<p>The blackboard is referenced by the Behavior Tree asset.
</p>
<h1><span class="mw-headline" id="Setting_up_the_senses_in_C.2B.2B">Setting up the senses in C++</span></h1>
<p>To set up our senses in C++ we need a <b>UPawnSensingComponent</b> in the AI character class.
</p><p>To react to sense events from this component we bind our delegates (functions that can be hooked to other classes to trigger events, much like you do with binding of mouse and key input to functions in C++)  during BeginPlay.
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="kw4">void</span> ASZombieCharacter<span class="sy4">::</span><span class="me2">BeginPlay</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>
	Super<span class="sy4">::</span><span class="me2">BeginPlay</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
	<span class="coMULTI">/* This is the earliest moment we can bind our delegates to the component */</span>
	<span class="kw1">if</span> <span class="br0">&#40;</span>PawnSensingComp<span class="br0">&#41;</span>
	<span class="br0">&#123;</span>
		PawnSensingComp<span class="sy2">-</span><span class="sy1">&gt;</span>OnSeePawn.<span class="me1">AddDynamic</span><span class="br0">&#40;</span><span class="kw3">this</span>, <span class="sy3">&amp;</span>ASZombieCharacter<span class="sy4">::</span><span class="me2">OnSeePlayer</span><span class="br0">&#41;</span><span class="sy4">;</span>
		PawnSensingComp<span class="sy2">-</span><span class="sy1">&gt;</span>OnHearNoise.<span class="me1">AddDynamic</span><span class="br0">&#40;</span><span class="kw3">this</span>, <span class="sy3">&amp;</span>ASZombieCharacter<span class="sy4">::</span><span class="me2">OnHearNoise</span><span class="br0">&#41;</span><span class="sy4">;</span>
	<span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre></div></div>
<p>When either of these functions are called, they will update the Blackboard with a new move-to target (the sensed player character) through the AI Controller of the AI Character instance.
</p><p>Do note that to support hearing the AI requires a <b>UPawnNoiseEmitterComponent</b> to receive data from any MakeNoise(...) calls other Pawns may produce. (We add this component in SBaseCharacter.h class)
</p>
<h1><span class="mw-headline" id="Setting_up_the_AI_Controller">Setting up the AI Controller</span></h1>
<p>The AI Controller contains the components for Blackboard and Behavior Trees (Although note that the behavior tree itself resides in the AI Character so we may re-use the same AIController class with different bot behaviors) It is the gateway to update data to the Blackboard and runs any available Behavior Tree that was provided by the AI Character it possesses.
</p>
<h2><span class="mw-headline" id="Initializing_Blackboard_.26_Behavior_Tree">Initializing Blackboard &amp; Behavior Tree</span></h2>
<p>Whenever a bot is initialized or respawned it will be possessed by an AI Controller. This is the moment to initialize the Blackboard and run the Behavior Tree to start the bot decision making.
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="kw4">void</span> ASZombieAIController<span class="sy4">::</span><span class="me2">Possess</span><span class="br0">&#40;</span><span class="kw2">class</span> APawn<span class="sy2">*</span> InPawn<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
	Super<span class="sy4">::</span><span class="me2">Possess</span><span class="br0">&#40;</span>InPawn<span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
	ASZombieCharacter<span class="sy2">*</span> ZombieBot <span class="sy1">=</span> Cast<span class="sy1">&lt;</span>ASZombieCharacter<span class="sy1">&gt;</span><span class="br0">&#40;</span>InPawn<span class="br0">&#41;</span><span class="sy4">;</span>
	<span class="kw1">if</span> <span class="br0">&#40;</span>ZombieBot<span class="br0">&#41;</span>
	<span class="br0">&#123;</span>
		<span class="kw1">if</span> <span class="br0">&#40;</span>ZombieBot<span class="sy2">-</span><span class="sy1">&gt;</span>BehaviorTree<span class="sy2">-</span><span class="sy1">&gt;</span>BlackboardAsset<span class="br0">&#41;</span>
		<span class="br0">&#123;</span>
			BlackboardComp<span class="sy2">-</span><span class="sy1">&gt;</span>InitializeBlackboard<span class="br0">&#40;</span><span class="sy2">*</span>ZombieBot<span class="sy2">-</span><span class="sy1">&gt;</span>BehaviorTree<span class="sy2">-</span><span class="sy1">&gt;</span>BlackboardAsset<span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
			<span class="coMULTI">/* Make sure the Blackboard has the type of bot we possessed */</span>
			BlackboardComp<span class="sy2">-</span><span class="sy1">&gt;</span>SetValueAsEnum<span class="br0">&#40;</span>BotTypeKeyName, <span class="br0">&#40;</span><span class="kw4">uint8</span><span class="br0">&#41;</span>ZombieBot<span class="sy2">-</span><span class="sy1">&gt;</span>BotType<span class="br0">&#41;</span><span class="sy4">;</span>
		<span class="br0">&#125;</span>
&#160;
		BehaviorComp<span class="sy2">-</span><span class="sy1">&gt;</span>StartTree<span class="br0">&#40;</span><span class="sy2">*</span>ZombieBot<span class="sy2">-</span><span class="sy1">&gt;</span>BehaviorTree<span class="br0">&#41;</span><span class="sy4">;</span>
	<span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre></div></div>
<h2><span class="mw-headline" id="Updating_Blackboard_data">Updating Blackboard data</span></h2>
<p>When new sense data is available it must be updated in the Blackboard for the Behavior Tree to use. For this we need the KeyName (eg. "TargetLocation" as specified in the Blackboard asset) and the Blackboard Component. Below is one example of how we can push this data into the Blackboard.
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="kw4">void</span> ASZombieAIController<span class="sy4">::</span><span class="me2">SetTargetEnemy</span><span class="br0">&#40;</span>APawn<span class="sy2">*</span> NewTarget<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
	<span class="kw1">if</span> <span class="br0">&#40;</span>BlackboardComp<span class="br0">&#41;</span>
	<span class="br0">&#123;</span>
		BlackboardComp<span class="sy2">-</span><span class="sy1">&gt;</span>SetValueAsObject<span class="br0">&#40;</span>TargetEnemyKeyName, NewTarget<span class="br0">&#41;</span><span class="sy4">;</span>
	<span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre></div></div>
<h1><span class="mw-headline" id="Breaking_down_the_Behavior_Tree">Breaking down the Behavior Tree</span></h1>
<p><a href="/File:Survival_section3_bt03.jpg" class="image"><img alt="Survival section3 bt03.jpg" src="https://d26ilriwvtzlb.cloudfront.net/3/3f/Survival_section3_bt03.jpg" width="1091" height="1052" /></a>
</p><p>The Behavior Tree steers the decisions and motion of our AI bot. These decisions are based on the available data in the Blackboard asset.
</p>
<h2><span class="mw-headline" id="Chasing_the_player">Chasing the player</span></h2>
<p><a href="/File:Survival_section3_chasingplayer.jpg" class="image"><img alt="Survival section3 chasingplayer.jpg" src="https://d26ilriwvtzlb.cloudfront.net/0/0e/Survival_section3_chasingplayer.jpg" width="1416" height="508" /></a>
</p><p>Whenever a player is sensed and the TargetEnemy is updated by the bot class in C++ we will successfully pass "Has Sensed Enemy" and move to "Has Target Location" which is set by the same AI Character C++ class. That should succeed and move into "Move to Sensed Player" to finally move to the TargetLocation.
</p><p>"Has Sensed Player" has "Aborts Lower Priority" set up so we can immediately cancel our any other running behaviors when this value changes. This is used in this particular tree to cancel the patrol/wandering behavior on the right side of the tree.
</p>
<h2><span class="mw-headline" id="Wandering_the_map">Wandering the map</span></h2>
<p><a href="/File:Survival_section3_waypoints01.jpg" class="image"><img alt="Survival section3 waypoints01.jpg" src="https://d26ilriwvtzlb.cloudfront.net/9/9c/Survival_section3_waypoints01.jpg" width="1000" height="624" /></a>
</p><p>By default the bot is set to Passive (this is a custom Enum we created in STypes.h), this completely disables the wander/patrol part of this blackboard through the conditional "Should Wander" check in the tree.
</p><p>When enabled it will try to locate a Waypoint object in the level through the "Find Bot Waypoint" task. This is a custom task we created in C++ to search for objects on the map of the SBotWaypoint type. When the "Has a Waypoint" succeeds we will continue with another custom task that finds a position on the navigation mesh nearby the Waypoint object we found previously. And finally we "Move to Waypoint".
</p><p>Both "Find X" tasks in the tree update the blackboard with new data for the other nodes to use (in this case CurrentWaypoint and PatrolLocation are updated by these tasks)
</p><p>This flow will be cancelled as soon as "Has Sensed Enemy" is successful so sensing an enemy takes priority over wandering around the map.
</p>
<h1><span class="mw-headline" id="Notes">Notes</span></h1>
<ul>
<li> To work with the AI features of the engine we must include the <b>"AIModule" in SurvivalGame.Build.cs</b>, please don't forget this module if you're re-creating any of these features for your own project. 
</li>
<li> We have several physically simulated barriers in our level, this requires a dynamic Navigation Mesh. To set this up in your own project go to <b>Edit &gt; Project Settings &gt; Navigation Mesh</b> and enable "Rebuild at runtime". 
</li>
<li> When using bots any level must include an encapsulating <b>Nav Mesh Bounds Volume</b> (under Modes &gt; Volumes, see image) 
</li>
</ul>
<p><a href="/File:Navmeshcreation.jpg" class="image"><img alt="Navmeshcreation.jpg" src="https://d26ilriwvtzlb.cloudfront.net/a/a9/Navmeshcreation.jpg" width="1590" height="575" /></a>
</p>
<h1><span class="mw-headline" id="Closing">Closing</span></h1>
<p>In this section we've added the basic follow and patrol features for our zombie AI. In upcoming sections we will continue to expand the enemy by attacking an attack ability etc. If you are confused on a particular feature or piece of code, feel free to ask about it in the <a rel="nofollow" class="external text" href="https://forums.unrealengine.com/showthread.php?67859-Announcing-Section-3-for-Survival-Game">official section 3 thread</a> for this project.
</p>
<ul>
<li> <a rel="nofollow" class="external text" href="https://wiki.unrealengine.com/Survival_sample_game">Main Project Page</a>
</li>
<li> <a rel="nofollow" class="external text" href="https://forums.unrealengine.com/showthread.php?63678-Upcoming-C-Gameplay-Example-Series-Making-a-Survival-Game">Main Forum Thread</a>
</li>
<li> <a rel="nofollow" class="external text" href="https://github.com/tomlooman/EpicSurvivalGameSeries">Source on GitHub</a>
</li>
</ul>

<!-- 
NewPP limit report
CPU time usage: 0.160 seconds
Real time usage: 0.316 seconds
Preprocessor visited node count: 128/1000000
Preprocessor generated node count: 214/1000000
Post‐expand include size: 167/2097152 bytes
Template argument size: 11/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
-->
</div>												<div class="printfooter">
				Retrieved from "<a href="https://wiki.unrealengine.com/index.php?title=Survival_Sample_Game:_Section_3&amp;oldid=13944">https://wiki.unrealengine.com/index.php?title=Survival_Sample_Game:_Section_3&amp;oldid=13944</a>"				</div>
												<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="/Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="/Category:Tutorial" title="Category:Tutorial">Tutorial</a></li><li><a href="/Category:Templates" title="Category:Templates">Templates</a></li></ul></div></div>												<div class="visualClear"></div>
							</div>
		</div>
		</div>
		</div>
		
		<div id="footer">
			<div id="brand">

			</div>
			<div id="legal">
				<div id="copyright">
					&copy; 2004-2015, Epic Games, Inc. All rights reserved. Unreal and its logo are Epic's trademarks or registered trademarks in the US and elsewhere.
				</div>
				<div id="terms">
					<a target="_blank" href="http://epicgames.com/tou">TERMS OF USE</a> | <a target="_blank" href="http://epicgames.com/privacynotice">PRIVACY POLICY</a>
				</div>
			</div>
		</div>
	</div>
		<!--<div id="footer" role="contentinfo">
										<ul id="footer-icons" class="noprint">
					<li id="footer-copyrightico">
						<div name="copyright">&#169; 2004-2014, Epic Games, Inc. All rights reserved. Epic Games, Unreal, Unreal Engine, Unreal Tournament, and their respective logos are Epic's trademarks or registered trademarks in the US and elsewhere.</div>
					</li>
					<li id="footer-termsofuseico">
						<div name="termsofuse"><a href="http://epicgames.com/tou" target="_blank">Terms of Use</a></div>
					</li>
					<li id="footer-privacynoticeico">
						<div name="privacynotice"><a href="http://epicgames.com/privacynotice" target="_blank">Privacy Policy</a></div>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>-->
		<script>/*<![CDATA[*/window.jQuery && jQuery.ready();/*]]>*/</script><script>if(window.mw){
mw.loader.state({"site":"loading","user":"ready","user.groups":"ready"});
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.action.view.postEdit","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.searchSuggest","skins.vector.collapsibleNav"],null,true);
}</script>
<script src="/extensions/EpicSearchSystem/Javascript/Search.js?303"></script>
<script src="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;printable=1&amp;skin=epic&amp;*"></script>
<!-- Served in 0.421 secs. -->		<img src="https://tracking.unrealengine.com/track.png" width="1" height="1">
		<!--<script type="text/javascript">
			setTimeout(function () {
				var a = document.createElement("script");
				var b = document.getElementsByTagName("script")[0];
				a.src = document.location.protocol + "//script.crazyegg.com/pages/scripts/0028/4572.js?" + Math.floor(new Date().getTime() / 3600000);
				a.async = true; a.type = "text/javascript"; b.parentNode.insertBefore(a, b)
			}, 1);
		</script>-->
	</body>
</html>

		