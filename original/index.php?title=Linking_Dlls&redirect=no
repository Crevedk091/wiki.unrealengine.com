<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<meta charset="UTF-8" /><title>Linking Dlls - Epic Wiki</title>
<meta name="generator" content="MediaWiki 1.22.2" />
<link rel="shortcut icon" href="/favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="/opensearch_desc.php" title="Epic Wiki (en)" />
<link rel="EditURI" type="application/rsd+xml" href="https://wiki.unrealengine.com/api.php?action=rsd" />
<link rel="alternate" type="application/atom+xml" title="Epic Wiki Atom feed" href="/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="stylesheet" href="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.legacy.commonPrint%2Cshared%7Cskins.vector&amp;only=styles&amp;skin=vector&amp;*" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=vector&amp;*" />
<style>a:lang(ar),a:lang(ckb),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}
/* cache key: my_wiki:resourceloader:filter:minify-css:7:07b6a8ccf3fd62e770f192d0a6f8e123 */</style>

<script src="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Linking_Dlls","wgTitle":"Linking Dlls","wgCurRevisionId":4646,"wgRevisionId":4646,"wgArticleId":1527,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Code"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Linking_Dlls","wgIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgWikiEditorEnabledModules":{"toolbar":true,"dialogs":true,"hidesig":true,"templateEditor":false,"templates":false,"preview":true,"previewDialog":false,"publish":true,"toc":false}});
}</script><script>if(window.mw){
mw.loader.implement("user.options",function(){mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"vector","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"vector-simplesearch":1,"watchcreations":0,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,"watchlisthidebots":0,
"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"useeditwarning":1,"prefershttps":1,"usebetatoolbar":1,"usebetatoolbar-cgd":1,"wikieditor-preview":1,"wikieditor-publish":1,"language":"en","variant-gan":"gan","variant-iu":"iu","variant-kk":"kk","variant-ku":"ku","variant-shi":"shi","variant-sr":"sr","variant-tg":"tg","variant-uz":"uz","variant-zh":"zh","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false,"variant":"en"});},{},{});mw.loader.implement("user.tokens",function(){mw.user.tokens.set({"editToken":"+\\","patrolToken":false,"watchToken":false});},{},{});
/* cache key: my_wiki:resourceloader:filter:minify-js:7:27249162ef7002415c3792ce5dfd2a9a */
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.page.startup","mediawiki.legacy.wikibits","mediawiki.legacy.ajax","skins.vector.js"]);
}</script>
<style type="text/css">/*<![CDATA[*/
.source-cpp {line-height: normal;}
.source-cpp li, .source-cpp pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for cpp
 * CSS class: source-cpp, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.cpp.source-cpp .de1, .cpp.source-cpp .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.cpp.source-cpp  {font-family:monospace;}
.cpp.source-cpp .imp {font-weight: bold; color: red;}
.cpp.source-cpp li, .cpp.source-cpp .li1 {font-weight: normal; vertical-align:top;}
.cpp.source-cpp .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.cpp.source-cpp .li2 {font-weight: bold; vertical-align:top;}
.cpp.source-cpp .kw1 {color: #0000ff;}
.cpp.source-cpp .kw2 {color: #0000ff;}
.cpp.source-cpp .kw3 {color: #0000dd;}
.cpp.source-cpp .kw4 {color: #0000ff;}
.cpp.source-cpp .co1 {color: #666666;}
.cpp.source-cpp .co2 {color: #339900;}
.cpp.source-cpp .coMULTI {color: #ff0000; font-style: italic;}
.cpp.source-cpp .es0 {color: #000099; font-weight: bold;}
.cpp.source-cpp .es1 {color: #000099; font-weight: bold;}
.cpp.source-cpp .es2 {color: #660099; font-weight: bold;}
.cpp.source-cpp .es3 {color: #660099; font-weight: bold;}
.cpp.source-cpp .es4 {color: #660099; font-weight: bold;}
.cpp.source-cpp .es5 {color: #006699; font-weight: bold;}
.cpp.source-cpp .br0 {color: #008000;}
.cpp.source-cpp .sy0 {color: #008000;}
.cpp.source-cpp .sy1 {color: #000080;}
.cpp.source-cpp .sy2 {color: #000040;}
.cpp.source-cpp .sy3 {color: #000040;}
.cpp.source-cpp .sy4 {color: #008080;}
.cpp.source-cpp .st0 {color: #FF0000;}
.cpp.source-cpp .nu0 {color: #0000dd;}
.cpp.source-cpp .nu6 {color: #208080;}
.cpp.source-cpp .nu8 {color: #208080;}
.cpp.source-cpp .nu12 {color: #208080;}
.cpp.source-cpp .nu16 {color:#800080;}
.cpp.source-cpp .nu17 {color:#800080;}
.cpp.source-cpp .nu18 {color:#800080;}
.cpp.source-cpp .nu19 {color:#800080;}
.cpp.source-cpp .me1 {color: #007788;}
.cpp.source-cpp .me2 {color: #007788;}
.cpp.source-cpp .ln-xtra, .cpp.source-cpp li.ln-xtra, .cpp.source-cpp div.ln-xtra {background-color: #ffc;}
.cpp.source-cpp span.xtra { display:block; }

/*]]>*/
</style><!--[if lt IE 7]><style type="text/css">body{behavior:url("/skins/vector/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Linking_Dlls skin-vector action-view vector-animateLayout">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<div id="content" class="mw-body" role="main">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<h1 id="firstHeading" class="firstHeading" lang="en"><span dir="auto">Linking Dlls</span></h1>
			<div id="bodyContent">
								<div id="siteSub">From Epic Wiki</div>
								<div id="contentSub"></div>
												<div id="jump-to-nav" class="mw-jump">
					Jump to:					<a href="#mw-navigation">navigation</a>, 					<a href="#p-search">search</a>
				</div>
				<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><table align="right">
<tr>
<td> <div id="toc" class="toc"><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Overview"><span class="tocnumber">1</span> <span class="toctext">Overview</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#brief_to_make_a_dll_inside_Visual_Studio_2013"><span class="tocnumber">2</span> <span class="toctext">brief to make a dll inside Visual Studio 2013</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#Preparing_files_and_unreal_project"><span class="tocnumber">3</span> <span class="toctext">Preparing files and unreal project</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="#Bind_Dll_to_blueprint_function"><span class="tocnumber">4</span> <span class="toctext">Bind Dll to blueprint function</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="#summary"><span class="tocnumber">5</span> <span class="toctext">summary</span></a></li>
</ul>
</div>

</td></tr></table>
<p><i>Original Author:</i> <a href="/User:ZkarmaKun" title="User:ZkarmaKun">ZkarmaKun</a> (<a href="/User_talk:ZkarmaKun" title="User talk:ZkarmaKun">talk</a>)
</p>
<h2><span class="mw-headline" id="Overview">Overview</span></h2>
<p>because the community is great i made this... 
</p><p>In this tutorial i will explain a simple example to link or bind your own DLL to unreal engine and how convert your functions inside your DLL to blueprint unreal functions, which is awesome!!!
</p>
<h2><span class="mw-headline" id="brief_to_make_a_dll_inside_Visual_Studio_2013">brief to make a dll inside Visual Studio 2013</span></h2>
<p>We center in Bind to unreal, this is just a brief explanation to make a DLL inside visual studio.
</p>
<ul>
<li> first you need to create a project inside dll as win32 console application and choose to dll option, as you wish, you can choose between empty or some starter content, i prefer empty
</li>
<li> then you can add your code.
</li>
<li> you need change the win32 for win64, you can change in the solution plataform option.
</li>
<li> finally compile your project, this give you a .dll file on your project path.
</li>
</ul>
<h2><span class="mw-headline" id="Preparing_files_and_unreal_project">Preparing files and unreal project</span></h2>
<p>For simplicity i prefer copy my DLL inside plugin folder on unreal engine project, this make more easy find and use them.
for this tutorial i make a simple function inside my DLL i called getCircleArea:
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="kw4">float</span> getCircleArea<span class="br0">&#40;</span><span class="kw4">float</span> radius<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
     <span class="kw1">return</span> <span class="nu16">3.1416</span> <span class="sy2">*</span> <span class="br0">&#40;</span>radius<span class="sy2">*</span>radius<span class="br0">&#41;</span><span class="sy4">;</span>
<span class="br0">&#125;</span></pre></div></div>
<h2><span class="mw-headline" id="Bind_Dll_to_blueprint_function">Bind Dll to blueprint function</span></h2>
<p>inside unreal editor we need add code from the wizard, choose file-&gt;add code to project.., you can choose any kind of parent class, ahead we need edit them.
now we edit our code in VS2013. 
</p><p>This is the code for my .h:
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="co2">#pragma once</span>
&#160;
<span class="co2">#include &quot;GameFramework/Actor.h&quot;</span>
<span class="co2">#include &quot;Libraries.generated.h&quot;</span>
&#160;
<span class="coMULTI">/**
 * 
 */</span>
UCLASS<span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="kw2">class</span> ULibraries <span class="sy4">:</span> <span class="kw2">public</span> UBlueprintFunctionLibrary
<span class="br0">&#123;</span>
	GENERATED_UCLASS_BODY<span class="br0">&#40;</span><span class="br0">&#41;</span>
&#160;
	UFUNCTION<span class="br0">&#40;</span>BlueprintCallable, Category <span class="sy1">=</span> <span class="st0">&quot;Karma Libraries&quot;</span><span class="br0">&#41;</span>
	<span class="kw4">static</span> <span class="kw4">float</span> getCircleAreaDLL<span class="br0">&#40;</span><span class="kw4">float</span> radius<span class="br0">&#41;</span><span class="sy4">;</span>	
<span class="br0">&#125;</span><span class="sy4">;</span></pre></div></div>
<p>notice i change my parent class for UBlueprintFunctionLibrary and i declare my function in a very normal way, now just rest bind my dll in the .cpp
</p><p>now this is my .cpp code:
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="co2">#include &quot;MyProject.h&quot;</span>
<span class="co2">#include &quot;Libraries.h&quot;</span>
&#160;
<span class="kw4">typedef</span> <span class="kw4">float</span><span class="br0">&#40;</span><span class="sy2">*</span>_getCircleArea<span class="br0">&#41;</span><span class="br0">&#40;</span><span class="kw4">float</span> radius<span class="br0">&#41;</span><span class="sy4">;</span> <span class="co1">//our typedef is must be the same type of our dll function.</span>
&#160;
ULibraries<span class="sy4">::</span><span class="me2">ULibraries</span><span class="br0">&#40;</span><span class="kw4">const</span> <span class="kw2">class</span> FPostConstructInitializeProperties<span class="sy3">&amp;</span> PCIP<span class="br0">&#41;</span>
	<span class="sy4">:</span> Super<span class="br0">&#40;</span>PCIP<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
&#160;
<span class="br0">&#125;</span>
&#160;
<span class="kw4">float</span> ULibraries<span class="sy4">::</span><span class="me2">getCircleAreaDLL</span><span class="br0">&#40;</span><span class="kw4">float</span> radius<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
	FString filePath <span class="sy1">=</span> FPaths<span class="sy4">::</span><span class="me2">Combine</span><span class="br0">&#40;</span><span class="sy2">*</span>FPaths<span class="sy4">::</span><span class="me2">GamePluginsDir</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, TEXT<span class="br0">&#40;</span><span class="st0">&quot;KarmasDLLs/&quot;</span><span class="br0">&#41;</span>, TEXT<span class="br0">&#40;</span><span class="st0">&quot;BindTest.dll&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span> <span class="co1">// get the plugin path, add the folder to contain the dll, and add the dll name</span>
	<span class="kw1">if</span> <span class="br0">&#40;</span>FPaths<span class="sy4">::</span><span class="me2">FileExists</span><span class="br0">&#40;</span>filePath<span class="br0">&#41;</span><span class="br0">&#41;</span>
	<span class="br0">&#123;</span>
		<span class="kw4">void</span> <span class="sy2">*</span>DLLHandle<span class="sy4">;</span>
		DLLHandle <span class="sy1">=</span> FPlatformProcess<span class="sy4">::</span><span class="me2">GetDllHandle</span><span class="br0">&#40;</span><span class="sy2">*</span>filePath<span class="br0">&#41;</span><span class="sy4">;</span> <span class="co1">// get dll</span>
		<span class="kw1">if</span> <span class="br0">&#40;</span>DLLHandle <span class="sy3">!</span><span class="sy1">=</span> <span class="kw2">NULL</span><span class="br0">&#41;</span>
		<span class="br0">&#123;</span>
			_getCircleArea DLLgetCircleArea <span class="sy1">=</span> <span class="kw2">NULL</span><span class="sy4">;</span> <span class="co1">// the container for our dll function</span>
			FString procName <span class="sy1">=</span> <span class="st0">&quot;getCircleArea&quot;</span><span class="sy4">;</span> <span class="co1">// the exact name of our dll function to recover</span>
			DLLgetCircleArea <span class="sy1">=</span> <span class="br0">&#40;</span>_getCircleArea<span class="br0">&#41;</span>FPlatformProcess<span class="sy4">::</span><span class="me2">GetDllExport</span><span class="br0">&#40;</span>DLLHandle, <span class="sy2">*</span>procName<span class="br0">&#41;</span><span class="sy4">;</span> <span class="co1">// get the dll function need</span>
			<span class="kw1">if</span> <span class="br0">&#40;</span>DLLgetCircleArea <span class="sy3">!</span><span class="sy1">=</span> <span class="kw2">NULL</span><span class="br0">&#41;</span>
			<span class="br0">&#123;</span>
				<span class="kw4">float</span> out <span class="sy1">=</span> DLLgetCircleArea<span class="br0">&#40;</span>radius<span class="br0">&#41;</span><span class="sy4">;</span> <span class="co1">// call our dll function</span>
				<span class="kw1">return</span> out<span class="sy4">;</span> <span class="co1">// return to UE</span>
			<span class="br0">&#125;</span>
		<span class="br0">&#125;</span>
	<span class="br0">&#125;</span>
	<span class="kw1">return</span> <span class="nu17">1.00f</span><span class="sy4">;</span>
<span class="br0">&#125;</span></pre></div></div>
<p>ok lets explain that:
</p>
<ul>
<li> outside of everything i declare a typedef, in my case the radius of a circle is of course a float type, if you dont know what is typedef is just a declaration of our own type of data, you need declare in this way... typedef dataType(*dataName)(arguments);
</li>
<li> now the fun stuff, inside the getCircleAreaDLL function the Fstring file path give us the path of our project plugin folder, then i add the folder name which contain my DLL and finally add to string of dll name.
</li>
<li> ok now for safety check if the file exists with help of the FPaths functionallity, if exists now we try to catch the dll, we declare a empty void called DLLHandle, after we try cacth with GetDllHandle function and pass the filePath as argument.
</li>
<li> now check if we truly catch the dll asking for a null val, if not null we can proceed, now we declare our kind of typedef as null, then we declare a simple Fstring with our dll function name, is very important to write correctly the name otherwise this never works for obvious reason!
</li>
<li> now the darkness magic occurs, pass the function to our previous declaration of the typedef var, this is archive with the GetDllExport function, passing as arguments the DLLHandle of course, and the name of the procedure we need, notice at begin i add the type of data we need return in this case was (_getCircleArea) again for obvius reason!.
</li>
<li>check if the DLLgetCircleArea not equal to null. if not will be great!!!!, because you can now call your dll function, just create a var to contain the return and pass to unreal return!!!!
</li>
<li>finally you now call your function to whatever blueprint 
</li>
</ul>
<p>Here the graph:
</p><p><a href="/File:DLLgraph.png" class="image"><img alt="DLLgraph.png" src="https://d26ilriwvtzlb.cloudfront.net/2/2c/DLLgraph.png" width="1088" height="285" /></a>
</p><p>Here is the test:
</p><p><a href="/File:DLLTest.png" class="image"><img alt="DLLTest.png" src="https://d26ilriwvtzlb.cloudfront.net/f/f0/DLLTest.png" width="451" height="403" /></a>
</p>
<h2><span class="mw-headline" id="summary">summary</span></h2>
<p>Ok this is all, enjoy people, and let me say welcome to unreal all arduino user, we love it!!!
</p><p><a href="/User:ZkarmaKun" title="User:ZkarmaKun">ZkarmaKun</a> (<a href="/User_talk:ZkarmaKun" title="User talk:ZkarmaKun">talk</a>)
</p>
<!-- 
NewPP limit report
CPU time usage: 0.108 seconds
Real time usage: 0.165 seconds
Preprocessor visited node count: 46/1000000
Preprocessor generated node count: 84/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key my_wiki:pcache:idhash:1527-0!*!0!!en!2!* and timestamp 20140824041619
 -->
</div>								<div class="printfooter">
				Retrieved from "<a href="https://wiki.unrealengine.com/index.php?title=Linking_Dlls&amp;oldid=4646">https://wiki.unrealengine.com/index.php?title=Linking_Dlls&amp;oldid=4646</a>"				</div>
												<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="/Special:Categories" title="Special:Categories">Category</a>: <ul><li><a href="/Category:Code" title="Category:Code">Code</a></li></ul></div></div>												<div class="visualClear"></div>
							</div>
		</div>
		<div id="mw-navigation">
			<h2>Navigation menu</h2>
			<div id="mw-head">
				<div id="p-personal" role="navigation" class="" aria-labelledby="p-personal-label">
	<h3 id="p-personal-label">Personal tools</h3>
	<ul>
<li id="pt-createaccount"><a href="/index.php?title=Special:UserLogin&amp;returnto=Linking+Dlls&amp;returntoquery=redirect%3Dno&amp;type=signup">Create account</a></li><li id="pt-login"><a href="/index.php?title=Special:UserLogin&amp;returnto=Linking+Dlls&amp;returntoquery=redirect%3Dno" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>	</ul>
</div>
				<div id="left-navigation">
					<div id="p-namespaces" role="navigation" class="vectorTabs" aria-labelledby="p-namespaces-label">
	<h3 id="p-namespaces-label">Namespaces</h3>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="/Linking_Dlls"  title="View the content page [c]" accesskey="c">Page</a></span></li>
					<li  id="ca-talk" class="new"><span><a href="/index.php?title=Talk:Linking_Dlls&amp;action=edit&amp;redlink=1"  title="Discussion about the content page [t]" accesskey="t">Discussion</a></span></li>
			</ul>
</div>
<div id="p-variants" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-variants-label">
	<h3 id="mw-vector-current-variant">
		</h3>
	<h3 id="p-variants-label"><span>Variants</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
				</div>
				<div id="right-navigation">
					<div id="p-views" role="navigation" class="vectorTabs" aria-labelledby="p-views-label">
	<h3 id="p-views-label">Views</h3>
	<ul>
					<li id="ca-view" class="selected"><span><a href="/Linking_Dlls" >Read</a></span></li>
					<li id="ca-viewsource"><span><a href="/index.php?title=Linking_Dlls&amp;action=edit"  title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="/index.php?title=Linking_Dlls&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">View history</a></span></li>
			</ul>
</div>
<div id="p-cactions" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-cactions-label">
	<h3 id="p-cactions-label"><span>Actions</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
<div id="p-search" role="search">
	<h3><label for="searchInput">Search</label></h3>
	<form action="/index.php" id="searchform">
				<div id="simpleSearch">
						<input name="search" placeholder="Search" title="Search Epic Wiki [f]" accesskey="f" id="searchInput" />						<button type="submit" name="button" title="Search the pages for this text" id="searchButton"><img src="/skins/vector/images/search-ltr.png?303" alt="Search" width="12" height="13" /></button>								<input type='hidden' name="title" value="Special:Search"/>
		</div>
	</form>
</div>
				</div>
			</div>
			<div id="mw-panel">
					<div id="p-logo" role="banner"><a style="background-image: url(/images/WikiLogo_uev2.png);" href="/Main_Page"  title="Visit the main page"></a></div>
				<div class="portal" role="navigation" id='p-navigation' aria-labelledby='p-navigation-label'>
	<h3 id='p-navigation-label'>Navigation</h3>
	<div class="body">
		<ul>
			<li id="n-mainpage"><a href="/Main_Page" title="Visit the main page [z]" accesskey="z">Main Page</a></li>
			<li id="n-Tutorials"><a href="/Category:Tutorials">Tutorials</a></li>
			<li id="n-Videos"><a href="/Videos">Videos</a></li>
			<li id="n-Plug-ins"><a href="/Category:Plug-ins">Plug-ins</a></li>
			<li id="n-Code"><a href="/Category:Code">Code</a></li>
			<li id="n-Games"><a href="/Category:Games">Games</a></li>
			<li id="n-Unreal-Tournament"><a href="/Category:Unreal_Tournament">Unreal Tournament</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-tb' aria-labelledby='p-tb-label'>
	<h3 id='p-tb-label'>Tools</h3>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="/Special:WhatLinksHere/Linking_Dlls" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="/Special:RecentChangesLinked/Linking_Dlls" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-specialpages"><a href="/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li id="t-print"><a href="/index.php?title=Linking_Dlls&amp;redirect=no&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>
			<li id="t-permalink"><a href="/index.php?title=Linking_Dlls&amp;oldid=4646" title="Permanent link to this revision of the page">Permanent link</a></li>
			<li id="t-info"><a href="/index.php?title=Linking_Dlls&amp;action=info">Page information</a></li>
		</ul>
	</div>
</div>
			</div>
		</div>
		<div id="footer" role="contentinfo">
										<ul id="footer-icons" class="noprint">
					<li id="footer-copyrightico">
						<div name="copyright">&#169; 2004-2014, Epic Games, Inc. All rights reserved. Epic Games, Unreal, Unreal Engine, Unreal Tournament, and their respective logos are Epic's trademarks or registered trademarks in the US and elsewhere.</div>
					</li>
					<li id="footer-termsofuseico">
						<div name="termsofuse"><a href="http://epicgames.com/tou" target="_blank">Terms of Use</a></div>
					</li>
					<li id="footer-privacynoticeico">
						<div name="privacynotice"><a href="http://epicgames.com/privacynotice" target="_blank">Privacy Policy</a></div>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>
		<script>/*<![CDATA[*/window.jQuery && jQuery.ready();/*]]>*/</script><script>if(window.mw){
mw.loader.state({"site":"loading","user":"ready","user.groups":"ready"});
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.action.view.postEdit","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.searchSuggest","skins.vector.collapsibleNav"],null,true);
}</script>
<script src="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=vector&amp;*"></script>
<!-- Served in 0.055 secs. -->
	</body>
</html>
