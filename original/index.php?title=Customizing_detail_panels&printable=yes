<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<meta charset="UTF-8" /><title>Customizing detail panels - Epic Wiki</title>
<meta name="generator" content="MediaWiki 1.22.2" />
<meta name="robots" content="noindex,follow" />
<link rel="shortcut icon" href="/favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="/opensearch_desc.php" title="Epic Wiki (en)" />
<link rel="EditURI" type="application/rsd+xml" href="https://wiki.unrealengine.com/api.php?action=rsd" />
<link rel="alternate" type="application/atom+xml" title="Epic Wiki Atom feed" href="/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="stylesheet" href="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.legacy.commonPrint%2Cshared%7Cskins.vector&amp;only=styles&amp;printable=1&amp;skin=epic&amp;*" />
<link rel="stylesheet" href="/extensions/EpicVideoSystem/CSS/VideoSystem.css" /><meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;printable=1&amp;skin=epic&amp;*" />
<style>a:lang(ar),a:lang(ckb),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}
/* cache key: my_wiki:resourceloader:filter:minify-css:7:07b6a8ccf3fd62e770f192d0a6f8e123 */</style>

<script src="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;printable=1&amp;skin=epic&amp;*"></script>
<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Customizing_detail_panels","wgTitle":"Customizing detail panels","wgCurRevisionId":24131,"wgRevisionId":24131,"wgArticleId":2317,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Templates","Tutorials","Code","Community Created Content"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Customizing_detail_panels","wgIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgWikiEditorEnabledModules":{"toolbar":true,"dialogs":true,"hidesig":true,"templateEditor":false,"templates":false,"preview":true,"previewDialog":false,"publish":true,"toc":false}});
}</script><script>if(window.mw){
mw.loader.implement("user.options",function(){mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"epic","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"vector-simplesearch":1,"watchcreations":0,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,"watchlisthidebots":0,
"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"useeditwarning":1,"prefershttps":1,"usebetatoolbar":1,"usebetatoolbar-cgd":1,"wikieditor-preview":1,"wikieditor-publish":1,"language":"en","variant-gan":"gan","variant-iu":"iu","variant-kk":"kk","variant-ku":"ku","variant-shi":"shi","variant-sr":"sr","variant-tg":"tg","variant-uz":"uz","variant-zh":"zh","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false,"variant":"en"});},{},{});mw.loader.implement("user.tokens",function(){mw.user.tokens.set({"editToken":"+\\","patrolToken":false,"watchToken":false});},{},{});
/* cache key: my_wiki:resourceloader:filter:minify-js:7:2197af7670c41256853f340e275ede1b */
}</script>
<script src="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=skins.epic.extras.js%7Cskins.epic.fancybox.js%7Cskins.epic.js%7Cskins.epic.qtip.js%7Cskins.epic.slimscroll.js&amp;only=scripts&amp;printable=1&amp;skin=epic&amp;*"></script>
<script>if(window.mw){
mw.loader.load(["ext.voteNY","mediawiki.page.startup","mediawiki.legacy.wikibits","mediawiki.legacy.ajax","skins.vector.js"]);
}</script>
<style type="text/css">/*<![CDATA[*/
.source-cpp {line-height: normal;}
.source-cpp li, .source-cpp pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for cpp
 * CSS class: source-cpp, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.cpp.source-cpp .de1, .cpp.source-cpp .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.cpp.source-cpp  {font-family:monospace;}
.cpp.source-cpp .imp {font-weight: bold; color: red;}
.cpp.source-cpp li, .cpp.source-cpp .li1 {font-weight: normal; vertical-align:top;}
.cpp.source-cpp .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.cpp.source-cpp .li2 {font-weight: bold; vertical-align:top;}
.cpp.source-cpp .kw1 {color: #0000ff;}
.cpp.source-cpp .kw2 {color: #0000ff;}
.cpp.source-cpp .kw3 {color: #0000dd;}
.cpp.source-cpp .kw4 {color: #0000ff;}
.cpp.source-cpp .co1 {color: #666666;}
.cpp.source-cpp .co2 {color: #339900;}
.cpp.source-cpp .coMULTI {color: #ff0000; font-style: italic;}
.cpp.source-cpp .es0 {color: #000099; font-weight: bold;}
.cpp.source-cpp .es1 {color: #000099; font-weight: bold;}
.cpp.source-cpp .es2 {color: #660099; font-weight: bold;}
.cpp.source-cpp .es3 {color: #660099; font-weight: bold;}
.cpp.source-cpp .es4 {color: #660099; font-weight: bold;}
.cpp.source-cpp .es5 {color: #006699; font-weight: bold;}
.cpp.source-cpp .br0 {color: #008000;}
.cpp.source-cpp .sy0 {color: #008000;}
.cpp.source-cpp .sy1 {color: #000080;}
.cpp.source-cpp .sy2 {color: #000040;}
.cpp.source-cpp .sy3 {color: #000040;}
.cpp.source-cpp .sy4 {color: #008080;}
.cpp.source-cpp .st0 {color: #FF0000;}
.cpp.source-cpp .nu0 {color: #0000dd;}
.cpp.source-cpp .nu6 {color: #208080;}
.cpp.source-cpp .nu8 {color: #208080;}
.cpp.source-cpp .nu12 {color: #208080;}
.cpp.source-cpp .nu16 {color:#800080;}
.cpp.source-cpp .nu17 {color:#800080;}
.cpp.source-cpp .nu18 {color:#800080;}
.cpp.source-cpp .nu19 {color:#800080;}
.cpp.source-cpp .me1 {color: #007788;}
.cpp.source-cpp .me2 {color: #007788;}
.cpp.source-cpp .ln-xtra, .cpp.source-cpp li.ln-xtra, .cpp.source-cpp div.ln-xtra {background-color: #ffc;}
.cpp.source-cpp span.xtra { display:block; }

/*]]>*/
</style><!--[if lt IE 7]><style type="text/css">body{behavior:url("/skins/epic/csshover.min.htc")}</style><![endif]--><script type="text/javascript">
var experimentID = false;
var cxApi = null;
var variation = 0;
var fancyTitle = "";
var CE_SNAPSHOT_NAME = document.getElementsByTagName("title")[0].innerHTML;
$(document).ready(function(){
	if(experimentID != false)
	{
		$(head).append('<script src="//www.google-analytics.com/cx/api.js?experiment=' + experimentID + '" />' + '</scr' + 'ipt>');
		HandleExperiment();
	}
	else
	{
		CE_SNAPSHOT_NAME = (fancyTitle != "" ? fancyTitle : document.getElementsByTagName("title")[0].innerHTML);
		setTimeout(function () {
			var a = document.createElement("script");
			var b = document.getElementsByTagName("script")[0];
			a.src = document.location.protocol + "//script.crazyegg.com/pages/scripts/0028/4572.js?" + Math.floor(new Date().getTime() / 3600000);
			a.async = true; a.type = "text/javascript"; b.parentNode.insertBefore(a, b)
		}, 1);	
	}
});
function HandleExperiment()
{
	CE_SNAPSHOT_NAME = (fancyTitle != "" ? fancyTitle : document.getElementsByTagName("title")[0].innerHTML);
	if(cxApi != null)
	{
		variation = cxApi.chooseVariation();
		cxApi.setChosenVariation(variation, experimentID);
		if(variation != cxApi.ORIGINAL_VARIATION && variation != cxApi.NO_CHOSEN_VARIATION && variation != cxApi.NOT_PARTICIPATING)
		{
			//var URL = document.location.href + (document.location.search != '' ? '&var=' : '?var=') + variation;
			ga('send', 'event', 'A/B', 'ID: ' + experimentID, 'Variation: ' + variation, {'nonInteraction': 1});
			//document.location.href = URL; 
			CE_SNAPSHOT_NAME = document.getElementsByTagName("title")[0].innerHTML + ' (variation ' + variation + ')';
			var test = "";
		}
		else
		{
			ga('send', 'event', 'A/B', 'ID: ' + experimentID, 'Variation: ' + variation, {'nonInteraction': 1});
		}
		ToggleExperimentContent(variation);
		setTimeout(function () {
			var a = document.createElement("script");
			var b = document.getElementsByTagName("script")[0];
			a.src = document.location.protocol + "//script.crazyegg.com/pages/scripts/0028/4572.js?" + Math.floor(new Date().getTime() / 3600000);
			a.async = true; a.type = "text/javascript"; b.parentNode.insertBefore(a, b)
		}, 1);
	}
	else
	{
		setTimeout("HandleExperiment()", 500);
	}
}

function ToggleExperimentContent(variation)
{
	$('.AB').hide();
	$('#variation_' + variation).show();
}
</script></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Customizing_detail_panels skin-epic action-view vector-animateLayout">
		<!--<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>-->
		<!-- Google Tag Manager -->
		<noscript>
			<iframe src="//www.googletagmanager.com/ns.html?id=GTM-KWRD6D"
					height="0" width="0" style="display:none;visibility:hidden"></iframe>
		</noscript>
		<script>
		(function (w, d, s, l, i) {
		w[l] = w[l] || []; w[l].push({
		'gtm.start':
		new Date().getTime(), event: 'gtm.js'
		}); var f = d.getElementsByTagName(s)[0],
		j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : ''; j.async = true; j.src =
		'//www.googletagmanager.com/gtm.js?id=' + i + dl; f.parentNode.insertBefore(j, f);
		})(window, document, 'script', 'dataLayer', 'GTM-KWRD6D');</script>
		<!-- End Google Tag Manager -->
		<div id="webThree">
		<div id="head"></div>
		<div id="pagedefault">		
                    <div id="pagenav">
                        <div>
                            <!-- Start of Other language links -->
                            <!-- End of Other language links -->
                            <div class="homelink_container">
                                <a href="https://wiki.unrealengine.com" title="UE4 Wiki Home" class="homelink">HOME</a>
                            </div>
                        </div>
                        <div style="clear:both;">
                        </div>
                    </div>	
		<div id="mw-navigation" style="max-width:972px;margin:1em auto 0 auto;">
			<h2>Navigation menu</h2>
			<div id="mw-head">
				<div id="jumplink" onclick="$('#sidebar').toggle();">
					Navigation
				</div>
				<div id="sidebar">
					<!-- Start of jump page links -->
					<div class="largetitle">
						Quick Links
					</div>
					<div class="arrowlist">
						<!-- End of jump page links -->
						<!-- Start of related page links -->
						<!-- End of related page links -->								
						<div id="mw-panel">
							<div class="portal" role="navigation" id='p-navigation' aria-labelledby='p-navigation-label'>
	<h3 id='p-navigation-label'>Navigation</h3>
	<div class="body">
		<ul>
			<li id="n-mainpage-description"><a href="/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
			<li id="n-recentchanges"><a href="/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
			<li id="n-randompage"><a href="/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-Community' aria-labelledby='p-Community-label'>
	<h3 id='p-Community-label'>Community</h3>
	<div class="body">
		<ul>
			<li id="n-UE4-Games"><a href="/Category:Games">UE4 Games</a></li>
			<li id="n-Dev-Blogs"><a href="/Developer_Blogs">Dev Blogs</a></li>
			<li id="n-Dev-Livestreams"><a href="/Developer_Livestreams">Dev Livestreams</a></li>
			<li id="n-Code-Sharing-Hub"><a href="/GitHub_Sharing_Hub">Code Sharing Hub</a></li>
			<li id="n-UE-User-Groups"><a href="/User_Group_Map">UE User Groups</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-Learning_Resources' aria-labelledby='p-Learning_Resources-label'>
	<h3 id='p-Learning_Resources-label'>Learning Resources</h3>
	<div class="body">
		<ul>
			<li id="n-Tutorials"><a href="/Category:Tutorials">Tutorials</a></li>
			<li id="n-Example-Projects"><a href="/Category:Example_Projects">Example Projects</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-Software_and_Tools' aria-labelledby='p-Software_and_Tools-label'>
	<h3 id='p-Software_and_Tools-label'>Software and Tools</h3>
	<div class="body">
		<ul>
			<li id="n-Plug-ins"><a href="/Category:Plug-ins">Plug-ins</a></li>
			<li id="n-Art:-3D"><a href="/3D_Art_Resources">Art: 3D</a></li>
			<li id="n-Art:-2D"><a href="/2D_Art_Resources">Art: 2D</a></li>
			<li id="n-Audio"><a href="/Audio_Resources">Audio</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-Modding' aria-labelledby='p-Modding-label'>
	<h3 id='p-Modding-label'>Modding</h3>
	<div class="body">
		<ul>
			<li id="n-Modding-Resources"><a href="/Category:Modding_Resources">Modding Resources</a></li>
			<li id="n-Moddable-Games"><a href="/Category:Moddable_Games">Moddable Games</a></li>
			<li id="n-Unreal-Tournament"><a href="/Category:Unreal_Tournament">Unreal Tournament</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-Epic_Official' aria-labelledby='p-Epic_Official-label'>
	<h3 id='p-Epic_Official-label'>Epic Official</h3>
	<div class="body">
		<ul>
			<li id="n-Website"><a href="https://www.unrealengine.com" rel="nofollow">Website</a></li>
			<li id="n-Learning-Resources"><a href="https://docs.unrealengine.com/latest/INT/" rel="nofollow">Learning Resources</a></li>
			<li id="n-Forums"><a href="https://forums.unrealengine.com/" rel="nofollow">Forums</a></li>
			<li id="n-Blog"><a href="https://www.unrealengine.com/blog" rel="nofollow">Blog</a></li>
			<li id="n-YouTube"><a href="https://www.youtube.com/UnrealEngine" rel="nofollow">YouTube</a></li>
			<li id="n-Twitch"><a href="http://www.twitch.tv/unrealengine" rel="nofollow">Twitch</a></li>
			<li id="n-Twitter"><a href="https://twitter.com/UnrealEngine" rel="nofollow">Twitter</a></li>
			<li id="n-Facebook"><a href="https://www.facebook.com/UnrealEngine" rel="nofollow">Facebook</a></li>
			<li id="n-Instagram"><a href="https://instagram.com/unrealengine/" rel="nofollow">Instagram</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-tb' aria-labelledby='p-tb-label'>
	<h3 id='p-tb-label'>Tools</h3>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="/Special:WhatLinksHere/Customizing_detail_panels" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="/Special:RecentChangesLinked/Customizing_detail_panels" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-specialpages"><a href="/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li id="t-permalink"><a href="/index.php?title=Customizing_detail_panels&amp;oldid=24131" title="Permanent link to this revision of the page">Permanent link</a></li>
			<li id="t-info"><a href="/index.php?title=Customizing_detail_panels&amp;action=info">Page information</a></li>
		</ul>
	</div>
</div>
						</div>
					</div>
				</div>				
				<div id="left-navigation">
					<div id="p-namespaces" role="navigation" class="vectorTabs" aria-labelledby="p-namespaces-label">
	<h3 id="p-namespaces-label">Namespaces</h3>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="/Customizing_detail_panels"  title="View the content page [c]" accesskey="c">Page</a></span></li>
					<li  id="ca-talk" class="new"><span><a href="/index.php?title=Talk:Customizing_detail_panels&amp;action=edit&amp;redlink=1"  title="Discussion about the content page [t]" accesskey="t">Discussion</a></span></li>
			</ul>
</div>
<div id="p-variants" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-variants-label">
	<h3 id="mw-vector-current-variant">
		</h3>
	<h3 id="p-variants-label"><span>Variants</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
				</div>
				<div id="right-navigation">
					<div id="p-views" role="navigation" class="vectorTabs" aria-labelledby="p-views-label">
	<h3 id="p-views-label">Views</h3>
	<ul>
					<li id="ca-view" class="selected"><span><a href="/Customizing_detail_panels" >View</a></span></li>
					<li id="ca-viewsource"><span><a href="/index.php?title=Customizing_detail_panels&amp;action=edit"  title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="/index.php?title=Customizing_detail_panels&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">History</a></span></li>
			</ul>
</div>
<div id="p-cactions" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-cactions-label">
	<h3 id="p-cactions-label"><span>Actions</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
<div id="p-personal" role="navigation" class="" aria-labelledby="p-personal-label">
	<h3 id="p-personal-label">Personal tools</h3>
	<ul>
<li id="pt-createaccount"><a href="/index.php?title=Special:UserLogin&amp;returnto=Customizing+detail+panels&amp;returntoquery=printable%3Dyes&amp;type=signup">Create account</a></li><li id="pt-login"><a href="/index.php?title=Special:UserLogin&amp;returnto=Customizing+detail+panels&amp;returntoquery=printable%3Dyes" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>	</ul>
</div>
				</div>
			</div>
		</div>
		<div id="maincol">
		<div class="mw-body" role="main">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<!-- Start of crumbs links -->
			<div class="crumbs">
			<p>
							</p>
			</div>
			<!-- End of crumbs links -->
			<h1 id="firstHeading" class="firstHeading" lang="en"><span dir="auto">Customizing detail panels</span></h1>
			<div id="bodyContent">
				<div id="contentSub"></div>
																<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><div class="aux">
<div>
<b>Rate this Article:</b> <div id="rating_"><div class="rating-score"><div class="voteboxrate">4.00</div></div><div class="rating-section"><img class="vote-rating-star" data-vote-the-vote="1" data-vote-id="" data-vote-action="3" data-vote-rating="4.00" data-vote-voted="0" id="rating__1" src="/extensions/VoteNY/images/star_on.gif" alt="" /><img class="vote-rating-star" data-vote-the-vote="2" data-vote-id="" data-vote-action="3" data-vote-rating="4.00" data-vote-voted="0" id="rating__2" src="/extensions/VoteNY/images/star_on.gif" alt="" /><img class="vote-rating-star" data-vote-the-vote="3" data-vote-id="" data-vote-action="3" data-vote-rating="4.00" data-vote-voted="0" id="rating__3" src="/extensions/VoteNY/images/star_on.gif" alt="" /><img class="vote-rating-star" data-vote-the-vote="4" data-vote-id="" data-vote-action="3" data-vote-rating="4.00" data-vote-voted="0" id="rating__4" src="/extensions/VoteNY/images/star_on.gif" alt="" /><img class="vote-rating-star" data-vote-the-vote="5" data-vote-id="" data-vote-action="3" data-vote-rating="4.00" data-vote-voted="0" id="rating__5" src="/extensions/VoteNY/images/star_off.gif" alt="" /> <span class="rating-total">(one vote)</span></div>
				<div class="rating-clear">
			</div></div>
</div>
<div>
<p>Approved for Versions:(please verify)
</p>
</div>
</div>
<div id="toc" class="toc"><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Overview"><span class="tocnumber">1</span> <span class="toctext">Overview</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Types_of_specializations"><span class="tocnumber">2</span> <span class="toctext">Types of specializations</span></a>
<ul>
<li class="toclevel-2 tocsection-3"><a href="#Default_detail_layout"><span class="tocnumber">2.1</span> <span class="toctext">Default detail layout</span></a></li>
<li class="toclevel-2 tocsection-4"><a href="#Property_type_customizations"><span class="tocnumber">2.2</span> <span class="toctext">Property type customizations</span></a></li>
<li class="toclevel-2 tocsection-5"><a href="#Object_customizations_.28Details_overrides.29"><span class="tocnumber">2.3</span> <span class="toctext">Object customizations (Details overrides)</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-6"><a href="#Registering_your_specializations"><span class="tocnumber">3</span> <span class="toctext">Registering your specializations</span></a></li>
<li class="toclevel-1 tocsection-7"><a href="#Official_resources_on_the_subject"><span class="tocnumber">4</span> <span class="toctext">Official resources on the subject</span></a></li>
<li class="toclevel-1 tocsection-8"><a href="#Points_to_improve"><span class="tocnumber">5</span> <span class="toctext">Points to improve</span></a></li>
<li class="toclevel-1 tocsection-9"><a href="#Summary"><span class="tocnumber">6</span> <span class="toctext">Summary</span></a></li>
</ul>
</div>

<h2><span class="mw-headline" id="Overview">Overview</span></h2>
<p>Dear Community,
</p><p>This tutorial will discuss customizing both display categories as well as property entries for UE4 types in all editor detail panes.
For more informations on detail panes and what they are, please refer to this link:
<a rel="nofollow" class="external free" href="https://docs.unrealengine.com/latest/INT/Engine/UI/LevelEditor/Details/index.html">https://docs.unrealengine.com/latest/INT/Engine/UI/LevelEditor/Details/index.html</a>
</p><p>If you have questions for me, please ask them in the Discussion Tab.
I and hopefully others can then answer those questions in this main page.
</p>
<h2><span class="mw-headline" id="Types_of_specializations">Types of specializations</span></h2>
<h3><span class="mw-headline" id="Default_detail_layout">Default detail layout</span></h3>
<p>As long as your UPROPERTY types are value types, the editor system will create a default layout for you.
If you're happy with this layout, this tutorial is not for you&#160;:)
</p>
<h3><span class="mw-headline" id="Property_type_customizations">Property type customizations</span></h3>
<p>This type of specialization is useful when you have created a custom struct that you want to change the layout for. This only works for USTRUCT's as far as I know, as the Interface used; IPropertyTypeCustomization's implemented functions all work exclusively with structs.
</p><p>You can basically do anything on the layout callback, the only limitations are the limitations imposed by slate, as all of the layout code is done in this ingenious extension to UE4.
But the most common usage of these specializations are either to create a better layout than the default display, or to create more intuitive widgets for setting your data. An example of this could be to let the user select a color with a color wheel, instead of directly setting the R, G and B parameters of a color struct.
</p><p>The first step is to create your customization subclass. The important part here is to derive from IPropertyTypeCustomization. Here is an example header file:
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="co2">#include &quot;Editor/DetailCustomizations/Private/DetailCustomizationsPrivatePCH.h&quot;</span>
&#160;
<span class="co2">#pragma once</span>
&#160;
<span class="kw2">class</span> FMyStructCustomization <span class="sy4">:</span> <span class="kw2">public</span> IPropertyTypeCustomization
<span class="br0">&#123;</span>
<span class="kw2">public</span><span class="sy4">:</span>
	<span class="kw4">static</span> TSharedRef<span class="sy1">&lt;</span>IPropertyTypeCustomization<span class="sy1">&gt;</span> MakeInstance<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
	<span class="coMULTI">/** IPropertyTypeCustomization interface */</span>
	<span class="kw2">virtual</span> <span class="kw4">void</span> CustomizeHeader<span class="br0">&#40;</span>TSharedRef<span class="sy1">&lt;</span><span class="kw2">class</span> IPropertyHandle<span class="sy1">&gt;</span> StructPropertyHandle, <span class="kw2">class</span> FDetailWidgetRow<span class="sy3">&amp;</span> HeaderRow, IPropertyTypeCustomizationUtils<span class="sy3">&amp;</span> StructCustomizationUtils<span class="br0">&#41;</span> override<span class="sy4">;</span>
	<span class="kw2">virtual</span> <span class="kw4">void</span> CustomizeChildren<span class="br0">&#40;</span>TSharedRef<span class="sy1">&lt;</span><span class="kw2">class</span> IPropertyHandle<span class="sy1">&gt;</span> StructPropertyHandle, <span class="kw2">class</span> IDetailChildrenBuilder<span class="sy3">&amp;</span> StructBuilder, IPropertyTypeCustomizationUtils<span class="sy3">&amp;</span> StructCustomizationUtils<span class="br0">&#41;</span> override<span class="sy4">;</span>
&#160;
<span class="kw2">private</span><span class="sy4">:</span>
	TSharedPtr<span class="sy1">&lt;</span>IPropertyHandle<span class="sy1">&gt;</span> SomeUPropertyHandle<span class="sy4">;</span>
<span class="br0">&#125;</span><span class="sy4">;</span></pre></div></div>
<p>Most of this is simply boilerplate. To create your own file, make sure the classname matches the type you want to customize with the addition of "Customization" at the end. Also, creating handles for any property you want to modify can be made, so for those types you create TSharedPtr&lt;IPropertyHandle&gt; typed fields.
</p><p>And here is an example implementation file.
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="co2">#include &quot;MyProjectPCH.h&quot;</span>
&#160;
<span class="co2">#include &quot;DetailCustomizations/MyStructCustomization.h&quot;</span>
&#160;
<span class="co2">#define LOCTEXT_NAMESPACE &quot;MyStructCustomization&quot;</span>
&#160;
TSharedRef<span class="sy1">&lt;</span>IPropertyTypeCustomization<span class="sy1">&gt;</span> FMyStructCustomization<span class="sy4">::</span><span class="me2">MakeInstance</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>
	<span class="kw1">return</span> MakeShareable<span class="br0">&#40;</span><span class="kw3">new</span> FMyStructCustomization<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span>
<span class="br0">&#125;</span>
&#160;
<span class="kw4">void</span> FMyStructCustomization<span class="sy4">::</span><span class="me2">CustomizeHeader</span><span class="br0">&#40;</span>TSharedRef<span class="sy1">&lt;</span><span class="kw2">class</span> IPropertyHandle<span class="sy1">&gt;</span> StructPropertyHandle, <span class="kw2">class</span> FDetailWidgetRow<span class="sy3">&amp;</span> HeaderRow, IPropertyTypeCustomizationUtils<span class="sy3">&amp;</span> StructCustomizationUtils<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
	<span class="kw4">uint32</span> NumChildren<span class="sy4">;</span>
	StructPropertyHandle<span class="sy2">-</span><span class="sy1">&gt;</span>GetNumChildren<span class="br0">&#40;</span>NumChildren<span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
	<span class="kw1">for</span> <span class="br0">&#40;</span><span class="kw4">uint32</span> ChildIndex <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span> ChildIndex <span class="sy1">&lt;</span> NumChildren<span class="sy4">;</span> <span class="sy2">++</span>ChildIndex<span class="br0">&#41;</span>
	<span class="br0">&#123;</span>
		<span class="kw4">const</span> TSharedRef<span class="sy1">&lt;</span> IPropertyHandle <span class="sy1">&gt;</span> ChildHandle <span class="sy1">=</span> StructPropertyHandle<span class="sy2">-</span><span class="sy1">&gt;</span>GetChildHandle<span class="br0">&#40;</span>ChildIndex<span class="br0">&#41;</span>.<span class="me1">ToSharedRef</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
		<span class="kw1">if</span> <span class="br0">&#40;</span>ChildHandle<span class="sy2">-</span><span class="sy1">&gt;</span>GetProperty<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy2">-</span><span class="sy1">&gt;</span>GetName<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy1">==</span> TEXT<span class="br0">&#40;</span><span class="st0">&quot;SomeUProperty&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
		<span class="br0">&#123;</span>
			SomeUPropertyHandle <span class="sy1">=</span> ChildHandle<span class="sy4">;</span>
		<span class="br0">&#125;</span>
	<span class="br0">&#125;</span>
&#160;
	check<span class="br0">&#40;</span>SomeUPropertyHandle.<span class="me1">IsValid</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
&#160;
	HeaderRow.<span class="me1">NameContent</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
		<span class="br0">&#91;</span>
			StructPropertyHandle<span class="sy2">-</span><span class="sy1">&gt;</span>CreatePropertyNameWidget<span class="br0">&#40;</span>TEXT<span class="br0">&#40;</span><span class="st0">&quot;New property header name&quot;</span><span class="br0">&#41;</span>, <span class="kw2">false</span><span class="br0">&#41;</span>
		<span class="br0">&#93;</span>
	.<span class="me1">ValueContent</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
		.<span class="me1">MinDesiredWidth</span><span class="br0">&#40;</span><span class="nu0">500</span><span class="br0">&#41;</span>
		<span class="br0">&#91;</span>
			SNew<span class="br0">&#40;</span>STextBlock<span class="br0">&#41;</span>
			.<span class="me1">Text</span><span class="br0">&#40;</span>LOCTEXT<span class="br0">&#40;</span><span class="st0">&quot;Extra info&quot;</span>, <span class="st0">&quot;Some new representation&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
			.<span class="me1">Font</span><span class="br0">&#40;</span>IDetailLayoutBuilder<span class="sy4">::</span><span class="me2">GetDetailFont</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
		<span class="br0">&#93;</span><span class="sy4">;</span>
<span class="br0">&#125;</span>
&#160;
<span class="kw4">void</span> FMyStructCustomization<span class="sy4">::</span><span class="me2">CustomizeChildren</span><span class="br0">&#40;</span>TSharedRef<span class="sy1">&lt;</span><span class="kw2">class</span> IPropertyHandle<span class="sy1">&gt;</span> StructPropertyHandle, <span class="kw2">class</span> IDetailChildrenBuilder<span class="sy3">&amp;</span> StructBuilder, IPropertyTypeCustomizationUtils<span class="sy3">&amp;</span> StructCustomizationUtils<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
    <span class="co1">//Create further customization here</span>
<span class="br0">&#125;</span>
&#160;
<span class="co2">#undef LOCTEXT_NAMESPACE</span></pre></div></div>
<p>In this example, both of these files are under a project folder called "DetailCustomizations".
The first part of CustomizeHeader extracts the the UPROPERTY called "SomeUProperty" from the MyStruct struct into the field we declared in our header file (SomeUPropertyHandle). The second part is just normal Slate code to override the display row in the details pane. For more information on how to code Slate, please have a look at one of the Slate tutorials on another part of the wiki.
</p><p>Another thing worth mentioning is how to use the cached property in the code. TODO!&#160;:D
</p><p>Finally, don't forget to register your customization(see below).
</p>
<h3><span class="mw-headline" id="Object_customizations_.28Details_overrides.29">Object customizations (Details overrides)</span></h3>
<p>If you would not only like to override struct display, but want full control over the rendering of all parts of the pane (customizing the category box, creating new categories, do whatever you like in the categories etc.) the more powerful object customization system is the way to go.
</p><p>For this type of specialization, there is no restriction on the type you want to specialize, except that it should not be a POCO (plain old c++ object) type since it still has to have UPROPERTY's etc for you to access and bind to. I am not sure if it is possible to actually create customizations for POCO's, but in any case I would not recommend it.
</p><p>The first step is to create your detail subclass. The important part here is to derive from IDetailCustomization. Here is an example header file:
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="co2">#include &quot;Editor/DetailCustomizations/Private/DetailCustomizationsPrivatePCH.h&quot;</span>
&#160;
<span class="co2">#pragma once</span>
&#160;
<span class="kw2">class</span> FMyClassDetails <span class="sy4">:</span> <span class="kw2">public</span> IDetailCustomization
<span class="br0">&#123;</span>
<span class="kw2">public</span><span class="sy4">:</span>
	<span class="coMULTI">/** Makes a new instance of this detail layout class for a specific detail view requesting it */</span>
	<span class="kw4">static</span> TSharedRef<span class="sy1">&lt;</span>IDetailCustomization<span class="sy1">&gt;</span> MakeInstance<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
	<span class="coMULTI">/** IDetailCustomization interface */</span>
	<span class="kw2">virtual</span> <span class="kw4">void</span> CustomizeDetails<span class="br0">&#40;</span> IDetailLayoutBuilder<span class="sy3">&amp;</span> DetailBuilder <span class="br0">&#41;</span> override<span class="sy4">;</span>
<span class="br0">&#125;</span><span class="sy4">;</span></pre></div></div>
<p><br />
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="co2">#include &quot;MyProjectPCH.h&quot;</span>
&#160;
<span class="co2">#include &quot;DetailCustomizations/MyClassDetails.h&quot;</span>
&#160;
<span class="co2">#define LOCTEXT_NAMESPACE &quot;MyClassDetails&quot;</span>
&#160;
TSharedRef<span class="sy1">&lt;</span>IDetailCustomization<span class="sy1">&gt;</span> FMyClassDetails<span class="sy4">::</span><span class="me2">MakeInstance</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>
	<span class="kw1">return</span> MakeShareable<span class="br0">&#40;</span><span class="kw3">new</span> FMyClassDetails<span class="br0">&#41;</span><span class="sy4">;</span>
<span class="br0">&#125;</span>
&#160;
<span class="kw4">void</span> FMyClassDetails<span class="sy4">::</span><span class="me2">CustomizeDetails</span><span class="br0">&#40;</span>IDetailLayoutBuilder<span class="sy3">&amp;</span> DetailBuilder<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
	<span class="co1">// Create a category so this is displayed early in the properties</span>
	IDetailCategoryBuilder<span class="sy3">&amp;</span> MyCategory <span class="sy1">=</span> DetailBuilder.<span class="me1">EditCategory</span><span class="br0">&#40;</span><span class="st0">&quot;CategoryName&quot;</span>, TEXT<span class="br0">&#40;</span><span class="st0">&quot;Extra info&quot;</span><span class="br0">&#41;</span>, ECategoryPriority<span class="sy4">::</span><span class="me2">Important</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
        <span class="co1">//You can get properties using the detailbuilder</span>
	<span class="co1">//MyProperty= DetailBuilder.GetProperty(GET_MEMBER_NAME_CHECKED(MyClass, MyClassPropertyName));</span>
&#160;
	MyCategory.<span class="me1">AddCustomRow</span><span class="br0">&#40;</span>LOCTEXT<span class="br0">&#40;</span><span class="st0">&quot;Extra info&quot;</span>, <span class="st0">&quot;Row header name&quot;</span><span class="br0">&#41;</span>.<span class="me1">ToString</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
		.<span class="me1">NameContent</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
		<span class="br0">&#91;</span>
			SNew<span class="br0">&#40;</span>STextBlock<span class="br0">&#41;</span>
			.<span class="me1">Text</span><span class="br0">&#40;</span>LOCTEXT<span class="br0">&#40;</span><span class="st0">&quot;Extra info&quot;</span>, <span class="st0">&quot;Custom row header name&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
			.<span class="me1">Font</span><span class="br0">&#40;</span>IDetailLayoutBuilder<span class="sy4">::</span><span class="me2">GetDetailFont</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
		<span class="br0">&#93;</span>
		.<span class="me1">ValueContent</span><span class="br0">&#40;</span><span class="br0">&#41;</span>.<span class="me1">MinDesiredWidth</span><span class="br0">&#40;</span><span class="nu0">500</span><span class="br0">&#41;</span>
		<span class="br0">&#91;</span>
			SNew<span class="br0">&#40;</span>STextBlock<span class="br0">&#41;</span>
			.<span class="me1">Text</span><span class="br0">&#40;</span>LOCTEXT<span class="br0">&#40;</span><span class="st0">&quot;Extra info&quot;</span>, <span class="st0">&quot;Custom row content&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
			.<span class="me1">Font</span><span class="br0">&#40;</span>IDetailLayoutBuilder<span class="sy4">::</span><span class="me2">GetDetailFont</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
		<span class="br0">&#93;</span><span class="sy4">;</span>
<span class="br0">&#125;</span>
&#160;
<span class="co2">#undef LOCTEXT_NAMESPACE</span></pre></div></div>
<p>In this example, both of these files are under a project folder called "DetailCustomizations".
The first part of the CustomizeDetails function here creates a new category called "CategoryName".
We then proceed to create a new row in that category called "Custom row header name" with the content "Custom row content". The second part that creates the row is just normal Slate code to override the display row in the details pane. For more information on how to code Slate, please have a look at one of the Slate tutorials on another part of the wiki.
</p>
<h2><span class="mw-headline" id="Registering_your_specializations">Registering your specializations</span></h2>
<p>Just creating a specialization is not enough. For the editor to know that your specialization exists, you have to register it with the correct module. This can be done in any part of your solution, but to avoid unexpected behavior, I would recommend choosing some piece of code that is only run once, on construction.
</p><p>An ideal spot is your main game module, or your game mode class (I usually use the game mode class since it has a constructor already in place).
</p><p>Note that for both property and object specializations, you will need to include "PropertyEditor" as a private dependency module in your Build.cs file.
</p><p>Depending on the specialization type, you need to use different registration methods. For property type customizations "RegisterCustomPropertyTypeLayout" is used, like so:
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1">	FPropertyEditorModule<span class="sy3">&amp;</span> PropertyModule <span class="sy1">=</span> FModuleManager<span class="sy4">::</span><span class="me2">LoadModuleChecked</span><span class="sy1">&lt;</span>FPropertyEditorModule<span class="sy1">&gt;</span><span class="br0">&#40;</span><span class="st0">&quot;PropertyEditor&quot;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
	<span class="co1">//Custom properties</span>
	PropertyModule.<span class="me1">RegisterCustomPropertyTypeLayout</span><span class="br0">&#40;</span><span class="st0">&quot;MyStruct&quot;</span>, FOnGetPropertyTypeCustomizationInstance<span class="sy4">::</span><span class="me2">CreateStatic</span><span class="br0">&#40;</span><span class="sy3">&amp;</span>FMyStructCustomization<span class="sy4">::</span><span class="me2">MakeInstance</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span></pre></div></div>
<p>For object customizations "RegisterCustomClassLayout" is used instead, like so:
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1">	FPropertyEditorModule<span class="sy3">&amp;</span> PropertyModule <span class="sy1">=</span> FModuleManager<span class="sy4">::</span><span class="me2">LoadModuleChecked</span><span class="sy1">&lt;</span>FPropertyEditorModule<span class="sy1">&gt;</span><span class="br0">&#40;</span><span class="st0">&quot;PropertyEditor&quot;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
	<span class="co1">//Custom detail views</span>
	PropertyModule.<span class="me1">RegisterCustomClassLayout</span><span class="br0">&#40;</span><span class="st0">&quot;MyClass&quot;</span>, FOnGetDetailCustomizationInstance<span class="sy4">::</span><span class="me2">CreateStatic</span><span class="br0">&#40;</span><span class="sy3">&amp;</span>FMyClassDetails<span class="sy4">::</span><span class="me2">MakeInstance</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span></pre></div></div>
<p>The important point to remember here is that the string should refer to the object you want to specialize, without the class type identifying letter at the start (MyClass instead of UMyClass for example) and the function you want to send to the CreateStatic call is complete class name for the specialization you want to create.
</p>
<h2><span class="mw-headline" id="Official_resources_on_the_subject">Official resources on the subject</span></h2>
<p>As far as I know, there is no current official documentation for this by Epic. For more information, I recommend referring to the source code. The best places to look are:
Source/Editor/DetailCustomizations/Private/DetailCustomizations.cpp for a good starting point.
</p><p>For customizing a category, I recommend:
Source/Editor/DetailCustomizations/Private/StaticMeshComponentDetails.h
Source/Editor/DetailCustomizations/Private/StaticMeshComponentDetails.cpp
</p><p>For customizing details, I found this class to be the best simple reference:
Source/Editor/DetailCustomizations/Private/SlateColorCustomization.h
Source/Editor/DetailCustomizations/Private/SlateColorCustomization.cpp
</p>
<h2><span class="mw-headline" id="Points_to_improve">Points to improve</span></h2>
<p>This tutorial is by no means complete yet. As I discover new things I will keep improving it, and if you know something I don't, feel free to help out by editing this article!
</p><p>Here are some things that still needs to be done:
</p>
<ul>
<li> More tutorial content on how to use bound properties taken from the context objects
</li>
<li> Find other wiki links for Slate and other useful articles to link to
</li>
<li> Provide more in depth help to create certain types of specializations, such as:
</li>
</ul>
<pre>* Customizing the category box
* Creating nested categories
* Creating a custom editing widget
</pre>
<h2><span class="mw-headline" id="Summary">Summary</span></h2>
<p>There are two different types of specializations you can do.
The first type is called "Customizations" and pertains to customizing the display of any struct UPROPERTY in any editor details pane.
The second type is called "Details" and pertains to completely creating and customizing detail pane categories and subinformation.
</p><p>There are two steps to performing specializations:
</p>
<ul>
<li> Create the appropriate subclass for the type of specialization you want to do, for the class you want to display.
</li>
<li> Register the specialization somewhere in your project.
</li>
</ul>
<p>Feel free to post new questions in the Discussion tab!
</p><p>Hopefully this tutorial will save someone else some time when trying to figure this out&#160;:)
</p><p><a href="/index.php?title=User:Temaran&amp;action=edit&amp;redlink=1" class="new" title="User:Temaran (page does not exist)">Temaran</a> (<a href="/index.php?title=User_talk:Temaran&amp;action=edit&amp;redlink=1" class="new" title="User talk:Temaran (page does not exist)">talk</a>)
</p>
<!-- 
NewPP limit report
CPU time usage: 0.057 seconds
Real time usage: 0.064 seconds
Preprocessor visited node count: 101/1000000
Preprocessor generated node count: 210/1000000
Post‐expand include size: 178/2097152 bytes
Template argument size: 22/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
-->
</div>												<div class="printfooter">
				Retrieved from "<a href="https://wiki.unrealengine.com/index.php?title=Customizing_detail_panels&amp;oldid=24131">https://wiki.unrealengine.com/index.php?title=Customizing_detail_panels&amp;oldid=24131</a>"				</div>
												<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="/Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="/Category:Tutorials" title="Category:Tutorials">Tutorials</a></li><li><a href="/Category:Code" title="Category:Code">Code</a></li><li><a href="/Category:Community_Created_Content" title="Category:Community Created Content">Community Created Content</a></li></ul></div><div id="mw-hidden-catlinks" class="mw-hidden-catlinks mw-hidden-cats-hidden">Hidden category: <ul><li><a href="/Category:Templates" title="Category:Templates">Templates</a></li></ul></div></div>												<div class="visualClear"></div>
							</div>
		</div>
		</div>
		</div>
		
		<div id="footer">
			<div id="brand">

			</div>
			<div id="legal">
				<div id="copyright">
					&copy; 2004-2015, Epic Games, Inc. All rights reserved. Unreal and its logo are Epic's trademarks or registered trademarks in the US and elsewhere.
				</div>
				<div id="terms">
					<a target="_blank" href="http://epicgames.com/tou">TERMS OF USE</a> | <a target="_blank" href="http://epicgames.com/privacynotice">PRIVACY POLICY</a>
				</div>
			</div>
		</div>
	</div>
		<!--<div id="footer" role="contentinfo">
										<ul id="footer-icons" class="noprint">
					<li id="footer-copyrightico">
						<div name="copyright">&#169; 2004-2014, Epic Games, Inc. All rights reserved. Epic Games, Unreal, Unreal Engine, Unreal Tournament, and their respective logos are Epic's trademarks or registered trademarks in the US and elsewhere.</div>
					</li>
					<li id="footer-termsofuseico">
						<div name="termsofuse"><a href="http://epicgames.com/tou" target="_blank">Terms of Use</a></div>
					</li>
					<li id="footer-privacynoticeico">
						<div name="privacynotice"><a href="http://epicgames.com/privacynotice" target="_blank">Privacy Policy</a></div>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>-->
		<script>/*<![CDATA[*/window.jQuery && jQuery.ready();/*]]>*/</script><script>if(window.mw){
mw.loader.state({"site":"loading","user":"ready","user.groups":"ready"});
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.action.view.postEdit","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.searchSuggest","skins.vector.collapsibleNav"],null,true);
}</script>
<script src="/extensions/EpicSearchSystem/Javascript/Search.js?303"></script>
<script src="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;printable=1&amp;skin=epic&amp;*"></script>
<!-- Served in 0.131 secs. -->		<img src="https://tracking.unrealengine.com/track.png" width="1" height="1">
		<!--<script type="text/javascript">
			setTimeout(function () {
				var a = document.createElement("script");
				var b = document.getElementsByTagName("script")[0];
				a.src = document.location.protocol + "//script.crazyegg.com/pages/scripts/0028/4572.js?" + Math.floor(new Date().getTime() / 3600000);
				a.async = true; a.type = "text/javascript"; b.parentNode.insertBefore(a, b)
			}, 1);
		</script>-->
	</body>
</html>

		