(window.webpackJsonp=window.webpackJsonp||[]).push([[545],{415:function(e,t,n){"use strict";n.r(t);var a=n(28),o=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[e._v("GitHub Sharing Hub - Epic Wiki")]),e._v(" "),n("h1",{attrs:{id:"github-sharing-hub"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#github-sharing-hub"}},[e._v("#")]),e._v(" GitHub Sharing Hub")]),e._v(" "),n("p",[e._v("From Epic Wiki")]),e._v(" "),n("p",[e._v("Jump to: "),n("a",{attrs:{href:"#mw-head"}},[e._v("navigation")]),e._v(", "),n("a",{attrs:{href:"#p-search"}},[e._v("search")])]),e._v(" "),n("h2",{attrs:{id:"index"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#index"}},[e._v("#")]),e._v(" Index")]),e._v(" "),n("p",[e._v("GitHub is a fantastic resource for sharing changes and adding new features to UE4. Though the developers cannot always implement the changes they are given from the community, you can still make the changes to the engine if you so choose. Here you can browse a list of pulls or add your own.")]),e._v(" "),n("p",[e._v("GitHub submission pages must include the version of UE4 it is compatible with, author's name, size, date, a link and a description. Remember, only link to github commits and pull requests that are under a fork of UnrealEngine. That will make sure that there are no conflicts with the EULA in regards to code-sharing.")]),e._v(" "),n("p",[n("strong",[e._v("Note: If clicking on a link throws a 404 error, check to make sure you have your GitHub account associated with your Epic account as outlined "),n("a",{attrs:{href:"https://www.unrealengine.com/ue4-on-github",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),n("OutboundLink")],1),e._v(" and are logged into GitHub. You must complete these steps in order to view forks of the Unreal Engine source.")])]),e._v(" "),n("p",[e._v("Title")]),e._v(" "),n("p",[e._v("Link")]),e._v(" "),n("p",[e._v("Version")]),e._v(" "),n("p",[e._v("Author")]),e._v(" "),n("p",[e._v("Size")]),e._v(" "),n("p",[e._v("Release")]),e._v(" "),n("p",[e._v("Description")]),e._v(" "),n("p",[e._v("Example")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("4.0")]),e._v(" "),n("p",[e._v("J. Doe")]),e._v(" "),n("p",[e._v("100MB")]),e._v(" "),n("p",[e._v("01/01/2015")]),e._v(" "),n("p",[e._v("This is an example")]),e._v(" "),n("p",[e._v("GitDepsPacker")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/bozaro/UE4GitDepsPacker",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/bozaro/UE4GitDepsPacker"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("4.7+")]),e._v(" "),n("p",[e._v("Artem V. Navrotskiy")]),e._v(" "),n("p",[e._v("1MB")]),e._v(" "),n("p",[e._v("10/01/2015")]),e._v(" "),n("p",[e._v("Unofficial utility to create *.gitdeps.xml files for Unreal Engine 4.7+.")]),e._v(" "),n("p",[e._v("octobuild")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/bozaro/octobuild",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/bozaro/octobuild"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("4.8+")]),e._v(" "),n("p",[e._v("Artem V. Navrotskiy")]),e._v(" "),n("p",[e._v("1MB")]),e._v(" "),n("p",[e._v("23/11/2015")]),e._v(" "),n("p",[e._v("Compilation cache (like ccache)")]),e._v(" "),n("p",[e._v("Game Build")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/EpicGames/UnrealEngine/pull/1975",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/EpicGames/UnrealEngine/pull/1975"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("4.10+")]),e._v(" "),n("p",[e._v("Satheesh PV (ryanjon2040)")]),e._v(" "),n("p",[e._v("1MB")]),e._v(" "),n("p",[e._v("24/01/2016")]),e._v(" "),n("p",[e._v("BlueprintPure method that returns the type of build. This is useful for running any functions just for testing and to skip in any other build.")]),e._v(" "),n("p",[e._v("Toon Shading")]),e._v(" "),n("ul",[n("li",[e._v("4.10 "),n("a",{attrs:{href:"https://github.com/moritz-wundke/UnrealEngine/tree/ToonShading.4.10",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/moritz-wundke/UnrealEngine/tree/ToonShading.4.10"),n("OutboundLink")],1)]),e._v(" "),n("li",[e._v("4.13 "),n("a",{attrs:{href:"https://github.com/marynate/UnrealEngine/tree/4.13-toon",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/marynate/UnrealEngine/tree/4.13-toon"),n("OutboundLink")],1)]),e._v(" "),n("li",[e._v("Original PR "),n("a",{attrs:{href:"https://github.com/EpicGames/UnrealEngine/pull/1552",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/EpicGames/UnrealEngine/pull/1552"),n("OutboundLink")],1)])]),e._v(" "),n("p",[e._v("4.10+")]),e._v(" "),n("ul",[n("li",[e._v("4.10 by "),n("a",{attrs:{href:"/index.php?title=User:Moss&action=edit&redlink=1",title:"User:Moss (page does not exist)"}},[e._v("Moritz Wundke (Moss)")])]),e._v(" "),n("li",[e._v("4.13 by marynate")]),e._v(" "),n("li",[e._v("Original by ArneBezuijen")])]),e._v(" "),n("p",[e._v("< 1MB")]),e._v(" "),n("p",[e._v("09/14/2015")]),e._v(" "),n("p",[e._v("Toon Shading model")]),e._v(" "),n("p",[e._v("4.10 Support for Xcode 7.3")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/EpicGames/UnrealEngine/pull/2182",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/EpicGames/UnrealEngine/pull/2182"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("4.10")]),e._v(" "),n("p",[e._v("Derek van Vliet")]),e._v(" "),n("p",[e._v("<1MB")]),e._v(" "),n("p",[e._v("24/03/2016")]),e._v(" "),n("p",[e._v("Resolves errors that occur when compiling 4.10 using Xcode 7.3")]),e._v(" "),n("p",[e._v("Menu Fix")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/EpicGames/UnrealEngine/pull/2231",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/EpicGames/UnrealEngine/pull/2231"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("4.12")]),e._v(" "),n("p",[e._v("Robert Khalikov")]),e._v(" "),n("p",[e._v("<1MB")]),e._v(" "),n("p",[e._v("14/04/2016")]),e._v(" "),n("p",[e._v("Fixes appearance of menu items that don't have icons assigned to them (follow the link to see the screenshot).")]),e._v(" "),n("p",[e._v("Alpha Composite Blend Mode")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/EpicGames/UnrealEngine/pull/2114",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/EpicGames/UnrealEngine/pull/2114"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("4.11+, integrated in 4.13 by Epic")]),e._v(" "),n("p",[n("a",{attrs:{href:"/index.php?title=User:Moss&action=edit&redlink=1",title:"User:Moss (page does not exist)"}},[e._v("Moritz Wundke (Moss)")])]),e._v(" "),n("p",[e._v("<1MB")]),e._v(" "),n("p",[e._v("29/02/2016")]),e._v(" "),n("p",[e._v("Adding Alpha Composite aka 'pre-multiplied alpha' to the blend modes. Used in VFX such as "),n("a",{attrs:{href:"http://www.gdcvault.com/play/1017660/Technical-Artist-Bootcamp-The-VFX",target:"_blank",rel:"noopener noreferrer"}},[e._v("Diablo III"),n("OutboundLink")],1),e._v(".")]),e._v(" "),n("p",[e._v("Toggle Light Propagation Volumes at Runtime")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/EpicGames/UnrealEngine/pull/2218",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/EpicGames/UnrealEngine/pull/2218"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("4.11")]),e._v(" "),n("p",[e._v("Michael Fortin")]),e._v(" "),n("p",[e._v("<1MB")]),e._v(" "),n("p",[e._v("15/06/2016")]),e._v(" "),n("p",[e._v("Allow toggling of Global Illumination through Light Propagation Volumes at runtime. Tested in 4.8 and 4.11.")]),e._v(" "),n("p",[e._v("Intel Hardware Metrics for DX11/12")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/EpicGames/UnrealEngine/pull/2544",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/EpicGames/UnrealEngine/pull/2544"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("4.12")]),e._v(" "),n("p",[n("a",{attrs:{href:"/index.php?title=User:JeffRous&action=edit&redlink=1",title:"User:JeffRous (page does not exist)"}},[e._v("Jeff Rous (Intel)")])]),e._v(" "),n("p",[e._v("150MB")]),e._v(" "),n("p",[e._v("06/28/2016")]),e._v(" "),n("p",[e._v("Adds a stat command to get data from Intel hardware counters through a driver interface.")]),e._v(" "),n("p",[e._v("Additional Ease functions")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/EpicGames/UnrealEngine/pull/1786",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/EpicGames/UnrealEngine/pull/1786"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("4.8+")]),e._v(" "),n("p",[n("a",{attrs:{href:"/index.php?title=User:Moss&action=edit&redlink=1",title:"User:Moss (page does not exist)"}},[e._v("Moritz Wundke (Moss)")])]),e._v(" "),n("p",[e._v("<1MB")]),e._v(" "),n("p",[e._v("12/17/2015")]),e._v(" "),n("p",[e._v("Partially merged into engine. Adds Elastic, Bounce and Back functions. Lets you customize the Amplitude, period and overshoot if the functions supports it.")]),e._v(" "),n("p",[e._v("Vehicle optimization via concurrent PxVehicleUpdate")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/EpicGames/UnrealEngine/pull/2767",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/EpicGames/UnrealEngine/pull/2767"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("4.15+")]),e._v(" "),n("p",[n("a",{attrs:{href:"/index.php?title=User:DenizPiri&action=edit&redlink=1",title:"User:DenizPiri (page does not exist)"}},[e._v("Deniz Piri (Ahoy Games)")])]),e._v(" "),n("p",[e._v("<1MB")]),e._v(" "),n("p",[e._v("03/09/2017")]),e._v(" "),n("p",[e._v("This patch makes PxVehicleUpdate be used concurrently from multiple threads (using TaskGraph).")]),e._v(" "),n("p",[e._v("Override functions context menu search functionality")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/EpicGames/UnrealEngine/pull/4227",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/EpicGames/UnrealEngine/pull/4227"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("4.18+")]),e._v(" "),n("p",[n("a",{attrs:{href:"/index.php?title=User:Project.gheist&action=edit&redlink=1",title:"User:Project.gheist (page does not exist)"}},[e._v("projectgheist")])]),e._v(" "),n("p",[e._v("<1MB")]),e._v(" "),n("p",[e._v("12/22/2017")]),e._v(" "),n("p",[e._v("Makes it possible to do a search query in the Override functions context menu.")]),e._v(" "),n("h2",{attrs:{id:"contribute"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#contribute"}},[e._v("#")]),e._v(" Contribute!")]),e._v(" "),n("p",[e._v("GitHub submissions can be added to provide developers with various changes to the engine. If you'd like to add your repository to the page, please make sure to include the version, size, release date, link and a description of the changes made.")]),e._v(" "),n("h3",{attrs:{id:"share-your-project"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#share-your-project"}},[e._v("#")]),e._v(" Share your project")]),e._v(" "),n("p",[e._v("While creating a fork is straightforward distributing a project will require some additional steps to be guarded by the EULA. The idea we will show you is very simple, we just create a new branch in an exiting engine fork (the fork must lie within an account that has been added to Epics Organization) and get rid of the history which results in a so called orphan branch.")]),e._v(" "),n("p",[e._v("Create an orphan branch:")]),e._v(" "),n("p",[e._v("git checkout --orphan MyProjectBranch\ngit rm -rf .")]),e._v(" "),n("p",[e._v("Add your content and commit it:")]),e._v(" "),n("p",[e._v('git add .\ngit commit -m "Initial Commit"')]),e._v(" "),n("p",[e._v("Push it back to GitHub tracking the new branch:")]),e._v(" "),n("p",[e._v("git push -u origin MyProjectBranch")]),e._v(" "),n("p",[e._v("Now you will have a shiny new branch that has it's own history and is living in your engine fork safely guarded by the EULA.")]),e._v(" "),n("h2",{attrs:{id:"submitting-pull-requests"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#submitting-pull-requests"}},[e._v("#")]),e._v(" Submitting Pull Requests")]),e._v(" "),n("p",[e._v("This small guide will show you a common pipeline to submit and update your pull requests to the engines upstream (aka. main git).")]),e._v(" "),n("h4",{attrs:{id:"create-a-pull-request"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#create-a-pull-request"}},[e._v("#")]),e._v(" Create a Pull Request")]),e._v(" "),n("p",[e._v("A pull requests is just a bunch of commits that are send the engines upstream to be integrated in the main branch. It's the main way to contribute to the engine.")]),e._v(" "),n("p",[e._v("Creating a pull requests is simple yet a challenge at times. One of the main errors when submitting a PR is creating it from a non clean history. What I mean by that is that you may be submitting the PR from a branch you actively work on and not only the explicit PR changes but all the differences between your branch and the one you submit the PR to will be pushed up.")]),e._v(" "),n("p",[e._v("So the first pull a clean version of the branch you will submit your PR to. I normally let all branches that come the upstream clean and just create my own branches from those. This way I just have to sync the clean branches (we will call them vendor branches from now on).")]),e._v(" "),n("p",[e._v("As an example we will use the "),n("strong",[e._v("release")]),e._v(" branch for our examples for now. You can also use the "),n("strong",[e._v("master")]),e._v(" branch it may not compile.")]),e._v(" "),n("p",[e._v("In case you have not set the upstream to the main git just use.")]),e._v(" "),n("p",[e._v("Warning: This guide does not work for pull requests. Use "),n("a",{attrs:{href:"https://wiki.unrealengine.com/Git_Pull_Requests",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://wiki.unrealengine.com/Git_Pull_Requests"),n("OutboundLink")],1),e._v(" instead.")]),e._v(" "),n("p",[e._v("git remote add upstream git@github.com:EpicGames/UnrealEngine.git")]),e._v(" "),n("p",[e._v("First we will switch to the "),n("strong",[e._v("release")]),e._v(" branch")]),e._v(" "),n("p",[e._v("git checkout release")]),e._v(" "),n("p",[e._v("or in case you haven't checked it out never ("),n("a",{attrs:{href:"https://git-scm.com/book/ch3-5.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("more info remotes"),n("OutboundLink")],1),e._v(")")]),e._v(" "),n("p",[e._v("git checkout -b release origin/release")]),e._v(" "),n("p",[e._v("So to sync your branch with the changes from the upstream we will simply pull and merge the changes.")]),e._v(" "),n("p",[e._v("git fetch upstream\ngit merge upstream/release")]),e._v(" "),n("p",[e._v("[WIP]")]),e._v(" "),n("h4",{attrs:{id:"update-an-existing-pull-request"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#update-an-existing-pull-request"}},[e._v("#")]),e._v(" Update an existing Pull Request")]),e._v(" "),n("p",[e._v("[WIP]")]),e._v(" "),n("h2",{attrs:{id:"integrate-into-your-own-fork"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#integrate-into-your-own-fork"}},[e._v("#")]),e._v(" Integrate into your own fork")]),e._v(" "),n("p",[e._v("The following guide will show you how to integrate a given PullRequest into your own engine fork. In this case we will try to integrate the original "),n("em",[e._v("Toon Shading")]),e._v(" PullRequest into a clean 4.10 engine fork (the code is made for 4.11+ to show you how a hard case is handled). The final version can be found here: "),n("a",{attrs:{href:"https://github.com/moritz-wundke/UnrealEngine/tree/ToonShading.4.10",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/moritz-wundke/UnrealEngine/tree/ToonShading.4.10"),n("OutboundLink")],1),e._v(".")]),e._v(" "),n("h4",{attrs:{id:"what-do-you-need"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#what-do-you-need"}},[e._v("#")]),e._v(" What do you need")]),e._v(" "),n("ul",[n("li",[e._v("PR: "),n("a",{attrs:{href:"https://github.com/EpicGames/UnrealEngine/pull/1552",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/EpicGames/UnrealEngine/pull/1552"),n("OutboundLink")],1)]),e._v(" "),n("li",[e._v("Made of the master branch, but our branch is based on 4.10")]),e._v(" "),n("li",[e._v("You will need your own fork of the engine (I will use GitHub)")])]),e._v(" "),n("h4",{attrs:{id:"setup"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#setup"}},[e._v("#")]),e._v(" Setup")]),e._v(" "),n("p",[e._v("So first we will start of creating a 4.10 branch (using a specifc branch will give you the ability to try yourself and replicate the following steps), if you already have one then you can just skip this part and jump directlty to "),n("strong",[e._v("Adding the PRs remote")]),e._v(".")]),e._v(" "),n("p",[e._v("git clone git@github.com:<your/github/user>/UnrealEngine.git -b 4.10")]),e._v(" "),n("p",[e._v("Once forked we ensure that the branch is updated to Epics 4.10 branch, when in development I always try to be as updated as possible. You may not want to update your branch but for sake of consistence I will go through the process of updating your fork.")]),e._v(" "),n("p",[e._v("First we will have to add a new remote that will point to the oficial UnrealEngine repository, this remote will be called upstream. Again, if you already have it configured just jump to "),n("strong",[e._v("Adding the PRs remote")]),e._v(".")]),e._v(" "),n("p",[e._v("git remote add upstream git@github.com:EpicGames/UnrealEngine.git")]),e._v(" "),n("p",[e._v("Now that our upstream is setup we just merge the changes in. We can use the merge or the pull commands, if you use merge remember to fetch the latest 4.10 branch from the upstream.")]),e._v(" "),n("p",[e._v("git fetch upstream 4.10\ngit merge upstream 4.10")]),e._v(" "),n("p",[e._v("Some folk prefer not to merge the entire history in, so if you just want a single commit generated by the merge command just add the --squash argument")]),e._v(" "),n("p",[e._v("git merge upstream 4.10 --squash")]),e._v(" "),n("p",[e._v("Ok now we have our nice 4.10 branch, let's create a new one from it that we use to hold the PR in. Using a seperate branch will helo you integrating it and if you are activily developing it will give you a sandbox test bed to test the PR appropiatly.")]),e._v(" "),n("p",[e._v("git checkout -b ToonShading.4.10\ngit push -u origin ToonShading.4.10")]),e._v(" "),n("p",[e._v("Nice we now have our separate updated 4.10 branch to play with!")]),e._v(" "),n("h4",{attrs:{id:"adding-the-prs-remote"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#adding-the-prs-remote"}},[e._v("#")]),e._v(" Adding the PRs remote")]),e._v(" "),n("p",[e._v("To pull the changes in we will have to add a new remote to our git, a PR is actually just a collection of commits of diffs from one fork onto another, this is way when you commit to a branch that you made a PR the PR will get updated with those commits.")]),e._v(" "),n("p",[e._v("So first we have to discover the fork that the PR was made of, in our case the Toon shading model PR comes with a set of commits "),n("a",{attrs:{href:"https://github.com/EpicGames/UnrealEngine/pull/1552/commits",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/EpicGames/UnrealEngine/pull/1552/commits"),n("OutboundLink")],1),e._v(".")]),e._v(" "),n("p",[e._v("Those commits will yield to "),n("a",{attrs:{href:"https://github.com/ArneBezuijen/UnrealEngineToonShading",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/ArneBezuijen/UnrealEngineToonShading"),n("OutboundLink")],1),e._v(" so adding it as a new remote would be as follows:")]),e._v(" "),n("p",[e._v("git remote add toonUpstream git@github.com:ArneBezuijen/UnrealEngineToonShading.git")]),e._v(" "),n("p",[e._v("And let us fetch the branch where the actual PR lives in")]),e._v(" "),n("p",[e._v("git fetch toonUpstream master")]),e._v(" "),n("h4",{attrs:{id:"cherry-pick-the-commits"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cherry-pick-the-commits"}},[e._v("#")]),e._v(" Cherry pick the commits")]),e._v(" "),n("p",[e._v("The ^ is important, if not you wont pickup A but only what comes after A")]),e._v(" "),n("p",[e._v("git cherry-pick A^..B")]),e._v(" "),n("p",[e._v("So now we have to identify the commit we want to range cherrypic (supported from git 1.7.2+, in case you have a lower version you would use rebase instead). We simply check the commit made to the PR at (in our case "),n("a",{attrs:{href:"https://github.com/EpicGames/UnrealEngine/pull/1552/commits",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/EpicGames/UnrealEngine/pull/1552/commits"),n("OutboundLink")],1),e._v(") which results in the following commands. Unfortunatly in the case of the Toon Shading PR we can not just cherry-pick a range of commits, so we have to cherrypick them one by one and resolve any conflicts that could we could get, the good news is that our commit will be consecutive and you could squash them together later on.")]),e._v(" "),n("p",[e._v("git cherry-pick 311cbeb")]),e._v(" "),n("p",[e._v("This one is tricky (actually all are tricky), a lot of rendering and shader code has been changed in the master branch. So what we get are conflicts due to the fact that the master is ahead the 4.10 branch. Let's pickup `DeferredhadingCommon.usf`:")]),e._v(" "),n("p",[e._v("The following conflict contains changes from the PR and changes made to the master itself.")]),e._v(" "),n("p",[n("a",{attrs:{href:"/index.php?title=File:Conflict_example.png"}},[n("img",{attrs:{src:"https://d26ilriwvtzlb.cloudfront.net/9/9e/Conflict_example.png",alt:"Conflict example.png"}})])]),e._v(" "),n("p",[n("em",[e._v("A nice conflict to resolve")])]),e._v(" "),n("p",[e._v("So the way to filter them out is to check what the PR changed and what are changes made by Epic and only applying those from the PR.")]),e._v(" "),n("p",[n("a",{attrs:{href:"/index.php?title=File:Conflict_solved_example.png"}},[n("img",{attrs:{src:"https://d26ilriwvtzlb.cloudfront.net/e/e6/Conflict_solved_example.png",alt:"Conflict solved example.png"}})])]),e._v(" "),n("p",[n("em",[e._v("Aaaaaann it's solved")])]),e._v(" "),n("p",[e._v("Another change we will perform on the PR is adding new material parameters to not reuse the default ones, the PR uses a set of custom pins that will be available in newer versions of the engine but for 4.10 we better add some custom ones (the more you know). So we will resolve the following conflicts as shown.")]),e._v(" "),n("p",[n("a",{attrs:{href:"/index.php?title=File:Fixing_pused_conflic.png"}},[n("img",{attrs:{src:"https://d26ilriwvtzlb.cloudfront.net/e/e0/Fixing_pused_conflic.png",alt:"Fixing pused conflic.png"}})])]),e._v(" "),n("p",[n("em",[e._v("Tweaking and redoing")])]),e._v(" "),n("p",[e._v("will become")]),e._v(" "),n("p",[n("a",{attrs:{href:"/index.php?title=File:Some_custom_changes.png"}},[n("img",{attrs:{src:"https://d26ilriwvtzlb.cloudfront.net/5/5d/Some_custom_changes.png",alt:"Some custom changes.png"}})])]),e._v(" "),n("p",[n("em",[e._v("Not bad at all")])]),e._v(" "),n("p",[e._v("The PR contains actually a lot more commits because the original author tried to update it to newer verions of the master branch. In our case we are good to go with what we have at the moment.")]),e._v(" "),n("p",[e._v("You have to carefully integrate changes that come from the master branch into your own due to the fact that you may pull not only changes from the PR itself but changes made in the actual master branch. It does not help that many PRs are not only pushing only their changes, people tend to sync their fork and so their PR get's really messy and you really lose track of what are actually changes from the PR or from Epic.")]),e._v(" "),n("p",[n("a",{attrs:{href:"/index.php?title=File:Too_much_rebase.png"}},[n("img",{attrs:{src:"https://d26ilriwvtzlb.cloudfront.net/0/0b/Too_much_rebase.png",alt:"Too much rebase.png"}})])]),e._v(" "),n("p",[n("em",[e._v("Ok sometimes we might need a fresh start")])]),e._v(" "),n("p",[e._v("The commits we wont actually cherry-pick:")]),e._v(" "),n("p",[e._v("git cherry-pick 8511fb9\ngit cherry-pick b69ddc0\ngit cherry-pick ccdf074\ngit cherry-pick 5abf035\ngit cherry-pick 2849422\ngit cherry-pick 4b77319")]),e._v(" "),n("p",[e._v("Sometimes it is easier to perform the cherrypick in the same branch that the PR is based of and then squashing/pulling the final result into the desired branch.")]),e._v(" "),n("p",[e._v("So after all the work and fixing code let us post our final result:")]),e._v(" "),n("p",[n("a",{attrs:{href:"/index.php?title=File:Toon_shading.png"}},[n("img",{attrs:{src:"https://d26ilriwvtzlb.cloudfront.net/b/b5/Toon_shading.png",alt:"Toon shading.png"}})])]),e._v(" "),n("p",[n("em",[e._v("It was well worth the effort! Mhh that arrow is kinda pointy")])]),e._v(" "),n("p",[e._v("But before we are done ensure to commit and push your integration. I recommend you to push it all in a single commit, if not backtracking any possible bugs will be hell.")]),e._v(" "),n("p",[e._v("In case you want to check all the changes I had to make I pushed them to "),n("a",{attrs:{href:"https://github.com/moritz-wundke/UnrealEngine/commit/fd5c3c92947d067d0fc418211f71f87437b43d04",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/moritz-wundke/UnrealEngine/commit/fd5c3c92947d067d0fc418211f71f87437b43d04"),n("OutboundLink")],1),e._v(" so you will be able to just pick them and use them easily.")]),e._v(" "),n("h4",{attrs:{id:"final-thoughts"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#final-thoughts"}},[e._v("#")]),e._v(" Final thoughts")]),e._v(" "),n("p",[e._v("When integrating engine changes it is always wise to mark those changes in some way. Now you ask why the heck should I mark those? Git will handle it for me. The answer is yes and no. Git knows about the history for sure but what if Epic decides to integrate that particular change you already merged into your own fork but you made some minor tweaks to it. So when it comes to updating to a new engine version all that conflict horror and not knowing what was from the PR, what was yours and what was done by Epics starts again without any hint.")]),e._v(" "),n("p",[e._v("It is common to tag any change made to the engine to avoid nasty bugs and silent changes that might go unoticed until a major bug touches the surface and those bugs come alive normally when you are stressing your game aka shipping it 😃")]),e._v(" "),n("p",[e._v("So what I encourage you to do when changing any engine code is to add some *start/end* tags to your changes, also those tags should be descriptive enough to know what's all about and make it easier to spot a *start/end* pair. The following is an example of what is commonly used in the industry.")]),e._v(" "),n("p",[e._v("// --\x3e "),n("Compan",{attrs:{or:"",project:"",tag:""}},[e._v(" by <Who integrated it?> "),n("Date",{attrs:{here:""}},[e._v(" - <Descriptoion, link to PR, commit from Epic, etc>\n// ... Engine changes in here\n// <-- "),n("Compan",{attrs:{or:"",project:"",tag:""}},[e._v(" by <Who integrated it?> "),n("Date",{attrs:{here:""}},[e._v(" - <Descriptoion, link to PR, commit from Epic, etc>")])],1)],1)],1)],1),e._v(" "),n("p",[e._v("So the first change in *MaterialShader.cpp* could be tagged as follows")]),e._v(" "),n("p",[e._v('case MSM_TwoSidedFoliage:   ShadingModelName = TEXT("MSM_TwoSidedFoliage"); break;\n// --\x3e TOON by Moss 1/1/2016 - Integrated toon shader from https://github.com/EpicGames/UnrealEngine/pull/1552\ncase MSM_Toon:              ShadingModelName = TEXT("MSM_Toon"); break;\n// <-- TOON by Moss 1/1/2016 - Integrated toon shader from https://github.com/EpicGames/UnrealEngine/pull/1552\ndefault: ShadingModelName = TEXT("Unknown"); break;')]),e._v(" "),n("p",[e._v("I hope this guide could be useful for you when it comes to integrating a community Pull Request of a feature you need and Epic might not be able to integrate any time soon.")]),e._v(" "),n("p",[e._v('Retrieved from "'),n("a",{attrs:{href:"https://wiki.unrealengine.com/index.php?title=GitHub_Sharing_Hub&oldid=1043",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://wiki.unrealengine.com/index.php?title=GitHub_Sharing_Hub&oldid=1043"),n("OutboundLink")],1),e._v('"')]),e._v(" "),n("p",[n("a",{attrs:{href:"/index.php?title=Special:Categories",title:"Special:Categories"}},[e._v("Category")]),e._v(":")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"/index.php?title=Category:Pages_with_ignored_display_titles&action=edit&redlink=1",title:"Category:Pages with ignored display titles (page does not exist)"}},[e._v("Pages with ignored display titles")])])])])}),[],!1,null,null,null);t.default=o.exports}}]);