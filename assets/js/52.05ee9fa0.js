(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{350:function(e,t,n){"use strict";n.r(t);var i=n(28),r=Object(i.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[e._v("Accessing mesh triangles and vertex positions in build - Epic Wiki")]),e._v(" "),n("h1",{attrs:{id:"accessing-mesh-triangles-and-vertex-positions-in-build"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#accessing-mesh-triangles-and-vertex-positions-in-build"}},[e._v("#")]),e._v(" Accessing mesh triangles and vertex positions in build")]),e._v(" "),n("h2",{attrs:{id:"contents"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#contents"}},[e._v("#")]),e._v(" Contents")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#Overview"}},[e._v("1 Overview")])]),e._v(" "),n("li",[n("a",{attrs:{href:"#Mesh_specific_vertices_and_triangles"}},[e._v("2 Mesh specific vertices and triangles")])]),e._v(" "),n("li",[n("a",{attrs:{href:"#Getting_Transformed_Vertex_Positions"}},[e._v("3 Getting Transformed Vertex Positions")])]),e._v(" "),n("li",[n("a",{attrs:{href:"#Summary"}},[e._v("4 Summary")])])]),e._v(" "),n("h1",{attrs:{id:"overview"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),n("p",[e._v("Author: "),n("a",{attrs:{href:"http://www.dawidniemiec.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("vebski"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("If you are wondering how to access triangles and vertex positions in packaged project. Here is the solution I found. Accessing this data from Unreal's variables (ex. StaticMesh->GetPhysicsTriMeshData()) will not work since all vertex data of a mesh is serialized when packaging the project.")]),e._v(" "),n("p",[e._v("To do this we will have to use PhysX library inside UE4 (on how to include PhysX module "),n("a",{attrs:{href:"/PhysX,_Integrating_PhysX_Code_into_Your_Project",title:"PhysX, Integrating PhysX Code into Your Project"}},[e._v("check out Rama's tutorial")]),e._v(").")]),e._v(" "),n("p",[e._v("Also remember to include these in your .cpp")]),e._v(" "),n("p",[e._v('#include "PhysicsPublic.h"\n#include "PhysXIncludes.h"\n#include "ThirdParty/PhysX/PhysX-3.3/include/geometry/PxTriangleMesh.h"\n#include "ThirdParty/PhysX/PhysX-3.3/include/foundation/PxSimpleTypes.h"')]),e._v(" "),n("h1",{attrs:{id:"mesh-specific-vertices-and-triangles"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mesh-specific-vertices-and-triangles"}},[e._v("#")]),e._v(" Mesh specific vertices and triangles")]),e._v(" "),n("p",[e._v("This method will access data only for specific UMeshComponent.")]),e._v(" "),n("p",[e._v("// MyStaticMesh is a UStaticMeshComponent\nPxTriangleMesh* TempTriMesh = MyStaticMesh->BodyInstance.BodySetup.Get()->TriMesh;\n \ncheck(TempTriMesh);\nint32 TriNumber = TempTriMesh->getNbTriangles();\n \nconst PxVec3* PVertices = TempTriMesh->getVertices();\nconst void* Triangles = TempTriMesh->getTriangles();\n \n// Grab triangle indices\nint32 I0, I1, I2;\n \nfor (int32 TriIndex = 0; TriIndex < TriNumber; ++TriIndex)\n{\nif (TempTriMesh->getTriangleMeshFlags() & PxTriangleMeshFlag::eHAS_16BIT_TRIANGLE_INDICES)\n{\nPxU16* P16BitIndices = (PxU16*)Triangles;\nI0 = P16BitIndices[(TriIndex * 3) + 0];\nI1 = P16BitIndices[(TriIndex * 3) + 1];\nI2 = P16BitIndices[(TriIndex * 3) + 2];\n}\nelse\n{\nPxU32* P32BitIndices = (PxU32*)Triangles;\nI0 = P32BitIndices[(TriIndex * 3) + 0];\nI1 = P32BitIndices[(TriIndex * 3) + 1];\nI2 = P32BitIndices[(TriIndex * 3) + 2];\n}\n \n// Local position\nconst FVector V0 = P2UVector(PVertices[I0]);\nconst FVector V1 = P2UVector(PVertices[I1]);\nconst FVector V2 = P2UVector(PVertices[I2]);\n}")]),e._v(" "),n("p",[e._v("There is also way of accessing all meshes (welded) of an actor. It can be done by calling GetAllShapes() in BodyInstance.")]),e._v(" "),n("h1",{attrs:{id:"getting-transformed-vertex-positions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#getting-transformed-vertex-positions"}},[e._v("#")]),e._v(" Getting Transformed Vertex Positions")]),e._v(" "),n("p",[n("strong",[e._v("Author")]),e._v(" "),n("a",{attrs:{href:"/User:Rama",title:"User:Rama"}},[e._v("Rama")]),e._v(" ("),n("a",{attrs:{href:"/User_talk:Rama",title:"User talk:Rama"}},[e._v("talk")]),e._v(")")]),e._v(" "),n("p",[e._v("Many thanks to vebski for making this wiki and providing this info!")]),e._v(" "),n("p",[e._v("I've written this code to get the transformed positions of all vertices of any static mesh component.")]),e._v(" "),n("p",[e._v("This will account for actor rotation, translation, and scaling.")]),e._v(" "),n("p",[e._v("//Get Transformed Vertex positions of any static mesh! -Rama\nbool UVictoryBPFunctionLibrary::GetStaticMeshVertexLocations(UStaticMeshComponent* Comp, TArray<FVector>& VertexPositions)\n{\n \nif(!Comp) \t\t\t\t\t\t\n{\nreturn false;\n}\n \nif(!Comp->IsValidLowLevel())\n{\nreturn false;\n}\n//~~~~~~~~~~~~~~~~~~~~~~~\n \n//Component Transform\nFTransform RV_Transform = Comp->GetComponentTransform();\n \n//Body Setup valid?\nUBodySetup* BodySetup = Comp->GetBodySetup();\n \nif(!BodySetup || !BodySetup->IsValidLowLevel())\n{\nreturn false;\n}"),n("br"),e._v("\n \n//array as of 4.9\nfor(PxTriangleMesh* EachTriMesh : BodySetup->TriMeshes)\n{\nif (!EachTriMesh)\n{\nreturn false;\n}\n//~~~~~~~~~~~~~~~~\n \n//Number of vertices\nPxU32 VertexCount = EachTriMesh->getNbVertices();\n \n//Vertex array\nconst PxVec3* Vertices = EachTriMesh->getVertices();\n \n//For each vertex, transform the position to match the component Transform\nfor (PxU32 v = 0; v < VertexCount; v++)\n{\nVertexPositions.Add(RV_Transform.TransformPosition(P2UVector(Vertices[v])));\n}\n}\n \nreturn true;\n}")]),e._v(" "),n("p",[n("a",{attrs:{href:"/User:Rama",title:"User:Rama"}},[e._v("Rama")]),e._v(" ("),n("a",{attrs:{href:"/User_talk:Rama",title:"User talk:Rama"}},[e._v("talk")]),e._v(")")]),e._v(" "),n("h1",{attrs:{id:"summary"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#summary"}},[e._v("#")]),e._v(" Summary")]),e._v(" "),n("p",[e._v("I hope it will save you some time, it took me a while of reading source code to figure this out.")]),e._v(" "),n("p",[e._v("vebski")]),e._v(" "),n("p",[e._v('Retrieved from "'),n("a",{attrs:{href:"https://wiki.unrealengine.com/index.php?title=Accessing_mesh_triangles_and_vertex_positions_in_build&oldid=15282",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://wiki.unrealengine.com/index.php?title=Accessing_mesh_triangles_and_vertex_positions_in_build&oldid=15282"),n("OutboundLink")],1),e._v('"')]),e._v(" "),n("p",[n("a",{attrs:{href:"/Special:Categories",title:"Special:Categories"}},[e._v("Category")]),e._v(":")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"/Category:Code",title:"Category:Code"}},[e._v("Code")])])]),e._v(" "),n("p",[n("img",{attrs:{src:"https://tracking.unrealengine.com/track.png",alt:""}})])])}),[],!1,null,null,null);t.default=r.exports}}]);