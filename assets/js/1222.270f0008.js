(window.webpackJsonp=window.webpackJsonp||[]).push([[1222],{975:function(e,t,n){"use strict";n.r(t);var a=n(28),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[e._v("Visual Studio Snippets - Epic Wiki")]),e._v(" "),n("h1",{attrs:{id:"visual-studio-snippets"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#visual-studio-snippets"}},[e._v("#")]),e._v(" Visual Studio Snippets")]),e._v(" "),n("p",[e._v("Visual Studio Snippets could be very useful, that’s why I’ve created a "),n("a",{attrs:{href:"https://github.com/mpolaczyk/ue4snippets",target:"_blank",rel:"noopener noreferrer"}},[e._v("public repository"),n("OutboundLink")],1),e._v(" with a few examples. Snippets are generated with "),n("a",{attrs:{href:"http://www.stack.nl/~dimitri/doxygen/manual/docblocks.html#cppblock",target:"_blank",rel:"noopener noreferrer"}},[e._v("doxygen"),n("OutboundLink")],1),e._v(" style comments.")]),e._v(" "),n("h2",{attrs:{id:"how-to-add-snippet"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#how-to-add-snippet"}},[e._v("#")]),e._v(" How to add snippet ?")]),e._v(" "),n("p",[e._v("First of all you have to clone "),n("a",{attrs:{href:"https://github.com/mpolaczyk/ue4snippets",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub repository"),n("OutboundLink")],1),e._v(". Then you have two choices:")]),e._v(" "),n("ol",[n("li",[e._v("Method one. Paste "),n("em",[e._v(".snippet")]),e._v(" files into: "),n("em",[e._v('"C:\\Users\\$user$\\Documents\\Visual Studio 2013\\Code Snippets\\Visual C++\\My Code Snippets"')]),e._v(". Then restart VS.")]),e._v(" "),n("li",[e._v("Method two. Open Visual Studio, navigate to TOOLS -> Code Snippets Manager… -> Import… (This allows an Add folder option for easier management)")])]),e._v(" "),n("p",[n("strong",[e._v("[4.6 Branch and above]")]),e._v(' Epic seems to have started initial integration with Branch 4.6 and above. Look on GitHub under "\\Engine\\extras\\VisualStudioSnippets" and follow the Readme file.')]),e._v(" "),n("h2",{attrs:{id:"how-to-use-snippets"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#how-to-use-snippets"}},[e._v("#")]),e._v(" How to use snippets ?")]),e._v(" "),n("p",[e._v("Import them and just start typing ue4…")]),e._v(" "),n("p",[n("a",{attrs:{href:"/File:Ue4-snippet.png"}},[n("img",{attrs:{src:"https://d26ilriwvtzlb.cloudfront.net/2/2e/Ue4-snippet.png",alt:"Ue4-snippet.png"}})])]),e._v(" "),n("p",[e._v("After selecting snippet from the list, hit TAB.")]),e._v(" "),n("p",[n("a",{attrs:{href:"/File:Ue4-snippet-pasted.png"}},[n("img",{attrs:{src:"https://d26ilriwvtzlb.cloudfront.net/2/29/Ue4-snippet-pasted.png",alt:"Ue4-snippet-pasted.png"}})])]),e._v(" "),n("p",[e._v("To navigate between highlited fields you can use TAB and SHIFT + TAB. After you enter all names, hit ENTER.")]),e._v(" "),n("h2",{attrs:{id:"snippets"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#snippets"}},[e._v("#")]),e._v(" Snippets")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("ue4classa")]),e._v(" – Blueprintable class that derives from an AActor. Parameters are: comment, class name and base class name.")])]),e._v(" "),n("p",[e._v("/**\n* Comment\n*/\nUCLASS(BlueprintType, Blueprintable)\nclass AFoo : public AFooBase\n{\nGENERATED_UCLASS_BODY()\n \npublic:\n \nprotected:\n \nprivate:\n \n};")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("ue4classu")]),e._v(" – Blueprintable class that derives from an UObject. Parameters are: comment, class name, base class name.")])]),e._v(" "),n("p",[e._v("/**\n* Comment\n*/\nUCLASS(BlueprintType, Blueprintable)\nclass UFoo : public UFooBase\n{\nGENERATED_UCLASS_BODY()\n \npublic:\n \nprotected:\n \nprivate:\n \n};")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("ue4enum")]),e._v(" – Simple enum. Parameters are: comment, enum name, first member name and it’s comment.")])]),e._v(" "),n("p",[e._v("/**\n* Comment\n*/\nUENUM()\nenum EMyEnum\n{\nName, /**> Comment */\n \n};")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("ue4enumdisplay")]),e._v(" – Enum that can be used with blueprints. Parameters are: comment, enum name, first member name, it’s display name and comment.")])]),e._v(" "),n("p",[e._v('/**\n* Comment\n*/\nUENUM()\nnamespace EMyEnum\n{\nenum Type\n{\nName UMETA(DisplayName = "DisplayName"), /**> Comment */\n \n};\n}')]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("ue4event")]),e._v(" – This function can be used as an event in blueprint. Parameters are: comment (parameters and return value), UI category, virtual and const modifiers, return type, function name and arguments.")])]),e._v(" "),n("p",[e._v('/**\n* Comment\n* @param Comment\n* @return Comment\n*/\nUFUNCTION(BlueprintImplementableEvent, Category = "MyProject")\nvirtual void OnFunctionName(args) const;')]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("ue4func")]),e._v(" – This function is available for blueprint logic. Parameters are: comment (parameters and return value), UI category, virtual and const modifiers, function name and arguments.")])]),e._v(" "),n("p",[e._v('/**\n* Comment\n* @param Comment\n* @return Comment\n*/\nUFUNCTION(BlueprintCallable, Category = "MyProject")\nvirtual void FunctionName(args) const;')]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("ue4interface")]),e._v(" – Simple ue4 interface. Parmameters are: comment and name.")])]),e._v(" "),n("p",[e._v("/**\n* Comment\n*/\nUINTERFACE()\nclass UFoo : public UInterface\n{\nGENERATED_UINTERFACE_BODY()\n};\n \nclass IFoo\n{\nGENERATED_IINTERFACE_BODY()\n \n};")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("ue4log")]),e._v(" – Simplest log line. Parameters are category, verbosity and message.")])]),e._v(" "),n("p",[e._v('UE_LOG(MyProject, Error, TEXT("Log message"));')]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("ue4logdeclare")]),e._v(" – Declaration of log category. Place this in main header of your project to allow logging. Parameters are: category, default verbosity and compile time verbosity.")])]),e._v(" "),n("p",[e._v("DECLARE_LOG_CATEGORY_EXTERN(MyProject, Log, All);")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("ue4logdefine")]),e._v(" – Definition of log category. Place this in main code file. Parameter is category name.")])]),e._v(" "),n("p",[e._v("DEFINE_LOG_CATEGORY(MyProject);")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("ue4logfloat")]),e._v(" – Log line that can be used to print float value. Parameters are: category, verbosity and variable name.")])]),e._v(" "),n("p",[e._v("UE_LOG(MyProject, Error, TEXT(\"The value of 'variable' is: %f\"), variable);")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("ue4logint")]),e._v(" – This log line can be used to log an integer value. Parameters are: category, verbosity and variable name.")])]),e._v(" "),n("p",[e._v("UE_LOG(MyProject, Error, TEXT(\"The value of 'variable' is: %i\"), variable);")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("ue4loguobj")]),e._v(" – This log line is designed to log from inside of the objects. By default, square brackets contains a name of an object that writes the log. Parameters are: category, verbosity, message and name of a pointer to the object.")])]),e._v(" "),n("p",[e._v('UE_LOG(MyProject, Error, TEXT("[%s] Log message"), *(this->GetName()));')]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("ue4prop")]),e._v(" – This read/write property is available everywhere (blueprint, instance and archetype details). Parameters are: comment, category, type and name.")])]),e._v(" "),n("p",[e._v('/**\n* Comment\n*/\nUPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "MyProject")\nType Name;')]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("ue4struct")]),e._v(" – Simple structure. Parameters are: comment and name.")])]),e._v(" "),n("p",[e._v("/**\n* Comment\n*/\nUSTRUCT()\nstruct FFoo\n{\nGENERATED_USTRUCT_BODY()\n \n};")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("ue4mark")]),e._v(" – This comment can be used to mark changes made to engine classes. Parameters are: Company symbol, task/ticket number, name and surname of a developer and short description of modification.")])]),e._v(" "),n("p",[e._v("/* BEGIN ACME (ACME-938) */\n// Name Surname - Comment\n \nvirtual void Tick(float DeltaTime);\n \n/* END ACME */")]),e._v(" "),n("p",[e._v("Author: "),n("a",{attrs:{href:"/User:Mpo",title:"User:Mpo"}},[e._v("mpo")])]),e._v(" "),n("p",[e._v('Retrieved from "'),n("a",{attrs:{href:"https://wiki.unrealengine.com/index.php?title=Visual_Studio_Snippets&oldid=11512",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://wiki.unrealengine.com/index.php?title=Visual_Studio_Snippets&oldid=11512"),n("OutboundLink")],1),e._v('"')]),e._v(" "),n("p",[n("a",{attrs:{href:"/Special:Categories",title:"Special:Categories"}},[e._v("Category")]),e._v(":")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"/Category:Code",title:"Category:Code"}},[e._v("Code")])])]),e._v(" "),n("p",[n("img",{attrs:{src:"https://tracking.unrealengine.com/track.png",alt:""}})])])}),[],!1,null,null,null);t.default=r.exports}}]);