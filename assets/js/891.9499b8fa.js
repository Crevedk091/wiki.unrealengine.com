(window.webpackJsonp=window.webpackJsonp||[]).push([[891],{1409:function(t,a,e){"use strict";e.r(a);var i=e(28),r=Object(i.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("Packaged Game Paths, Obtain Directories Based on Executable Location - Epic Wiki")]),t._v(" "),e("h1",{attrs:{id:"packaged-game-paths-obtain-directories-based-on-executable-location"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#packaged-game-paths-obtain-directories-based-on-executable-location"}},[t._v("#")]),t._v(" Packaged Game Paths, Obtain Directories Based on Executable Location")]),t._v(" "),e("h2",{attrs:{id:"contents"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#contents"}},[t._v("#")]),t._v(" Contents")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#Overview"}},[t._v("1 Overview")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#How_It_Works"}},[t._v("2 How It Works")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#InstallDir.2FWindowsNoEditor.2FGameName.2FBinaries.2FWin64"}},[t._v("3 InstallDir/WindowsNoEditor/GameName/Binaries/Win64")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#InstallDir.2FWindowsNoEditor.2F"}},[t._v("4 InstallDir/WindowsNoEditor/")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#InstallDir.2FWindowsNoEditor.2FGameName"}},[t._v("5 InstallDir/WindowsNoEditor/GameName")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#InstallDir.2FWindowsNoEditor.2FGameName_2"}},[t._v("6 InstallDir/WindowsNoEditor/GameName")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#InstallDir.2FWindowsNoEditor.2FGameName.2FSaved"}},[t._v("7 InstallDir/WindowsNoEditor/GameName/Saved")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#InstallDir.2FWindowsNoEditor.2FGameName.2FSaved.2FLogs"}},[t._v("8 InstallDir/WindowsNoEditor/GameName/Saved/Logs")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#Dynamic_Relocation_of_Project"}},[t._v("9 Dynamic Relocation of Project")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#Conclusion"}},[t._v("10 Conclusion")])])]),t._v(" "),e("h2",{attrs:{id:"overview"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[t._v("#")]),t._v(" Overview")]),t._v(" "),e("p",[t._v("Dear Community,")]),t._v(" "),e("p",[e("strong",[t._v("Here is how you get access to various parts of the directory structure of a Packaged game!")])]),t._v(" "),e("p",[t._v("You do not need to use ConverRelativePathToFull while testing WITH_EDITOR builds, though it will still work correctly.")]),t._v(" "),e("p",[t._v("But it is essential to include in packaged builds!")]),t._v(" "),e("p",[e("strong",[t._v("Below are the directories that get returned for each of several different UE4 C++ FPath:: functions!")])]),t._v(" "),e("p",[t._v("You can use pretty much any one of these to then create your own directory structure all inside of wherever your game's packaged binary is running from.")]),t._v(" "),e("h2",{attrs:{id:"how-it-works"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#how-it-works"}},[t._v("#")]),t._v(" How It Works")]),t._v(" "),e("p",[t._v("All the other paths are found by using the BaseDir, where the exe is running from.")]),t._v(" "),e("p",[t._v("This is determined at runtime, so if the entire project is moved, all the paths below will still work correctly!")]),t._v(" "),e("h2",{attrs:{id:"installdir-windowsnoeditor-gamename-binaries-win64"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#installdir-windowsnoeditor-gamename-binaries-win64"}},[t._v("#")]),t._v(" InstallDir/WindowsNoEditor/GameName/Binaries/Win64")]),t._v(" "),e("p",[t._v("//InstallDir/WindowsNoEditor/GameName/Binaries/Win64\nconst FString ThePath = FString(FPlatformProcess::BaseDir());")]),t._v(" "),e("h2",{attrs:{id:"installdir-windowsnoeditor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#installdir-windowsnoeditor"}},[t._v("#")]),t._v(" InstallDir/WindowsNoEditor/")]),t._v(" "),e("p",[t._v("//InstallDir/WindowsNoEditor/\nconst FString ThePath = FPaths::ConvertRelativePathToFull(FPaths::RootDir());")]),t._v(" "),e("h2",{attrs:{id:"installdir-windowsnoeditor-gamename"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#installdir-windowsnoeditor-gamename"}},[t._v("#")]),t._v(" InstallDir/WindowsNoEditor/GameName")]),t._v(" "),e("p",[t._v("//InstallDir/WindowsNoEditor/GameName\nconst FString ThePath = FPaths::ConvertRelativePathToFull(FPaths::GameDir());")]),t._v(" "),e("h2",{attrs:{id:"installdir-windowsnoeditor-gamename-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#installdir-windowsnoeditor-gamename-2"}},[t._v("#")]),t._v(" InstallDir/WindowsNoEditor/GameName")]),t._v(" "),e("p",[t._v("//InstallDir/WindowsNoEditor/GameName/\nconst FString ThePath = FPaths::ConvertRelativePathToFull(FPaths::GameUserDir());")]),t._v(" "),e("h2",{attrs:{id:"installdir-windowsnoeditor-gamename-saved"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#installdir-windowsnoeditor-gamename-saved"}},[t._v("#")]),t._v(" InstallDir/WindowsNoEditor/GameName/Saved")]),t._v(" "),e("p",[t._v("//InstallDir/WindowsNoEditor/GameName/Saved\nconst FString ThePath = FPaths::ConvertRelativePathToFull(FPaths::GameSavedDir());")]),t._v(" "),e("h2",{attrs:{id:"installdir-windowsnoeditor-gamename-saved-logs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#installdir-windowsnoeditor-gamename-saved-logs"}},[t._v("#")]),t._v(" InstallDir/WindowsNoEditor/GameName/Saved/Logs")]),t._v(" "),e("p",[t._v("//InstallDir/WindowsNoEditor/GameName/Saved/Logs\nconst FString ThePath = FPaths::ConvertRelativePathToFull(FPaths::GameLogDir());")]),t._v(" "),e("h2",{attrs:{id:"dynamic-relocation-of-project"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dynamic-relocation-of-project"}},[t._v("#")]),t._v(" Dynamic Relocation of Project")]),t._v(" "),e("p",[t._v("The above code I am sharing with you will work even if you change the location of your packaged game after packaging!")]),t._v(" "),e("p",[t._v("Try it!")]),t._v(" "),e("p",[t._v("I added many many subdirectories between my InstallDir and WindowsNoEditor and it still worked perfectly!")]),t._v(" "),e("p",[t._v("So even if the end user moves everything starting with WindowsNoEditor around, the above code will still generate the correct and updated directory structure!")]),t._v(" "),e("h2",{attrs:{id:"conclusion"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#conclusion"}},[t._v("#")]),t._v(" Conclusion")]),t._v(" "),e("p",[t._v("Now you know how to create your own directory structures relative to the installation directory of your packaged game!")]),t._v(" "),e("p",[t._v("Enjoy!")]),t._v(" "),e("p",[e("a",{attrs:{href:"/User:Rama",title:"User:Rama"}},[t._v("Rama")]),t._v(" ("),e("a",{attrs:{href:"/User_talk:Rama",title:"User talk:Rama"}},[t._v("talk")]),t._v(")")]),t._v(" "),e("p",[t._v('Retrieved from "'),e("a",{attrs:{href:"https://wiki.unrealengine.com/index.php?title=Packaged_Game_Paths,_Obtain_Directories_Based_on_Executable_Location&oldid=6015",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://wiki.unrealengine.com/index.php?title=Packaged_Game_Paths,_Obtain_Directories_Based_on_Executable_Location&oldid=6015"),e("OutboundLink")],1),t._v('"')]),t._v(" "),e("p",[e("a",{attrs:{href:"/Special:Categories",title:"Special:Categories"}},[t._v("Category")]),t._v(":")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"/Category:Code",title:"Category:Code"}},[t._v("Code")])])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://tracking.unrealengine.com/track.png",alt:""}})])])}),[],!1,null,null,null);a.default=r.exports}}]);