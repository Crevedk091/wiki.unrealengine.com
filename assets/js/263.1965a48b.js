(window.webpackJsonp=window.webpackJsonp||[]).push([[263],{614:function(e,t,a){"use strict";a.r(t);var r=a(28),n=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("Blueprints, Empower Your Entire Team With BlueprintImplementableEvent - Epic Wiki")]),e._v(" "),a("h1",{attrs:{id:"blueprints-empower-your-entire-team-with-blueprintimplementableevent"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#blueprints-empower-your-entire-team-with-blueprintimplementableevent"}},[e._v("#")]),e._v(" Blueprints, Empower Your Entire Team With BlueprintImplementableEvent")]),e._v(" "),a("p",[e._v("From Epic Wiki")]),e._v(" "),a("p",[e._v("Jump to: "),a("a",{attrs:{href:"#mw-head"}},[e._v("navigation")]),e._v(", "),a("a",{attrs:{href:"#p-search"}},[e._v("search")])]),e._v(" "),a("h2",{attrs:{id:"contents"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#contents"}},[e._v("#")]),e._v(" Contents")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#Overview"}},[e._v("1 Overview")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#Providing_Blueprints_With_Data_And_Critical_Timings"}},[e._v("2 Providing Blueprints With Data And Critical Timings")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#PlayerController.h"}},[e._v("3 PlayerController.h")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#.h"}},[e._v("3.1 .h")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#.cpp"}},[e._v("3.2 .cpp")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#This"}},[e._v("3.3 This")])])])]),e._v(" "),a("li",[a("a",{attrs:{href:"#Tick_Function"}},[e._v("4 Tick Function")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#Sending_Data_to_Blueprints_From_C.2B.2B"}},[e._v("5 Sending Data to Blueprints From C++")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#Calling_a_BlueprintImplementableEvent_in_Blueprints"}},[e._v("6 Calling a BlueprintImplementableEvent in Blueprints")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#4.8.2B_Standard.2C_Non_Virtual"}},[e._v("7 4.8+ Standard, Non Virtual")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#C.2B.2B_to_BP_Interface"}},[e._v("8 C++ to BP Interface")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#Debugging_BlueprintImplementableEvent"}},[e._v("9 Debugging BlueprintImplementableEvent")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#Return_Values"}},[e._v("10 Return Values")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#Blueprints_For_More_Than_Prototyping"}},[e._v("11 Blueprints For More Than Prototyping")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#Use_Blueprints_.26_BlueprintImplementableEvent_to_Empower_Your_Entire_Team"}},[e._v("12 Use Blueprints & BlueprintImplementableEvent to Empower Your Entire Team")])])]),e._v(" "),a("h2",{attrs:{id:"overview"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),a("p",[a("em",[e._v("Original Author:")]),e._v(" "),a("a",{attrs:{href:"/index.php?title=User:Rama",title:"User:Rama"}},[e._v("Rama")]),e._v(" ("),a("a",{attrs:{href:"/index.php?title=User_talk:Rama",title:"User talk:Rama"}},[e._v("talk")]),e._v(")")]),e._v(" "),a("p",[e._v("Dear Community,")]),e._v(" "),a("p",[e._v("Here is perhaps the most powerful thing you can do as a c++ programmer for blueprint programmers!")]),e._v(" "),a("p",[e._v("So you've created your awesome new amazing C++ system,")]),e._v(" "),a("p",[e._v("but "),a("strong",[e._v("how do you tell the blueprint world when critical events occur in your C++ system?")])]),e._v(" "),a("p",[e._v("You need to not only be able to have blueprint programmers call functions that use your C++ system,")]),e._v(" "),a("p",[e._v("you need to be able to spontaneously provide info to blueprint graph system, "),a("strong",[e._v("based on Run-Time events.")])]),e._v(" "),a("p",[e._v("This is where BlueprintImplementableEvents come into play!")]),e._v(" "),a("h2",{attrs:{id:"providing-blueprints-with-data-and-critical-timings"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#providing-blueprints-with-data-and-critical-timings"}},[e._v("#")]),e._v(" Providing Blueprints With Data And Critical Timings")]),e._v(" "),a("p",[e._v("Using the "),a("strong",[e._v("BlueprintImplementableEvent")]),e._v(" you can not only tell blueprints when a critical game event has occurred that your awesome C++ system is tracking / creating,")]),e._v(" "),a("p",[e._v("you can also send variable data to blueprints!")]),e._v(" "),a("p",[e._v("Example code below!")]),e._v(" "),a("h2",{attrs:{id:"playercontroller-h"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#playercontroller-h"}},[e._v("#")]),e._v(" PlayerController.h")]),e._v(" "),a("h3",{attrs:{id:"h"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#h"}},[e._v("#")]),e._v(" .h")]),e._v(" "),a("p",[e._v("/** Player's Health is Currently Above 50! Returns\nplayer's exact current health for convenience. This\nfunction runs every tick that the player's health\nis high enough! Play healthy sounds here. */\nUFUNCTION(BlueprintImplementableEvent, meta=(FriendlyName = \"Player Health ~ Player Is Healthy Tick\"))\nvoid PlayerIsHealthyTick(float CurrentHealth);")]),e._v(" "),a("h3",{attrs:{id:"cpp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cpp"}},[e._v("#")]),e._v(" .cpp")]),e._v(" "),a("p",[e._v("void AYourPlayerController::PlayerTick(float DeltaTime)\n{\nSuper::PlayerTick(DeltaTime);")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("//========================\n// \tBP Interface\nif(Health \\>= 50) \n{\n\tthis\\->PlayerIsHealthyTick(Health);\n}\n//========================\n")])])]),a("p",[e._v("}")]),e._v(" "),a("p",[a("a",{attrs:{href:"/index.php?title=File:CPPBPEvent.jpg"}},[a("img",{attrs:{src:"https://d3ar1piqh1oeli.cloudfront.net/c/cd/CPPBPEvent.jpg/800px-CPPBPEvent.jpg",alt:"CPPBPEvent.jpg"}})])]),e._v(" "),a("h3",{attrs:{id:"this"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#this"}},[e._v("#")]),e._v(" This")]),e._v(" "),a("p",[a("code",[e._v("this->PlayerIsHealthyTick(Health);")])]),e._v(" "),a("p",[e._v("I personally use this-> to tell myself I am not actually calling a C++ function, but am sending info to BP.")]),e._v(" "),a("p",[e._v("You could exclude the use of this->")]),e._v(" "),a("h2",{attrs:{id:"tick-function"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tick-function"}},[e._v("#")]),e._v(" Tick Function")]),e._v(" "),a("p",[e._v("Note that the sample code is sending an event to blueprints every tick!")]),e._v(" "),a("p",[e._v("You can call BlueprintImplementableEvent's any way you want,")]),e._v(" "),a("p",[e._v("but I used this example to show a constant interfacing from c++ to blueprint graphs.")]),e._v(" "),a("h2",{attrs:{id:"sending-data-to-blueprints-from-c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sending-data-to-blueprints-from-c"}},[e._v("#")]),e._v(" Sending Data to Blueprints From C++")]),e._v(" "),a("p",[e._v("Notice how the player's current health is being sent to blueprints as a function parameter!")]),e._v(" "),a("p",[e._v("You can pass any data you want from C++ to blueprints this way!")]),e._v(" "),a("h2",{attrs:{id:"calling-a-blueprintimplementableevent-in-blueprints"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#calling-a-blueprintimplementableevent-in-blueprints"}},[e._v("#")]),e._v(" Calling a BlueprintImplementableEvent in Blueprints")]),e._v(" "),a("p",[e._v("Make sure to include BlueprintCallable if you want to also call your event in Blueprints!")]),e._v(" "),a("p",[e._v('UFUNCTION(Category = "Player Health", BlueprintImplementableEvent, BlueprintCallable)\nvoid PlayerIsHealthyTick(float CurrentHealth);')]),e._v(" "),a("h2",{attrs:{id:"_4-8-standard-non-virtual"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-8-standard-non-virtual"}},[e._v("#")]),e._v(" 4.8+ Standard, Non Virtual")]),e._v(" "),a("p",[e._v("As of 4.8 BlueprintImplementableEvents should not be made virtual!")]),e._v(" "),a("p",[e._v("From the 4.8 Engine upgrade notes:")]),e._v(" "),a("p",[e._v('Removed "virtual" keyword from several engine-level BlueprintImplementableEvents\nto conform to the new "BlueprintImplementableEvents should not be virtual" standard.')]),e._v(" "),a("h2",{attrs:{id:"c-to-bp-interface"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-to-bp-interface"}},[e._v("#")]),e._v(" C++ to BP Interface")]),e._v(" "),a("p",[e._v("I am using the term interface loosely here, to describe how it is that you as the C++ programmer of an awesome new game mechanic can give Blueprint users all the info they need about what your C++ system is doing!")]),e._v(" "),a("p",[a("strong",[e._v("You can do all the core calculations in C++, and just send blueprint graphs the results!")])]),e._v(" "),a("h2",{attrs:{id:"debugging-blueprintimplementableevent"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#debugging-blueprintimplementableevent"}},[e._v("#")]),e._v(" Debugging BlueprintImplementableEvent")]),e._v(" "),a("p",[e._v("If you are having trouble getting a BlueprintImplementableEvent to show up in the blueprint graph, it is probably because you have a return type!")]),e._v(" "),a("p",[a("strong",[e._v("If you do have a return type")]),e._v(", your BP implementable event will show up in your bp's overrideable functions list!")]),e._v(" "),a("h2",{attrs:{id:"return-values"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#return-values"}},[e._v("#")]),e._v(" Return Values")]),e._v(" "),a("p",[e._v("If you define a C++ BlueprintImplementableEvent event with a return value, you can then override it as a function in the BP of the C++ Class to return the value!")]),e._v(" "),a("p",[e._v("UFUNCTION(BlueprintImplementableEvent)\nfloat GetBPAdjustedPlayerHealth();")]),e._v(" "),a("p",[e._v("Recall that non-const references are also return values:")]),e._v(" "),a("p",[e._v("UFUNCTION(BlueprintImplementableEvent)\nvoid GetBPAdjustedPlayerName(FString& BPModifiedName);")]),e._v(" "),a("h2",{attrs:{id:"blueprints-for-more-than-prototyping"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#blueprints-for-more-than-prototyping"}},[e._v("#")]),e._v(" Blueprints For More Than Prototyping")]),e._v(" "),a("p",[e._v("Using BlueprintImplementableEvent's I can now show you that blueprints are amazing for far more than just prototyping game logic that should then be re-written in C++.")]),e._v(" "),a("p",[e._v("Using BlueprintImplementableEvent's, you can actually "),a("strong",[e._v("build a complex low-level c++ system")]),e._v(",")]),e._v(" "),a("p",[e._v("and then provide the blueprint graphs with all the critical access points and information needed,")]),e._v(" "),a("p",[a("strong",[e._v("so that blueprints can fully extend and utilize the core C++ system!")])]),e._v(" "),a("h2",{attrs:{id:"use-blueprints-blueprintimplementableevent-to-empower-your-entire-team"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#use-blueprints-blueprintimplementableevent-to-empower-your-entire-team"}},[e._v("#")]),e._v(" Use Blueprints & BlueprintImplementableEvent to Empower Your Entire Team")]),e._v(" "),a("p",[e._v("In this way, "),a("strong",[e._v("you as a C++ programmer can empower your entire team")]),e._v(" to access, utilize, and extend a core C++ system in blueprints!")]),e._v(" "),a("p",[e._v("This is my favorite thing about the synergy of C++ with Blueprints!")]),e._v(" "),a("p",[e._v("You can write the core system in C++, and then give all of its power and new creativity to the blueprint programmers to take in all sorts of new directions!")]),e._v(" "),a("p",[e._v("Enjoy!")]),e._v(" "),a("p",[a("a",{attrs:{href:"/index.php?title=User:Rama",title:"User:Rama"}},[e._v("Rama")]),e._v(" ("),a("a",{attrs:{href:"/index.php?title=User_talk:Rama",title:"User talk:Rama"}},[e._v("talk")]),e._v(")")]),e._v(" "),a("p",[e._v('Retrieved from "'),a("a",{attrs:{href:"https://wiki.unrealengine.com/index.php?title=Blueprints,_Empower_Your_Entire_Team_With_BlueprintImplementableEvent&oldid=249",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://wiki.unrealengine.com/index.php?title=Blueprints,_Empower_Your_Entire_Team_With_BlueprintImplementableEvent&oldid=249"),a("OutboundLink")],1),e._v('"')]),e._v(" "),a("p",[a("a",{attrs:{href:"/index.php?title=Special:Categories",title:"Special:Categories"}},[e._v("Category")]),e._v(":")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"/index.php?title=Category:Code",title:"Category:Code"}},[e._v("Code")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);