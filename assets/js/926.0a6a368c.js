(window.webpackJsonp=window.webpackJsonp||[]).push([[926],{1447:function(e,t,r){"use strict";r.r(t);var o=r(28),n=Object(o.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("p",[e._v("Procedural Mesh Component in C++:Getting Started - Epic Wiki")]),e._v(" "),r("h1",{attrs:{id:"procedural-mesh-component-in-c-getting-started"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#procedural-mesh-component-in-c-getting-started"}},[e._v("#")]),e._v(" Procedural Mesh Component in C++:Getting Started")]),e._v(" "),r("p",[e._v("From Epic Wiki")]),e._v(" "),r("p",[e._v("Jump to: "),r("a",{attrs:{href:"#mw-head"}},[e._v("navigation")]),e._v(", "),r("a",{attrs:{href:"#p-search"}},[e._v("search")])]),e._v(" "),r("p",[r("a",{attrs:{href:"/index.php?title=Template:Rating&action=edit&redlink=1",title:"Template:Rating (page does not exist)"}},[e._v("Template:Rating")])]),e._v(" "),r("p",[e._v("The following is a brief guide to getting the experimental plugin \"ProceduralMeshComponent\" for procedural generation of meshes purely in C++. There doesn't seem to be any information anywhere, so I decided to put what I've done here in hopes others will extend it.")]),e._v(" "),r("p",[r("a",{attrs:{href:"/index.php?title=File:UProceduralMeshComponentGeneratedTriangle.png"}},[r("img",{attrs:{src:"https://d26ilriwvtzlb.cloudfront.net/b/bc/UProceduralMeshComponentGeneratedTriangle.png",alt:"UProceduralMeshComponentGeneratedTriangle.png"}})])]),e._v(" "),r("p",[e._v("I create a simple triangle using the UProceduralMeshComponent API, from there extending it should be easy. Once the class is compiled you can just drag it into your scene.")]),e._v(" "),r("p",[e._v("To use this component, include the paths in the build.cs file of your project:")]),e._v(" "),r("p",[e._v("MyProject.Build.cs:")]),e._v(" "),r("p",[r("syntaxhighlight",{attrs:{lang:"cpp"}},[e._v(' PublicDependencyModuleNames.AddRange(new string[] { "Core", "CoreUObject", "Engine", "InputCore", "ProceduralMeshComponent" }); ')])],1),e._v(" "),r("p",[e._v("and in your .uproject file (MyProject.uproject) in case you work on a project:")]),e._v(" "),r("syntaxhighlight",{attrs:{lang:"cpp"}},[r("p",[e._v('"AdditionalDependencies": [..., ..., "ProceduralMeshComponent"]')])]),e._v(" "),r("p",[e._v("After 4.17, plugins can now depend on other plugins, so in case you are working on a "),r("strong",[e._v("plugin")]),e._v(" instead of a project, you will have to add this to your .uplugin file:")]),e._v(" "),r("syntaxhighlight",{attrs:{lang:"cpp"}},[r("p",[e._v('"Modules": [\n{\n....\n}\n],\n"Plugins": [                       // <--\n{                                // <--\n"Name": "ProceduralMeshComponent",    // <--\n"Enabled": true                // <--\n}                                // <--\n]')])]),e._v(" "),r("p",[e._v('To fix errors with Visual Studio IntelliSense you need to right-click MyProject.uproject and re-generate Visual Studio project files. In Visual Studio 2017, open "Solution Explorer" and open the "Game" folder, right-click on the first line, which should be the root of your solution, select: "Rescan Solution".')]),e._v(" "),r("p",[e._v("I've created an Actor class.")]),e._v(" "),r("p",[e._v('Add the header to your MyActor.h file above the "MyActor.generated.h" include which has to be the last include.')]),e._v(" "),r("syntaxhighlight",{attrs:{lang:"cpp"}},[r("ol",[r("li",[e._v('include "ProceduralMeshComponent.h"')]),e._v(" "),r("li",[e._v('include "MyActor.generated.h"')])])]),e._v(" "),r("p",[e._v("In the header file, the following is added to support assigning a material.")]),e._v(" "),r("syntaxhighlight",{attrs:{lang:"cpp"}},[r("p",[e._v("private: UPROPERTY(VisibleAnywhere) UProceduralMeshComponent * mesh; ")])]),r("p"),e._v(" "),r("p",[e._v("In my cpp file I have added the following to the constructor:")]),e._v(" "),r("p",[e._v("MyActor.cpp "),r("syntaxhighlight",{attrs:{lang:"cpp"}},[e._v(" // Creating a standard root object. AMyActor::AMyActor() { mesh = CreateDefaultSubobject"),r("UProceduralMeshComponent",[e._v('(TEXT("GeneratedMesh")); RootComponent = mesh;')])],1)],1),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[e._v("   // New in UE 4.17, multi-threaded PhysX cooking.\n   mesh->bUseAsyncCooking = true;\n")])])]),r("p",[e._v("}")]),e._v(" "),r("p",[e._v("// This is called when actor is spawned (at runtime or when you drop it into the world in editor) void AMyActor::PostActorCreated() { Super::PostActorCreated(); CreateTriangle(); }")]),e._v(" "),r("p",[e._v("// This is called when actor is already in level and map is opened void AMyActor::PostLoad() { Super::PostLoad(); CreateTriangle(); }")]),e._v(" "),r("p",[e._v("void AMyActor::CreateTriangle() { TArray"),r("FVector",[e._v(" vertices; vertices.Add(FVector(0, 0, 0)); vertices.Add(FVector(0, 100, 0)); vertices.Add(FVector(0, 0, 100));")])],1),e._v(" "),r("p",[e._v("TArray"),r("int32",[e._v(" Triangles; Triangles.Add(0); Triangles.Add(1); Triangles.Add(2);")])],1),e._v(" "),r("p",[e._v("TArray"),r("FVector",[e._v(" normals; normals.Add(FVector(1, 0, 0)); normals.Add(FVector(1, 0, 0)); normals.Add(FVector(1, 0, 0));")])],1),e._v(" "),r("p",[e._v("TArray"),r("FVector2D",[e._v(" UV0; UV0.Add(FVector2D(0, 0)); UV0.Add(FVector2D(10, 0)); UV0.Add(FVector2D(0, 10));")])],1),e._v(" "),r("p",[e._v("TArray"),r("FProcMeshTangent",[e._v(" tangents; tangents.Add(FProcMeshTangent(0, 1, 0)); tangents.Add(FProcMeshTangent(0, 1, 0)); tangents.Add(FProcMeshTangent(0, 1, 0));")])],1),e._v(" "),r("p",[e._v("TArray"),r("FLinearColor",[e._v(" vertexColors; vertexColors.Add(FLinearColor(0.75, 0.75, 0.75, 1.0)); vertexColors.Add(FLinearColor(0.75, 0.75, 0.75, 1.0)); vertexColors.Add(FLinearColor(0.75, 0.75, 0.75, 1.0));")])],1),e._v(" "),r("p",[e._v("mesh->CreateMeshSection_LinearColor(0, vertices, Triangles, normals, UV0, vertexColors, tangents, true);")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[e._v("   // Enable collision data\n")])])]),r("p",[e._v("mesh->ContainsPhysicsTriMeshData(true); } ")]),e._v(" "),r("p",[e._v("The documentation for CreateMeshSection and CreateMeshSection_LinearColor functions is this:")]),e._v(" "),r("p",[r("syntaxhighlight",{attrs:{lang:"cpp"}},[e._v(" /** * Create/replace a section for this procedural mesh component. * @param SectionIndex Index of the section to create or replace. * @param Vertices Vertex buffer of all vertex positions to use for this mesh section. * @param Triangles Index buffer indicating which vertices make up each triangle. Length must be a multiple of 3. * @param Normals Optional array of normal vectors for each vertex. If supplied, must be same length as Vertices array. * @param UV0 Optional array of texture co-ordinates for each vertex. If supplied, must be same length as Vertices array. * @param VertexColors Optional array of colors for each vertex. If supplied, must be same length as Vertices array. * @param Tangents Optional array of tangent vector for each vertex. If supplied, must be same length as Vertices array. * @param bCreateCollision Indicates whether collision should be created for this section. This adds significant cost. */")])],1),e._v(" "),r("p",[e._v("// "),r("strong",[e._v("Don't use this function")]),e._v(". It is deprecated. Use LinearColor version. void CreateMeshSection(int32 SectionIndex, const TArray"),r("FVector",[e._v("& Vertices, const TArray"),r("int32",[e._v("& Triangles, const TArray"),r("FVector",[e._v("& Normals, const TArray"),r("FVector2D",[e._v("& UV0, const TArray"),r("FColor",[e._v("& VertexColors, const TArray"),r("FProcMeshTangent",[e._v("& Tangents, bool bCreateCollision);")])],1)],1)],1)],1)],1)],1),e._v(" "),r("p",[e._v("// In this one you can send FLinearColor instead of FColor for the Vertex Colors. void CreateMeshSection_LinearColor(int32 SectionIndex, const TArray"),r("FVector",[e._v("& Vertices, const TArray"),r("int32",[e._v("& Triangles, const TArray"),r("FVector",[e._v("& Normals, const TArray"),r("FVector2D",[e._v("& UV0, const TArray"),r("FLinearColor",[e._v("& VertexColors, const TArray"),r("FProcMeshTangent",[e._v("& Tangents, bool bCreateCollision)")])],1)],1)],1)],1)],1)],1),e._v(" "),r("p",[e._v("// Updates a section of this procedural mesh component. This is faster than CreateMeshSection, but does not let you change topology. Collision info is also updated. void UpdateMeshSection_LinearColor(int32 SectionIndex, const TArray"),r("FVector",[e._v("& Vertices, const TArray"),r("FVector",[e._v("& Normals, const TArray"),r("FVector2D",[e._v("& UV0, const TArray"),r("FLinearColor",[e._v("& VertexColors, const TArray"),r("FProcMeshTangent",[e._v("& Tangents);")])],1)],1)],1)],1)],1),e._v(" "),r("p",[e._v("If you have a "),r("YourGameName",[e._v('GameModeBase.cpp, make sure to add a reference to the header of the class where you added the above code, that way you will see it in your Editor in "C++ Classes" Content Browser and will be able to drag it to your scene.')])],1),e._v(" "),r("p",[e._v('Retrieved from "'),r("a",{attrs:{href:"https://wiki.unrealengine.com/index.php?title=Procedural_Mesh_Component_in_C%2B%2B:Getting_Started&oldid=119",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://wiki.unrealengine.com/index.php?title=Procedural_Mesh_Component_in_C%2B%2B:Getting_Started&oldid=119"),r("OutboundLink")],1),e._v('"')]),e._v(" "),r("p",[r("a",{attrs:{href:"/index.php?title=Special:Categories",title:"Special:Categories"}},[e._v("Categories")]),e._v(":")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"/index.php?title=Category:Tutorials&action=edit&redlink=1",title:"Category:Tutorials (page does not exist)"}},[e._v("Tutorials")])]),e._v(" "),r("li",[r("a",{attrs:{href:"/index.php?title=Category:Code",title:"Category:Code"}},[e._v("Code")])]),e._v(" "),r("li",[r("a",{attrs:{href:"/index.php?title=Category:Community_Created_Content",title:"Category:Community Created Content"}},[e._v("Community Created Content")])])])],1)}),[],!1,null,null,null);t.default=n.exports}}]);