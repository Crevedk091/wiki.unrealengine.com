(window.webpackJsonp=window.webpackJsonp||[]).push([[887],{1405:function(t,a,r){"use strict";r.r(a);var e=r(28),o=Object(e.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p",[t._v("Operator Overloads - Epic Wiki")]),t._v(" "),r("h1",{attrs:{id:"operator-overloads"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#operator-overloads"}},[t._v("#")]),t._v(" Operator Overloads")]),t._v(" "),r("p",[t._v("From Epic Wiki")]),t._v(" "),r("p",[t._v("(Redirected from "),r("a",{attrs:{href:"/index.php?title=Operator_Overloads_in_UE4_C%2B%2B&redirect=no",title:"Operator Overloads in UE4 C++"}},[t._v("Operator Overloads in UE4 C++")]),t._v(")")]),t._v(" "),r("p",[t._v("Jump to: "),r("a",{attrs:{href:"#mw-navigation"}},[t._v("navigation")]),t._v(", "),r("a",{attrs:{href:"#p-search"}},[t._v("search")])]),t._v(" "),r("h2",{attrs:{id:"contents"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#contents"}},[t._v("#")]),t._v(" Contents")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#Overview"}},[t._v("1 Overview")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#Code_Simplification"}},[t._v("1.1 Code Simplification")])])])]),t._v(" "),r("li",[r("a",{attrs:{href:"#UE4_String_Stream"}},[t._v("2 UE4 String Stream")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#Without_Custom_C.2B.2B_Operators"}},[t._v("2.1 Without Custom C++ Operators")])])])]),t._v(" "),r("li",[r("a",{attrs:{href:"#Global_Scope"}},[t._v("3 Global Scope")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#FORCEINLINE"}},[t._v("4 FORCEINLINE")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#The_C.2B.2B"}},[t._v("5 The C++")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#Summary"}},[t._v("6 Summary")])])]),t._v(" "),r("h2",{attrs:{id:"overview"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[t._v("#")]),t._v(" Overview")]),t._v(" "),r("p",[t._v("Dear Community,")]),t._v(" "),r("p",[t._v("Sooooo")]),t._v(" "),r("p",[t._v("This is one reason why I love UE4 C++ so much!")]),t._v(" "),r("p",[t._v("We can do "),r("strong",[t._v("anything")]),t._v("!")]),t._v(" "),r("p",[t._v("Below is the C++ code for making two operators that I've overloaded for use with an FString and a Float")]),t._v(" "),r("h3",{attrs:{id:"code-simplification"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#code-simplification"}},[t._v("#")]),t._v(" Code Simplification")]),t._v(" "),r("p",[t._v("This enables me to go from")]),t._v(" "),r("p",[t._v("(Str is a FString)")]),t._v(" "),r("p",[t._v("Str = FString::SanitizeFloat(TheFloat);")]),t._v(" "),r("p",[t._v("to")]),t._v(" "),r("p",[t._v("Str <<= TheFloat;")]),t._v(" "),r("h2",{attrs:{id:"ue4-string-stream"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ue4-string-stream"}},[t._v("#")]),t._v(" UE4 String Stream")]),t._v(" "),r("p",[t._v("Using the code I am sharing with you below, I can also now create a UE4 String Stream! Streaming in Float values to Str like this!")]),t._v(" "),r("p",[t._v('Str = "";\nStr << Float1 << Float2 << Float3;')]),t._v(" "),r("h3",{attrs:{id:"without-custom-c-operators"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#without-custom-c-operators"}},[t._v("#")]),t._v(" Without Custom C++ Operators")]),t._v(" "),r("p",[t._v("for reference to do the above without my operators I would have to do this")]),t._v(" "),r("p",[t._v('Str = ""\nStr += FString::SanitizeFloat(Float1);\nStr += " ";\nStr += FString::SantizeFloat(Float2);\nStr += " ";\nStr += FString::SanitizeFloat(Float3);')]),t._v(" "),r("h2",{attrs:{id:"global-scope"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#global-scope"}},[t._v("#")]),t._v(" Global Scope")]),t._v(" "),r("p",[t._v('Please note you must define the operators at the global scope, so whatever .h you put them, dont include any "::" like MyClass::etc')]),t._v(" "),r("h2",{attrs:{id:"forceinline"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#forceinline"}},[t._v("#")]),t._v(" FORCEINLINE")]),t._v(" "),r("p",[t._v("I only got the global scope operators to compile using FORCEINLINE, plus it is a good (amazing) thing to doÂ ðŸ˜ƒ")]),t._v(" "),r("p",[t._v('Look up "Inline C++ " for more info')]),t._v(" "),r("h2",{attrs:{id:"the-c"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#the-c"}},[t._v("#")]),t._v(" The C++")]),t._v(" "),r("p",[t._v('//Str float\nFORCEINLINE\tFString&\toperator<<(FString &Str, const float& Value )\n{\nif(Str.Len() > 0) Str += " ";\nStr += FString::SanitizeFloat(Value);\nreturn Str;\n}\nFORCEINLINE\tFString&\toperator<<=(FString &Str, const float& Value )\n{\nStr = FString::SanitizeFloat(Value);\nreturn Str;\n}')]),t._v(" "),r("h2",{attrs:{id:"summary"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#summary"}},[t._v("#")]),t._v(" Summary")]),t._v(" "),r("p",[t._v("With these operators in your code, no more")]),t._v(" "),r("p",[t._v("Str = FString::SanitizeFloat(TheFoat);")]),t._v(" "),r("p",[t._v("you can just do")]),t._v(" "),r("p",[t._v("Str <<= TheFloat;")]),t._v(" "),r("p",[t._v("Yay!")]),t._v(" "),r("p",[r("a",{attrs:{href:"/User:Rama",title:"User:Rama"}},[t._v("Rama")]),t._v(" ("),r("a",{attrs:{href:"/User_talk:Rama",title:"User talk:Rama"}},[t._v("talk")]),t._v(")")]),t._v(" "),r("p",[t._v('Retrieved from "'),r("a",{attrs:{href:"https://wiki.unrealengine.com/index.php?title=Operator_Overloads&oldid=2331",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://wiki.unrealengine.com/index.php?title=Operator_Overloads&oldid=2331"),r("OutboundLink")],1),t._v('"')]),t._v(" "),r("p",[r("a",{attrs:{href:"/Special:Categories",title:"Special:Categories"}},[t._v("Category")]),t._v(":")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"/Category:Code",title:"Category:Code"}},[t._v("Code")])])])])}),[],!1,null,null,null);a.default=o.exports}}]);