(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{472:function(t,e,r){"use strict";r.r(e);var n=r(28),i=Object(n.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p",[t._v("AI aiming for the lazy - Epic Wiki")]),t._v(" "),r("h1",{attrs:{id:"ai-aiming-for-the-lazy"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ai-aiming-for-the-lazy"}},[t._v("#")]),t._v(" AI aiming for the lazy")]),t._v(" "),r("p",[r("strong",[t._v("Rate this Tutorial:")])]),t._v(" "),r("p",[t._v("0.00")]),t._v(" "),r("p",[r("img",{attrs:{src:"/extensions/VoteNY/images/star_off.gif",alt:""}}),r("img",{attrs:{src:"/extensions/VoteNY/images/star_off.gif",alt:""}}),r("img",{attrs:{src:"/extensions/VoteNY/images/star_off.gif",alt:""}}),r("img",{attrs:{src:"/extensions/VoteNY/images/star_off.gif",alt:""}}),r("img",{attrs:{src:"/extensions/VoteNY/images/star_off.gif",alt:""}})]),t._v(" "),r("p",[t._v("Approved for Versions:4.10")]),t._v(" "),r("h2",{attrs:{id:"contents"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#contents"}},[t._v("#")]),t._v(" Contents")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#Overview"}},[t._v("1 Overview")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#Requirements"}},[t._v("2 Requirements")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#Getting_Started"}},[t._v("3 Getting Started")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#Setting_up_character"}},[t._v("3.1 Setting up character")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#Fire_behavior_part_1"}},[t._v("3.2 "),r("strong",[t._v("Fire")]),t._v(" behavior part 1")])])])]),t._v(" "),r("li",[r("a",{attrs:{href:"#C.2B.2B_Hardcore"}},[t._v("4 C++ Hardcore")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#Minimal_math"}},[t._v("4.1 Minimal math")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#KINSOL_library"}},[t._v("4.2 KINSOL library")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#Linking_libraries_to_our_project"}},[t._v("4.3 Linking libraries to our project")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#Actuall_C.2B.2B_hardcore"}},[t._v("4.4 Actuall C++ hardcore")])])])]),t._v(" "),r("li",[r("a",{attrs:{href:"#Tying_everything_together"}},[t._v("5 Tying everything together")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#Fire_behavior_part_2"}},[t._v("5.1 "),r("strong",[t._v("Fire")]),t._v(" behavior part 2")])])])]),t._v(" "),r("li",[r("a",{attrs:{href:"#Further_improvements"}},[t._v("6 Further improvements")])])]),t._v(" "),r("h2",{attrs:{id:"overview"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[t._v("#")]),t._v(" Overview")]),t._v(" "),r("p",[t._v("You'll learn how to implement basic aiming for your AI characters that do not require lot of math, only basic school knowledge on vectors and movement equations.")]),t._v(" "),r("p",[t._v("I wrote this tutorial with maximal clarity in mind. If you want to see main content, go to "),r("a",{attrs:{href:"#KINSOL_library"}},[t._v("KINSOL library")]),t._v(" section.")]),t._v(" "),r("p",[t._v("Names of all entities (assets, variables, components) created during tutorial given in "),r("strong",[t._v("bold")]),t._v(". Entities from FPS template have their names in "),r("em",[t._v("italic")]),t._v(".")]),t._v(" "),r("h2",{attrs:{id:"requirements"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#requirements"}},[t._v("#")]),t._v(" Requirements")]),t._v(" "),r("p",[t._v("You should be ready to get your hands dirty with some C++. Of course you'll need Visual Studio.")]),t._v(" "),r("p",[t._v("Though I'll indicate all necessary steps, but since you are here it would be more efficient to know about "),r("a",{attrs:{href:"https://docs.unrealengine.com/latest/INT/Engine/AI/BehaviorTrees/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Behavior Trees"),r("OutboundLink")],1),t._v(" and "),r("a",{attrs:{href:"https://docs.unrealengine.com/latest/INT/Engine/AI/BehaviorTrees/QuickStart/6/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("AI controllers"),r("OutboundLink")],1),t._v(".")]),t._v(" "),r("h2",{attrs:{id:"getting-started"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#getting-started"}},[t._v("#")]),t._v(" Getting Started")]),t._v(" "),r("p",[t._v("Create new project (let's call it "),r("strong",[t._v("AIAiming")]),t._v(" hereupon) from Blueprint FPS template. Described here is UE 4.10, adjust values you'll stumble on in this tutorial if your template differs.")]),t._v(" "),r("h3",{attrs:{id:"setting-up-character"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#setting-up-character"}},[t._v("#")]),t._v(" Setting up character")]),t._v(" "),r("p",[t._v("Make new folder "),r("strong",[t._v("AICharacter")]),t._v(" in "),r("a",{attrs:{href:"https://docs.unrealengine.com/latest/INT/Engine/Content/Browser/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Content Browser"),r("OutboundLink")],1),t._v(". Create three new assets there:")]),t._v(" "),r("ul",[r("li",[t._v("Blueprint "),r("strong",[t._v("Firer")]),t._v(" inherited from "),r("em",[t._v("Character")])]),t._v(" "),r("li",[t._v("Blueprint "),r("strong",[t._v("FirerController")]),t._v(" inherited from "),r("em",[t._v("AIController")])]),t._v(" "),r("li",[t._v("Behavior Tree "),r("strong",[t._v("FirerBehavior")])])]),t._v(" "),r("p",[r("a",{attrs:{href:"/File:Assets.png",title:"Created assets"}},[r("img",{attrs:{src:"https://d26ilriwvtzlb.cloudfront.net/9/92/Assets.png",alt:"Created assets"}})])]),t._v(" "),r("p",[t._v("Open "),r("strong",[t._v("Firer")]),t._v(".")]),t._v(" "),r("ul",[r("li",[t._v("Set "),r("em",[t._v("AI Controller Class")]),t._v(" to "),r("strong",[t._v("FirerController")])]),t._v(" "),r("li",[t._v("Select "),r("em",[t._v("Mesh (Inherited)")]),t._v(" component\n"),r("ul",[r("li",[t._v("Set "),r("em",[t._v("Skeletal Mesh")]),t._v(" to "),r("em",[t._v("SK_Mannequin_Arms")])]),t._v(" "),r("li",[t._v("Set "),r("em",[t._v("Anim Blueprint Class")]),t._v(" to "),r("em",[t._v("FirstPerson_AnimBP")])]),t._v(" "),r("li",[t._v("Set mesh location to (-0.51, -2.6, -155.71) and Z rotation to -10Â° (same values as in "),r("em",[t._v("FirstPersonCharacter")]),t._v(").")])])]),t._v(" "),r("li",[t._v("Add Skeletal Mesh Component "),r("strong",[t._v("Gun")]),t._v(" in Components list, grub it and attach to "),r("em",[t._v("Mesh (Inherited)")]),t._v(".")])]),t._v(" "),r("p",[r("a",{attrs:{href:"/File:Gun-component.png",title:"Gun Component"}},[r("img",{attrs:{src:"https://d26ilriwvtzlb.cloudfront.net/0/00/Gun-component.png",alt:"Gun Component"}})])]),t._v(" "),r("ul",[r("li",[t._v("Set Skeletal Mesh for "),r("strong",[t._v("Gun")]),t._v(" to "),r("em",[t._v("SK_FPGun")]),t._v(".")]),t._v(" "),r("li",[t._v("Setup following Construction Script (references to components are created by simple drug'n'drop from components list):")])]),t._v(" "),r("p",[r("a",{attrs:{href:"/File:Firer-construction-script.png",title:"Firer Construction Script"}},[r("img",{attrs:{src:"https://d26ilriwvtzlb.cloudfront.net/4/45/Firer-construction-script.png",alt:"Firer Construction Script"}})])]),t._v(" "),r("ul",[r("li",[t._v("Create vector variable "),r("strong",[t._v("GunOffset")]),t._v(" with default value (100, 33, 10) (again copy-paste from "),r("em",[t._v("FirstPersonCharacter")]),t._v(")")])]),t._v(" "),r("p",[r("a",{attrs:{href:"/File:Firer-gun-offset.png",title:"Firer GunOffset variable"}},[r("img",{attrs:{src:"https://d26ilriwvtzlb.cloudfront.net/2/23/Firer-gun-offset.png",alt:"Firer GunOffset variable"}})])]),t._v(" "),r("p",[t._v("Your character should look something like this:")]),t._v(" "),r("p",[r("a",{attrs:{href:"/File:Firer.png",title:"Firer blueprint"}},[r("img",{attrs:{src:"https://d26ilriwvtzlb.cloudfront.net/8/84/Firer.png",alt:"Firer blueprint"}})])]),t._v(" "),r("ul",[r("li",[t._v("Reproduce following Event Graph:")])]),t._v(" "),r("p",[r("a",{attrs:{href:"/File:Firer-event-graph.png",title:"Firer Event Graph"}},[r("img",{attrs:{src:"https://d26ilriwvtzlb.cloudfront.net/c/c5/Firer-event-graph.png",alt:"Firer Event Graph"}})])]),t._v(" "),r("p",[t._v("It's almost copy-paste from "),r("em",[t._v("FirstPersonCharacter")]),t._v(". We deleted input events, replaced mesh reference, replaced "),r("em",[t._v("GetControlRotation")]),t._v(" with "),r("em",[t._v("GetActorRotation")]),t._v(" and created custom event (RMB->Add Event->Add Custom Event...) "),r("strong",[t._v("FireProjectile")]),t._v(".")]),t._v(" "),r("p",[t._v("Open "),r("strong",[t._v("FirerController")])]),t._v(" "),r("ul",[r("li",[t._v("Setup following minimal Event Graph:")])]),t._v(" "),r("p",[r("a",{attrs:{href:"/File:Firer-controller-event-graph.png",title:"FirerController Event Graph"}},[r("img",{attrs:{src:"https://d26ilriwvtzlb.cloudfront.net/1/15/Firer-controller-event-graph.png",alt:"FirerController Event Graph"}})])]),t._v(" "),r("h3",{attrs:{id:"fire-behavior-part-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#fire-behavior-part-1"}},[t._v("#")]),t._v(" "),r("strong",[t._v("Fire")]),t._v(" behavior part 1")]),t._v(" "),r("p",[t._v("Open "),r("strong",[t._v("FirerBehavior")]),t._v(". Create new Task, rename it to "),r("strong",[t._v("Fire")]),t._v(" and open for editing.")]),t._v(" "),r("p",[r("a",{attrs:{href:"/File:Create-task.png",title:"Create task"}},[r("img",{attrs:{src:"https://d26ilriwvtzlb.cloudfront.net/3/3a/Create-task.png",alt:"Create task"}})])]),t._v(" "),r("p",[t._v("Create "),r("strong",[t._v("Target offset")]),t._v(" vector variable. It will specify offset from player character (it's pivot point if to be precise) location to point we want to hit. If for example our player mesh was full-blown humanoid mannequin, we would've liked to hit exactly in the head and "),r("strong",[t._v("Target offset")]),t._v(" would've specified vector from character's location to character mesh's head. Since we only have hands, we make our firer aim exactly at the camera. You can measure offset using ruler (middle mouse button):")]),t._v(" "),r("p",[r("a",{attrs:{href:"/File:Ruler.png",title:"Ruler tool"}},[r("img",{attrs:{src:"https://d26ilriwvtzlb.cloudfront.net/a/aa/Ruler.png",alt:"Ruler tool"}})])]),t._v(" "),r("p",[t._v("In our case camera is perfectly aligned to pivot point except for Z coordinate, so "),r("strong",[t._v("Target offset")]),t._v(" will be:")]),t._v(" "),r("p",[r("a",{attrs:{href:"/File:Target-offset.png",title:"TargetOffset variable"}},[r("img",{attrs:{src:"https://d26ilriwvtzlb.cloudfront.net/2/2f/Target-offset.png",alt:"TargetOffset variable"}})])]),t._v(" "),r("p",[t._v("Override "),r("em",[t._v("Receive Execute")]),t._v(" and reproduce following graph:")]),t._v(" "),r("p",[r("a",{attrs:{href:"/File:Fire-partial-event-graph.png",title:"Partial Event Graph of Fire task"}},[r("img",{attrs:{src:"https://d26ilriwvtzlb.cloudfront.net/c/c3/Fire-partial-event-graph.png",alt:"Partial Event Graph of Fire task"}})])]),t._v(" "),r("p",[t._v("It incomplete, but we will return to it when C++ part is ready.")]),t._v(" "),r("h2",{attrs:{id:"c-hardcore"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#c-hardcore"}},[t._v("#")]),t._v(" C++ Hardcore")]),t._v(" "),r("p",[t._v("Go to "),r("em",[t._v("File")]),t._v(" -> "),r("em",[t._v("New C++ Class ...")]),t._v(" and select "),r("em",[t._v("Blueprint Function Library")]),t._v(" as parent class. I named it "),r("strong",[t._v("FiringLibrary")]),t._v(" (banal to the end), but it doesn't really matter. Since it's first C++ class in our game, editor will take some time to create, build and open project for Visual Studio. For now just leave it there, we will return to it a bit later.")]),t._v(" "),r("h3",{attrs:{id:"minimal-math"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#minimal-math"}},[t._v("#")]),t._v(" Minimal math")]),t._v(" "),r("p",[t._v("So how are we going to aim? Let's remember some school physics. Our target (possible offseted) current location is _"),r("strong",[t._v("P")]),t._v("_T, and it moves with speed _"),r("strong",[t._v("V")]),t._v("_T, so in "),r("em",[t._v("t")]),t._v(" seconds it will be at")]),t._v(" "),r("p",[t._v("_"),r("strong",[t._v("P")]),t._v("_T + _"),r("strong",[t._v("V")]),t._v("_T * "),r("em",[t._v("t")]),t._v(".")]),t._v(" "),r("p",[t._v("("),r("em",[t._v("t")]),t._v(" is a variable, we'll have to compute it). Our projectile in "),r("em",[t._v("t")]),t._v(" seconds will be at")]),t._v(" "),r("p",[t._v("_"),r("strong",[t._v("P")]),t._v("_P + _"),r("strong",[t._v("V")]),t._v("_P * "),r("em",[t._v("t")]),t._v(" + "),r("em",[r("strong",[t._v("g")])]),t._v(" * _t_2 / 2")]),t._v(" "),r("p",[t._v("_"),r("strong",[t._v("P")]),t._v("_P is a location where projectile will be created, _"),r("strong",[t._v("V")]),t._v("_P - it's speed and "),r("em",[r("strong",[t._v("g")])]),t._v(" - gravity vector ((0, 0, -980) by default in UE4 because all lengths are in centimeters). We want for our projectile to meet target, so their locations should be equal:")]),t._v(" "),r("p",[t._v("_"),r("strong",[t._v("P")]),t._v("_T + _"),r("strong",[t._v("V")]),t._v("_T * "),r("em",[t._v("t")]),t._v(" = _"),r("strong",[t._v("P")]),t._v("_P + _"),r("strong",[t._v("V")]),t._v("_P * "),r("em",[t._v("t")]),t._v(" + "),r("em",[r("strong",[t._v("g")])]),t._v(" * _t_2 / 2")]),t._v(" "),r("p",[t._v("or")]),t._v(" "),r("p",[t._v("_"),r("strong",[t._v("P")]),t._v("_T + _"),r("strong",[t._v("V")]),t._v("_T * "),r("em",[t._v("t")]),t._v(" - _"),r("strong",[t._v("P")]),t._v("_P - _"),r("strong",[t._v("V")]),t._v("_P * "),r("em",[t._v("t")]),t._v(" - "),r("em",[r("strong",[t._v("g")])]),t._v(" * _t_2 / 2 = "),r("em",[r("strong",[t._v("0")])])]),t._v(" "),r("p",[t._v("It's a system of three nonlinear equations. If our firer stand in one place we have three variables:")]),t._v(" "),r("ol",[r("li",[t._v("time "),r("em",[t._v("t")]),t._v(" > 0")]),t._v(" "),r("li",[t._v("-180 < "),r("em",[t._v("yaw")]),t._v(" < 180")]),t._v(" "),r("li",[t._v("-90 < "),r("em",[t._v("pitch")]),t._v(" < 90")])]),t._v(" "),r("p",[t._v("So you can go and solve it, arriving at general quartic equation (with sines and cosines!) and feeling the fear from it's "),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Quartic_function#/media/File:Quartic_Formula.svg",target:"_blank",rel:"noopener noreferrer"}},[t._v("general solution"),r("OutboundLink")],1),t._v(". You can try different approximations as "),r("a",{attrs:{href:"http://www.gamasutra.com/blogs/KainShin/20090515/83954/Predictive_Aim_Mathematics_for_AI_Targeting.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("this"),r("OutboundLink")],1),t._v(" guy did, but I'm too lazy for such things and going to make computer solve it for me.")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://d26ilriwvtzlb.cloudfront.net/a/a5/Icon_template_note1.png",alt:"Note"}}),t._v(" We don't really care for time "),r("em",[t._v("t")]),t._v(", but it's computation is unavoidable consequence of current problem formulation. It's possible to get rid of it, but won't make problem easier.")]),t._v(" "),r("h3",{attrs:{id:"kinsol-library"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#kinsol-library"}},[t._v("#")]),t._v(" KINSOL library")]),t._v(" "),r("p",[t._v("(I describe building process for Windows. Can't help poor souls with MacOS. Smarties with linux should be able to build everything themselves because hey, you've installed linux!)")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://computation.llnl.gov/casc/sundials/description/description.html#descr_kinsol",target:"_blank",rel:"noopener noreferrer"}},[t._v("KINSOL"),r("OutboundLink")],1),t._v(' "is a solver for nonlinear algebraic systems". It is OSS released under a '),r("a",{attrs:{href:"http://computation.llnl.gov/casc/sundials/download/license.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("BSD license"),r("OutboundLink")],1),t._v(" which means you only can't call their code yours. "),r("a",{attrs:{href:"http://computation.llnl.gov/casc/sundials/download/download.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("Download"),r("OutboundLink")],1),t._v(" it (only KINSOL is needed. You will be asked for email but that's only a formality).")]),t._v(" "),r("p",[t._v("Install "),r("a",{attrs:{href:"https://cmake.org/download/",target:"_blank",rel:"noopener noreferrer"}},[t._v("CMake"),r("OutboundLink")],1),t._v(' (grub simpliest win32 exe installer, no need to go fancy). Make sure you checked the box "Add CMake to the system '),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/PATH_(variable)#DOS.2C_OS.2F2.2C_and_Windows",target:"_blank",rel:"noopener noreferrer"}},[t._v("PATH"),r("OutboundLink")],1),t._v('" (for current user would be enough) during installation.')]),t._v(" "),r("p",[t._v("Create folder "),r("strong",[t._v("C:\\path\\to\\your\\project\\AIAiming\\ThirdParty\\kinsol")]),t._v(". We will install library here.")]),t._v(" "),r("p",[t._v("From archive you've downloaded erlier unpack whole folder "),r("strong",[t._v("kinsol-"),r("em",[t._v("version")])]),t._v(" somewhere (precise location doesn't matter, you can delete folder after building). Create "),r("strong",[t._v("kinsol-build")]),t._v(" near it so you have structure:")]),t._v(" "),r("p",[t._v("some folder\\\nkinsol-"),r("em",[t._v("version")]),t._v("\nkinsol-build")]),t._v(" "),r("p",[t._v("Everything ready, let's build this baby!")]),t._v(" "),r("ul",[r("li",[t._v("Run cmd (from Start of Win+R).")]),t._v(" "),r("li",[t._v("Enter command "),r("strong",[t._v('cd "C:\\full\\path\\to\\some foler\\kinsol-build"')])]),t._v(" "),r("li",[t._v("Enter command "),r("strong",[t._v("cmake-gui ..\\kinsol-"),r("em",[t._v("version")])])]),t._v(" "),r("li",[t._v("Click "),r("strong",[t._v("Configure")]),t._v(" button in appeared window")]),t._v(" "),r("li",[t._v("Select "),r("em",[t._v("Visual Studio 14 2015 Win64")]),t._v(" from generator list")])]),t._v(" "),r("p",[r("a",{attrs:{href:"/File:Configure.png",title:"CMake configure"}},[r("img",{attrs:{src:"https://d26ilriwvtzlb.cloudfront.net/5/5a/Configure.png",alt:"CMake configure"}})])]),t._v(" "),r("ul",[r("li",[t._v("Do not panic because of all the red")]),t._v(" "),r("li",[r("em",[t._v("BUILD_KINSOL")]),t._v(" and "),r("em",[t._v("BUILD_STATIC_LIBS")]),t._v(" boxes must be checked, every else unchecked.")]),t._v(" "),r("li",[t._v("Change "),r("em",[t._v("CMAKE_CONFIGURATION_TYPES")]),t._v(" value to "),r("em",[t._v("Release")])]),t._v(" "),r("li",[t._v("Change "),r("em",[t._v("CMAKE_INSTALL_PREFIX")]),t._v(" to "),r("strong",[t._v("C:\\path\\to\\your\\project\\AIAiming\\ThirdParty\\kinsol")])]),t._v(" "),r("li",[t._v("Change "),r("em",[t._v("SUNDIALS_PRECISION")]),t._v(" to "),r("em",[t._v("single")]),t._v(" (double is useless because all computations inside UE use floats)")])]),t._v(" "),r("p",[r("a",{attrs:{href:"/File:Kinsol-build-configuration.png",title:"KINSOL build configuration"}},[r("img",{attrs:{src:"https://d26ilriwvtzlb.cloudfront.net/d/d8/Kinsol-build-configuration.png",alt:"KINSOL build configuration"}})])]),t._v(" "),r("ul",[r("li",[t._v("Hit "),r("em",[t._v("Generate")]),t._v(" button and close the window when done")]),t._v(" "),r("li",[t._v("There will appear several VS projects in "),r("strong",[t._v("kinsol-build")]),t._v(", you need to open "),r("em",[t._v("sundials")]),t._v(" solution")]),t._v(" "),r("li",[t._v("Build "),r("em",[t._v("ALL_BUILD")]),t._v(" project.")]),t._v(" "),r("li",[t._v("Build "),r("em",[t._v("INSTALL")]),t._v(" project")])]),t._v(" "),r("p",[t._v("If all went well built libraries should appear with C++ headers in "),r("strong",[t._v("C:\\path\\to\\your\\project\\AIAiming\\ThirdParty\\kinsol")]),t._v(".")]),t._v(" "),r("p",[t._v("We don't need "),r("strong",[t._v("kinsol-build")]),t._v(" and "),r("strong",[t._v("kinsol-"),r("em",[t._v("version")])]),t._v(" anymore, you can delete them.")]),t._v(" "),r("h3",{attrs:{id:"linking-libraries-to-our-project"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#linking-libraries-to-our-project"}},[t._v("#")]),t._v(" Linking libraries to our project")]),t._v(" "),r("p",[t._v("(Huge gratitude to author of "),r("a",{attrs:{href:"/Linking_Static_Libraries_Using_The_Build_System",title:"Linking Static Libraries Using The Build System"}},[t._v("tutorial")]),t._v(" for linking)")]),t._v(" "),r("p",[t._v("Let's return to our game's project in Visual Studio. You can read article mentioned above to understand what's going on or simply open "),r("strong",[t._v("AIAiming.Build.cs")]),t._v(", add following code to body of "),r("strong",[t._v("AIAiming")]),t._v(" class")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[t._v("private string ModulePath\n{\n    get { return Path.GetDirectoryName(RulesCompiler.GetModuleFilename(this.GetType().Name)); }\n}\n")])])]),r("p",[t._v('private string ThirdPartyPath\n{\nget { return Path.GetFullPath(Path.Combine(ModulePath, "../../ThirdParty/")); }\n}\nÂ \npublic bool LoadKinsol(TargetInfo Target)\n{\nbool isLibrarySupported = false;\nÂ \nif ((Target.Platform == UnrealTargetPlatform.Win64) || (Target.Platform == UnrealTargetPlatform.Win32))\n{\nisLibrarySupported = true;\nstring LibrariesPath = Path.Combine(ThirdPartyPath, "kinsol", "lib");\nÂ \nPublicAdditionalLibraries.Add(Path.Combine(LibrariesPath, "sundials_kinsol.lib"));\nPublicAdditionalLibraries.Add(Path.Combine(LibrariesPath, "sundials_nvecserial.lib"));\n}\nÂ \nif (isLibrarySupported)\n{\n// Include path\nPublicIncludePaths.Add(Path.Combine(ThirdPartyPath, "kinsol", "include"));\n}\nÂ \nDefinitions.Add(string.Format("WITH_KINSOL_BINDING={0}", isLibrarySupported ? 1 : 0));\nÂ \nreturn isLibrarySupported;\n}')]),t._v(" "),r("p",[t._v("and following line to the end of "),r("strong",[t._v("AIAiming(TargetInfo Target)")]),t._v(" constructor")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[t._v("    LoadKinsol(Target);\n")])])]),r("p",[t._v("and following")]),t._v(" "),r("p",[t._v("using System.IO;")]),t._v(" "),r("p",[t._v("after")]),t._v(" "),r("p",[t._v("using UnrealBuildTool;")]),t._v(" "),r("p",[t._v("This code will tell the engine to link libraries during compilation.")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://d26ilriwvtzlb.cloudfront.net/a/a5/Icon_template_note1.png",alt:"Note"}}),t._v(" Libraries built this way will only work for x64 builds of your game, but if you care it's likely you already know how to fix it.")]),t._v(" "),r("h3",{attrs:{id:"actuall-c-hardcore"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#actuall-c-hardcore"}},[t._v("#")]),t._v(" Actuall C++ hardcore")]),t._v(" "),r("p",[t._v("OK. This time for real. Open header of your blueprint library and add following function declaration to your class:")]),t._v(" "),r("p",[t._v("UFUNCTION(BlueprintCallable, Category = \"Ballistics\")\nstatic bool ComputeFiringRotation(const AActor* ''t''arget, const FVector& targetOffset, const AActor* firer, const FVector& gunOffset, float projectileSpeed, FRotator& firingRotation);")]),t._v(" "),r("p",[t._v("This function will try to solve equations. It will pass computed rotation to blueprint in "),r("strong",[t._v("firingRotation")]),t._v(" reference and boolean return value will indicate if computation was successful (it may be not).")]),t._v(" "),r("p",[t._v("Switch to "),r("strong",[t._v("FiringLibrary.cpp")]),t._v(".")]),t._v(" "),r("ul",[r("li",[t._v("Add necessary includes:")])]),t._v(" "),r("p",[t._v("#include <kinsol/kinsol.h>\n#include <kinsol/kinsol_dense.h>\n#include <nvector/nvector_serial.h>\n#include <sundials/sundials"),r("sub",[t._v("T")]),t._v("ypes.h>\n#include <sundials/sundials_math.h>")]),t._v(" "),r("ul",[r("li",[t._v("Declare struct that will keep necessary data to compute equations")])]),t._v(" "),r("p",[t._v("struct FiringData {\nÂ \nFiringData(const AActor* ''t''arget,\nconst AActor* firer, const FVector& gunOffset,\nfloat projectileSpeed)\n: targetLocation(target->GetActorLocation())\n, targetVelocity(target->GetVelocity())\n, firerLocation(firer->GetActorLocation())\n, gunOffset(gunOffset)\n, projectileSpeed(projectileSpeed)\n, g(FVector(0, 0, firer->GetWorld()->GetWorldSettings()->GetGravityZ()))\n{}\nÂ \nFVector targetLocation;\nFVector targetVelocity;\nFVector firerLocation;\nFVector gunOffset;\nfloat projectileSpeed;\nFVector g;\n};")]),t._v(" "),r("ul",[r("li",[t._v("Declare function that computes our equations (it will be called by KINSOL)")])]),t._v(" "),r("p",[t._v("// x are current values of variables and library expect us to put equations' values in f\n// userData is arbitrary data that we want to use in computations.\n// We have to specify it to library by calling KINSetUserData()\n// In our case we specify userData to point at FiringData struct.\nint F(N_Vector x, N_Vector f, void* userData) {\nfloat t = NV_Ith_S(x, 0);\nfloat yaw = NV_Ith_S(x, 1);\nfloat pitch = NV_Ith_S(x, 2);\nauto rotator = FRotator(pitch, yaw, 0);\nÂ \nauto firingData = (FiringData*)userData;\nÂ \nÂ \nauto p1 = firingData->targetLocation + firingData->targetVelocity*t;\nÂ \nauto projectileStartingLocation = firingData->firerLocation + rotator.RotateVector(firingData->gunOffset);\nauto projectileVelocity = rotator.RotateVector(FVector::ForwardVector * firingData->projectileSpeed);\nauto p2 = projectileStartingLocation + velocity * ''t'' + firingData->g * ''t'' * ''t'' / 2;\nÂ \nauto eq = p1 - p2;\nÂ \nNV_Ith_S(f, 0) = eq.X;\nNV_Ith_S(f, 1) = eq.Y;\nNV_Ith_S(f, 2) = eq.Z;\nÂ \nreturn 0;\n}")]),t._v(" "),r("p",[r("strong",[t._v("p1")]),t._v(" is expected target location, "),r("strong",[t._v("p2")]),t._v(" is expected projectile position. Computation of "),r("strong",[t._v("projectileStartingLocation")]),t._v(" and "),r("strong",[t._v("projectileVelocity")]),t._v(" follows from the way we spawn projectile. They are virtually the same as ones from "),r("em",[t._v("Spawn projectile")]),t._v(" box in "),r("strong",[t._v("Firer")]),t._v(".")]),t._v(" "),r("p",[t._v("Returning 0 indicates that computations went smooth. If something breaks during execution of your variant of function return non-zero value.")]),t._v(" "),r("p",[t._v("Finally all preparations done and we can write out the function we are here for:")]),t._v(" "),r("p",[t._v("bool UFiringLibrary::ComputeFiringRotation(const AActor* ''t''arget, const FVector& targetOffset,\nconst AActor* firer, const FVector& gunOffset,\nfloat projectileSpeed, FRotator& firingRotation) {\nÂ \n// Number of equations\nconst int N = 3;\nÂ \n// x is our initial guess on variables of equation.\nauto x = N_VNew_Serial(N);\nif (x == nullptr) return false;\n// I guessed projectile will hit target after one second.\nNV_Ith_S(x, 0) = 1;\n// Guess for rotation is simply current firer rotation.\nNV_Ith_S(x, 1) = firer->GetActorRotation().Yaw;\nNV_Ith_S(x, 2) = firer->GetActorRotation().Pitch;\nÂ \n// Scale of equations' variables. Scaling them may help with speed of solving,\n// but find solutions far from initial values.\nauto scale = N_VNew_Serial(N);\nif (scale == nullptr) return false;\nN_VConst_Serial(1, scale); // no scaling\nÂ \n// Constraints on equations' variables\nauto constraints = N_VNew_Serial(N);\nif (constraints == nullptr) return false;\nÂ \n// 0.0 means no constraints on variable\n// -1.0, 1.0 means <= 0 or >= 0 constraints correspondingly\n// -2.0, 2.0 means < 0 or > 0 constraints correspondingly\nNV_Ith_S(constraints, 0) = 2.0f; // t > 0\nNV_Ith_S(constraints, 1) = 0; // no constraints on yaw\nNV_Ith_S(constraints, 2) = 0; // no constraints on pitch\nÂ \n// handler for KINSOL library\nauto kinsolMemory = KINCreate();\nif (kinsolMemory == nullptr) return false;\nÂ \n// setting pointer to userData for use in our F function\nFiringData firingData(target, targetOffset, firer, gunOffset, projectileSpeed);\nint flag = KINSetUserData(kinsolMemory, &firingData);\nif (flag < 0) return false;\nÂ \n// setting up constraints\nflag = KINSetConstraints(kinsolMemory, constraints);\nif (flag < 0) return false;\nÂ \n// We want our equations be this (1.0f) close to zeros. 1 cm is pretty good precision.\nflag = KINSetFuncNormTol(kinsolMemory, 1.0f);\nif (flag < 0) return false;\n// Stop if difference in consecutive values of variables this (1e-5f) small.\nflag = KINSetScaledStepTol(kinsolMemory, 1e-5f);\nif (flag < 0) return false;\nÂ \n// specifying our equations' function\nflag = KINInit(kinsolMemory, F, x);\nif (flag < 0) return false;\nÂ \n// initializing the simplest available solver\nflag = KINDense(kinsolMemory, N);\nif (flag < 0) return false;\nÂ \n// little magic\nflag = KINSetMaxSetupCalls(kinsolMemory, 1);\nif (flag < 0) return false;\nÂ \n// actually solving equations\nflag = KINSol(kinsolMemory, x, KIN_LINESEARCH, scale, scale);\nif (flag < 0) return false;\nÂ \n// getting solution rotations\nfiringRotation = FRotator(NV_Ith_S(x, 2), NV_Ith_S(x, 1), 0);\nÂ \nbool success = false;\nswitch (flag)\n{\ncase KIN_SUCCESS:\ncase KIN_INITIAL_GUESS_OK:\n// equations were successfully solved\nsuccess = true;\nbreak;\ncase KIN_STEP_LT_STPTOL:\n// algorithm finished correctly but no good solution were found\nbreak;\ndefault:\nÂ \nbreak;\n}\nÂ \n// releasing memory\nN_VDestroy_Serial(x);\nN_VDestroy_Serial(scale);\nN_VDestroy_Serial(constraints);\nKINFree(&kinsolMemory);\nÂ \nreturn success;\n}")]),t._v(" "),r("p",[t._v("Build project. We're done with code part.")]),t._v(" "),r("h2",{attrs:{id:"tying-everything-together"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tying-everything-together"}},[t._v("#")]),t._v(" Tying everything together")]),t._v(" "),r("h3",{attrs:{id:"fire-behavior-part-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#fire-behavior-part-2"}},[t._v("#")]),t._v(" "),r("strong",[t._v("Fire")]),t._v(" behavior part 2")]),t._v(" "),r("p",[t._v("Complete our "),r("strong",[t._v("Fire")]),t._v(" task Event Graph:")]),t._v(" "),r("p",[r("a",{attrs:{href:"/File:Fire-full-event-graph.png",title:"Full Event Graph of Fire task"}},[r("img",{attrs:{src:"https://d26ilriwvtzlb.cloudfront.net/c/c6/Fire-full-event-graph.png",alt:"Full Event Graph of Fire task"}})])]),t._v(" "),r("p",[t._v("Functionality is pretty straightforward - if necessary rotation was successfully computed we rotate our firer to it and emitting "),r("strong",[t._v("FireProjectile")]),t._v(" event. Projectile speed is taken from "),r("em",[t._v("FirstPersonProjectile")]),t._v(" blueprint.")]),t._v(" "),r("p",[t._v("At last create following structure in "),r("strong",[t._v("FirerBehavior")]),t._v(" Behavior Tree:")]),t._v(" "),r("p",[r("a",{attrs:{href:"/File:Firer-behavior-tree.png",title:"Firer Behavior Tree"}},[r("img",{attrs:{src:"https://d26ilriwvtzlb.cloudfront.net/c/c2/Firer-behavior-tree.png",alt:"Firer Behavior Tree"}})])]),t._v(" "),r("p",[t._v("You can now place our "),r("strong",[t._v("Firer")]),t._v(" character somewhere on the map and try out it's aiming:")]),t._v(" "),r("p",[r("a",{attrs:{href:"/File:Demonstration.png",title:"Aiming"}},[r("img",{attrs:{src:"https://d26ilriwvtzlb.cloudfront.net/0/05/Demonstration.png",alt:"Aiming"}})])]),t._v(" "),r("h2",{attrs:{id:"further-improvements"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#further-improvements"}},[t._v("#")]),t._v(" Further improvements")]),t._v(" "),r("p",[t._v("The very first enhancement you should think about is gradual rotation. Right now our firer changes it's rotation instantly. But then you have to consider time required to rotate to given angles in equations.")]),t._v(" "),r("p",[t._v("After it you'll probably like to move your firer around, but then you'll have more variables than equations and it will no longer be system of equations solving problem, but an "),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Mathematical_optimization",target:"_blank",rel:"noopener noreferrer"}},[t._v("optimization"),r("OutboundLink")],1),t._v(" problem. But you're lucky because "),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Comparison_of_optimization_software",target:"_blank",rel:"noopener noreferrer"}},[t._v("there are"),r("OutboundLink")],1),t._v(" a lot more optimization libraries than nonlinear equations solvers.")]),t._v(" "),r("p",[t._v('Retrieved from "'),r("a",{attrs:{href:"https://wiki.unrealengine.com/index.php?title=AI_aiming_for_the_lazy&oldid=16988",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://wiki.unrealengine.com/index.php?title=AI_aiming_for_the_lazy&oldid=16988"),r("OutboundLink")],1),t._v('"')]),t._v(" "),r("p",[r("a",{attrs:{href:"/Special:Categories",title:"Special:Categories"}},[t._v("Category")]),t._v(":")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"/Category:Tutorials",title:"Category:Tutorials"}},[t._v("Tutorials")])])]),t._v(" "),r("p",[t._v("Hidden category:")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"/Category:Templates",title:"Category:Templates"}},[t._v("Templates")])])]),t._v(" "),r("p",[r("img",{attrs:{src:"https://tracking.unrealengine.com/track.png",alt:""}})])])}),[],!1,null,null,null);e.default=i.exports}}]);