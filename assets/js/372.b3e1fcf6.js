(window.webpackJsonp=window.webpackJsonp||[]).push([[372],{759:function(e,t,n){"use strict";n.r(t);var i=n(28),a=Object(i.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[e._v("Config Files, Read & Write to Config Files - Epic Wiki")]),e._v(" "),n("h1",{attrs:{id:"config-files-read-write-to-config-files"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#config-files-read-write-to-config-files"}},[e._v("#")]),e._v(" Config Files, Read & Write to Config Files")]),e._v(" "),n("p",[n("strong",[e._v("Rate this Article:")])]),e._v(" "),n("p",[e._v("4.00")]),e._v(" "),n("p",[n("img",{attrs:{src:"/extensions/VoteNY/images/star_on.gif",alt:""}}),n("img",{attrs:{src:"/extensions/VoteNY/images/star_on.gif",alt:""}}),n("img",{attrs:{src:"/extensions/VoteNY/images/star_on.gif",alt:""}}),n("img",{attrs:{src:"/extensions/VoteNY/images/star_on.gif",alt:""}}),n("img",{attrs:{src:"/extensions/VoteNY/images/star_off.gif",alt:""}}),e._v(" (2 votes)")]),e._v(" "),n("p",[e._v("Approved for Versions:4.0+")]),e._v(" "),n("h2",{attrs:{id:"contents"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#contents"}},[e._v("#")]),e._v(" Contents")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#Overview"}},[e._v("1 Overview")])]),e._v(" "),n("li",[n("a",{attrs:{href:"#ConfigCacheIni.h"}},[e._v("2 ConfigCacheIni.h")])]),e._v(" "),n("li",[n("a",{attrs:{href:"#Code_Samples"}},[e._v("3 Code Samples")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#Reading_From_Config_File"}},[e._v("3.1 Reading From Config File")])]),e._v(" "),n("li",[n("a",{attrs:{href:"#Writing_to_Config_File"}},[e._v("3.2 Writing to Config File")])])])]),e._v(" "),n("li",[n("a",{attrs:{href:"#Of_Great_Importance"}},[e._v("4 Of Great Importance")])]),e._v(" "),n("li",[n("a",{attrs:{href:"#Conclusion"}},[e._v("5 Conclusion")])])]),e._v(" "),n("h2",{attrs:{id:"overview"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),n("p",[e._v("Dear Community,")]),e._v(" "),n("p",[e._v("In this tutorial I am showing you working code samples you can plug into your player controller class (or any class if you remove the ClientMessage() parts).")]),e._v(" "),n("p",[e._v("In these samples I retrieve various bits of information, including the Near Clip Pane value, from the Game and Engine inis, and I also write a new section into the Game.ini called Victory.Core and store some data there.")]),e._v(" "),n("p",[n("strong",[e._v("The main advantage of config files is that the user can go in and edit the data in a human-readible format any time they want!")])]),e._v(" "),n("p",[e._v("Please note that when you write out info to config files, the data is not stored in YourGame\\Config where the defaultconfig files are.")]),e._v(" "),n("p",[e._v("Your data will be written to")]),e._v(" "),n("p",[e._v("YourGame\\Saved\\Config\\Windows")]),e._v(" "),n("p",[e._v("Here's were you can edit the data outside your game and then launch your game and read that changed data into your game systemÂ ðŸ˜ƒ")]),e._v(" "),n("p",[e._v("Enjoy!")]),e._v(" "),n("h2",{attrs:{id:"configcacheini-h"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#configcacheini-h"}},[e._v("#")]),e._v(" ConfigCacheIni.h")]),e._v(" "),n("p",[e._v("Check out this header for all the function definitions and options available to you, for writing out arrays or reading in entire file as a FString, many, many useful functions")]),e._v(" "),n("h2",{attrs:{id:"code-samples"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#code-samples"}},[e._v("#")]),e._v(" Code Samples")]),e._v(" "),n("p",[e._v("Quoting Solid Snake:")]),e._v(" "),n("p",[e._v('" There is a bunch of globals that you can use here to quickly grab the core configuration files:')]),e._v(" "),n("ul",[n("li",[e._v("GEngineIni")]),e._v(" "),n("li",[e._v("GInputIni")]),e._v(" "),n("li",[e._v("GGameIni")]),e._v(" "),n("li",[e._v("GGameUserSettingsIni")])]),e._v(" "),n("p",[e._v('"')]),e._v(" "),n("p",[e._v("This is very useful info!")]),e._v(" "),n("p",[e._v("You will see in the functions below I rely on these global FStrings to more quickly write out the filename function parameter")]),e._v(" "),n("h3",{attrs:{id:"reading-from-config-file"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#reading-from-config-file"}},[e._v("#")]),e._v(" Reading From Config File")]),e._v(" "),n("p",[e._v('//in your player controller class\nvoid AVictoryController::VictoryConfigGetTests()\n{\n//Basic Syntax\n/*\nbool GetString(\nconst TCHAR* Section,\nconst TCHAR* Key,\nFString& Value,\nconst FString& Filename\n);\n*/\nÂ \nif(!GConfig) return;\n//~~\nÂ \n//Retrieve Default Game Type\nFString ValueReceived;\nGConfig->GetString(\nTEXT("/Script/Engine.WorldInfo"),\nTEXT("GlobalDefaultGameType"),\nValueReceived,\nGGameIni\n);\nÂ \nClientMessage("GlobalDefaultGameType");\nClientMessage(ValueReceived);\nÂ \n//Retrieve Max Objects not considered by GC\nint32 IntValueReceived = 0;\nGConfig->GetInt(\nTEXT("Core.System"),\nTEXT("MaxObjectsNotConsideredByGC"),\nIntValueReceived,\nGEngineIni\n);\nÂ \nClientMessage("MaxObjectsNotConsideredByGC");\nClientMessage(FString::FromInt(IntValueReceived));\nÂ \n//Retrieve Near Clip Plane (how close things can get to camera)\nfloat floatValueReceived = 0;\nGConfig->GetFloat(\nTEXT("/Script/Engine.Engine"),\nTEXT("NearClipPlane"),\nfloatValueReceived,\nGEngineIni\n);\nÂ \nClientMessage("NearClipPlane");\nClientMessage(FString::SanitizeFloat(floatValueReceived));\n}')]),e._v(" "),n("h3",{attrs:{id:"writing-to-config-file"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#writing-to-config-file"}},[e._v("#")]),e._v(" Writing to Config File")]),e._v(" "),n("p",[e._v('//write to existing Game.ini\n//the results get stored in YourGameDir\\Saved\\Config\\Windows\nvoid AVictoryController::VictoryConfigSetTests()\n{\nif(!GConfig) return;\n//~~\nÂ \n//New Section to Add\nFString VictorySection = "Victory.Core";\nÂ \n//String\nGConfig->SetString (\n*VictorySection,\nTEXT("RootDir"),\nTEXT("E:\\UE4\\IsAwesome"),\nGGameIni\n);\nÂ \n//FColor\nGConfig->SetColor (\n*VictorySection,\nTEXT("Red"),\nFColor(255,0,0,255),\nGGameIni\n);\nÂ \n//FVector\nGConfig->SetVector (\n*VictorySection,\nTEXT("PlayerStartLocation"),\nFVector(0,0,512),\nGGameIni\n);\nÂ \n//FRotator\nGConfig->SetRotator (\n*VictorySection,\nTEXT("SunRotation"),\nFRotator(-90,0,0),\nGGameIni\n);\nÂ \n//ConfigCacheIni.h\n//void Flush( bool Read, const FString& Filename=TEXT("") );\nGConfig->Flush(false,GGameIni);\n}')]),e._v(" "),n("h2",{attrs:{id:"of-great-importance"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#of-great-importance"}},[e._v("#")]),e._v(" Of Great Importance")]),e._v(" "),n("p",[e._v("This line is very important")]),e._v(" "),n("p",[e._v("GConfig->Flush(false,GGameIni);")]),e._v(" "),n("p",[e._v("Sometimes the config file wont save changes if you don't call this function after you've set all your config keys.")]),e._v(" "),n("p",[e._v("Many thanks to Solid Snake for telling me about this, I might have spent an hour or two trying to figure out why my config file was only saving sometimes!")]),e._v(" "),n("h2",{attrs:{id:"conclusion"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#conclusion"}},[e._v("#")]),e._v(" Conclusion")]),e._v(" "),n("p",[e._v("Now you know how to retrieve or edit any config file you want!")]),e._v(" "),n("p",[n("strong",[e._v("And you can even add new sections to existing config files!")])]),e._v(" "),n("p",[e._v("Enjoy!")]),e._v(" "),n("p",[n("a",{attrs:{href:"/User:Rama",title:"User:Rama"}},[e._v("Rama")]),e._v(" ("),n("a",{attrs:{href:"/User_talk:Rama",title:"User talk:Rama"}},[e._v("talk")]),e._v(")")]),e._v(" "),n("p",[e._v('Retrieved from "'),n("a",{attrs:{href:"https://wiki.unrealengine.com/index.php?title=Config_Files,_Read_%26_Write_to_Config_Files&oldid=23055",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://wiki.unrealengine.com/index.php?title=Config_Files,_Read_%26_Write_to_Config_Files&oldid=23055"),n("OutboundLink")],1),e._v('"')]),e._v(" "),n("p",[n("a",{attrs:{href:"/Special:Categories",title:"Special:Categories"}},[e._v("Categories")]),e._v(":")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"/Category:Tutorials",title:"Category:Tutorials"}},[e._v("Tutorials")])]),e._v(" "),n("li",[n("a",{attrs:{href:"/Category:Code",title:"Category:Code"}},[e._v("Code")])]),e._v(" "),n("li",[n("a",{attrs:{href:"/Category:Community_Created_Content",title:"Category:Community Created Content"}},[e._v("Community Created Content")])])]),e._v(" "),n("p",[e._v("Hidden category:")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"/Category:Templates",title:"Category:Templates"}},[e._v("Templates")])])]),e._v(" "),n("p",[n("img",{attrs:{src:"https://tracking.unrealengine.com/track.png",alt:""}})])])}),[],!1,null,null,null);t.default=a.exports}}]);