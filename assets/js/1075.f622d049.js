(window.webpackJsonp=window.webpackJsonp||[]).push([[1075],{1311:function(e,t,n){"use strict";n.r(t);var r=n(28),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[e._v("Third Party Socket Server Connection - Epic Wiki")]),e._v(" "),n("h1",{attrs:{id:"third-party-socket-server-connection"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#third-party-socket-server-connection"}},[e._v("#")]),e._v(" Third Party Socket Server Connection")]),e._v(" "),n("p",[e._v("From Epic Wiki")]),e._v(" "),n("p",[e._v("Jump to: "),n("a",{attrs:{href:"#mw-head"}},[e._v("navigation")]),e._v(", "),n("a",{attrs:{href:"#p-search"}},[e._v("search")])]),e._v(" "),n("p",[n("a",{attrs:{href:"/index.php?title=Template:Rating&action=edit&redlink=1",title:"Template:Rating (page does not exist)"}},[e._v("Template:Rating")]),e._v(" We’ve been quietly working on our new game here at OSnap! Games and one of the features our new game will include is a lobby system where all players can chat among one another. The UE4 dedicated server is great for a game server but it’s overkill for something as simple as a chat server so we set out to get UE4 connecting to a third party socket server.")]),e._v(" "),n("h2",{attrs:{id:"contents"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#contents"}},[e._v("#")]),e._v(" Contents")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#Creating_the_Socket"}},[e._v("1 Creating the Socket")])]),e._v(" "),n("li",[n("a",{attrs:{href:"#Preparing_the_Address"}},[e._v("2 Preparing the Address")])]),e._v(" "),n("li",[n("a",{attrs:{href:"#Sending_a_Message"}},[e._v("3 Sending a Message")])]),e._v(" "),n("li",[n("a",{attrs:{href:"#Dependency_in_Build.cs"}},[e._v("4 Dependency in Build.cs")])])]),e._v(" "),n("h3",{attrs:{id:"creating-the-socket"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#creating-the-socket"}},[e._v("#")]),e._v(" Creating the Socket")]),e._v(" "),n("p",[e._v("The first step in getting UE4 connected to a third party server is initializing a socket.")]),e._v(" "),n("p",[e._v('FSocket* Socket = ISocketSubsystem::Get(PLATFORM_SOCKETSUBSYSTEM)->CreateSocket(NAME_Stream, TEXT("default"), false);')]),e._v(" "),n("p",[e._v("The parameters are as follows")]),e._v(" "),n("ol",[n("li",[e._v("Type")]),e._v(" "),n("li",[e._v("Description")]),e._v(" "),n("li",[e._v("ForceUDP")])]),e._v(" "),n("p",[e._v("In our case we're connecting using TCP so we've set ForceUDP to false.")]),e._v(" "),n("h3",{attrs:{id:"preparing-the-address"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#preparing-the-address"}},[e._v("#")]),e._v(" Preparing the Address")]),e._v(" "),n("p",[e._v("The next part is getting the address you wish to connect to ready. Epic provides the tools to get this done quickly.")]),e._v(" "),n("p",[e._v("FIPv4Address ip(127, 0, 0, 1);")]),e._v(" "),n("p",[e._v("TSharedRef"),n("FInternetAddr",[e._v(" addr = ISocketSubsystem::Get(PLATFORM_SOCKETSUBSYSTEM)->CreateInternetAddr();\naddr->SetIp(ip.Value);\naddr->SetPort(7776);")])],1),e._v(" "),n("p",[e._v("Now that your address is ready to go you simply have to tell UE4 to start the connection.")]),e._v(" "),n("p",[e._v("bool connected = Socket->Connect(*addr);")]),e._v(" "),n("p",[e._v("If connected is true you've successfully connected to your socket server!")]),e._v(" "),n("h3",{attrs:{id:"sending-a-message"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#sending-a-message"}},[e._v("#")]),e._v(" Sending a Message")]),e._v(" "),n("p",[e._v("Alright, so you're connected but how do you send messages to it? A lot of that is up to you. Depending on your server there are different ways to serialize and send a message. The important part though is how does UE4 handle it.")]),e._v(" "),n("p",[e._v("First things first, we must prepare the message to be sent.")]),e._v(" "),n("p",[e._v('FString serialized = TEXT("loadPlayer|1");\nTCHAR *serializedChar = serialized.GetCharArray().GetData();\nint32 size = FCString::Strlen(serializedChar);\nint32 sent = 0;')]),e._v(" "),n("p",[e._v("What's going on in the above? We're sending a message to a socket server with the type \"loadPlayer\" and a single parameter of 1. What is happening in UE4 here is we're taking an FString, and turning it into a TCHAR*.")]),e._v(" "),n("p",[e._v("Finally, with the message formatted we can send it to our server!")]),e._v(" "),n("p",[e._v("bool successful = Socket->Send((uint8*)TCHAR_TO_UTF8(serializedChar), size, sent);")]),e._v(" "),n("p",[e._v("Sending data in UE4 requires it to be a uint8* and again, Epic provides the tools to get from TCHAR* to UTF8 which can be sent as a uint8*.")]),e._v(" "),n("p",[e._v("As far as reading data back from your socket server the key is in the functions "),n("a",{attrs:{href:"https://docs.unrealengine.com/latest/INT/API/Runtime/Sockets/FSocket/HasPendingData/index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("HasPendingData"),n("OutboundLink")],1),e._v(" and "),n("a",{attrs:{href:"https://docs.unrealengine.com/latest/INT/API/Runtime/Sockets/FSocket/Recv/index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Recv"),n("OutboundLink")],1),e._v(" of the "),n("a",{attrs:{href:"https://docs.unrealengine.com/latest/INT/API/Runtime/Sockets/FSocket/index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("FSocket"),n("OutboundLink")],1),e._v(" class.")]),e._v(" "),n("h3",{attrs:{id:"dependency-in-build-cs"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dependency-in-build-cs"}},[e._v("#")]),e._v(" Dependency in Build.cs")]),e._v(" "),n("p",[e._v("One final thing to take note of. Inside your project's Build.cs file you'll need to add the \"Sockets\" package as a dependency in PublicDependencyModuleNames.")]),e._v(" "),n("p",[e._v('PublicDependencyModuleNames.AddRange(\nnew string[]\n{\n"Core",\n"CoreUObject",\n"Engine",\n"Sockets"\n}\n);')]),e._v(" "),n("p",[e._v("Reposted from "),n("a",{attrs:{href:"http://www.osnapgames.com/2014/05/24/connecting-to-a-third-party-socket-server-in-unreal-engine-4/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.osnapgames.com/2014/05/24/connecting-to-a-third-party-socket-server-in-unreal-engine-4/"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v('Retrieved from "'),n("a",{attrs:{href:"https://wiki.unrealengine.com/index.php?title=Third_Party_Socket_Server_Connection&oldid=339",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://wiki.unrealengine.com/index.php?title=Third_Party_Socket_Server_Connection&oldid=339"),n("OutboundLink")],1),e._v('"')]),e._v(" "),n("p",[n("a",{attrs:{href:"/index.php?title=Special:Categories",title:"Special:Categories"}},[e._v("Categories")]),e._v(":")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"/index.php?title=Category:Tutorials&action=edit&redlink=1",title:"Category:Tutorials (page does not exist)"}},[e._v("Tutorials")])]),e._v(" "),n("li",[n("a",{attrs:{href:"/index.php?title=Category:Code",title:"Category:Code"}},[e._v("Code")])]),e._v(" "),n("li",[n("a",{attrs:{href:"/index.php?title=Category:Community_Created_Content",title:"Category:Community Created Content"}},[e._v("Community Created Content")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);