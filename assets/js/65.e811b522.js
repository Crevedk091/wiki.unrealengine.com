(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{363:function(e,t,n){"use strict";n.r(t);var i=n(28),a=Object(i.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[e._v("Animation Blueprint, Implement Custom C++ Logic Via Tick Updates - Epic Wiki")]),e._v(" "),n("h1",{attrs:{id:"animation-blueprint-implement-custom-c-logic-via-tick-updates"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#animation-blueprint-implement-custom-c-logic-via-tick-updates"}},[e._v("#")]),e._v(" Animation Blueprint, Implement Custom C++ Logic Via Tick Updates")]),e._v(" "),n("p",[e._v("From Epic Wiki")]),e._v(" "),n("p",[e._v("Jump to: "),n("a",{attrs:{href:"#mw-navigation"}},[e._v("navigation")]),e._v(", "),n("a",{attrs:{href:"#p-search"}},[e._v("search")])]),e._v(" "),n("h2",{attrs:{id:"contents"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#contents"}},[e._v("#")]),e._v(" Contents")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#Overview"}},[e._v("1 Overview")])]),e._v(" "),n("li",[n("a",{attrs:{href:"#Example:_An_Anim-BP-Accessible_Variable:_IsMoving"}},[e._v("2 Example: An Anim-BP-Accessible Variable: IsMoving")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#.h"}},[e._v("2.1 .h")])]),e._v(" "),n("li",[n("a",{attrs:{href:"#.cpp"}},[e._v("2.2 .cpp")])])])]),e._v(" "),n("li",[n("a",{attrs:{href:"#Final_Step:_Reparenting_your_Character.27s_Anim_Blueprint"}},[e._v("3 Final Step: Reparenting your Character's Anim Blueprint")])]),e._v(" "),n("li",[n("a",{attrs:{href:"#Conclusion"}},[e._v("4 Conclusion")])])]),e._v(" "),n("h2",{attrs:{id:"overview"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),n("p",[e._v("Dear Community,")]),e._v(" "),n("p",[e._v("Extending AnimInstance is a wonderful way to create all sorts of custom animation systems and also efficiently utilize the existing UE4 anim blueprint functions.")]),e._v(" "),n("p",[e._v("It's very useful to know how you can do certain actions when the Anim Instance for a Character is first created, and how to do actions every tick while the anim instance exists!")]),e._v(" "),n("p",[e._v("Below are the two Anim Instance functions that are similar to PostInitializeComponents and Tick(DeltaTime) for Actors")]),e._v(" "),n("p",[e._v("virtual void NativeInitializeAnimation() OVERRIDE;\nÂ \nvirtual void NativeUpdateAnimation(float DeltaTimeX) OVERRIDE;")]),e._v(" "),n("h2",{attrs:{id:"example-an-anim-bp-accessible-variable-ismoving"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#example-an-anim-bp-accessible-variable-ismoving"}},[e._v("#")]),e._v(" Example: An Anim-BP-Accessible Variable: IsMoving")]),e._v(" "),n("p",[e._v("Here is a complete example that obtains the Owning Pawn in the Init function (to avoid reobtaining the reference every tick).")]),e._v(" "),n("p",[e._v("Then, every tick / moment of the anim instance's existance, the boolean variable IsMoving is updated to reflect the velocity of the Owning pawn.")]),e._v(" "),n("p",[e._v("IsMoving can now be obtained from within the Anim Blueprint because of its UPROPERTY settings, and used in your animation blueprint logic.")]),e._v(" "),n("p",[e._v("Enjoy!")]),e._v(" "),n("h3",{attrs:{id:"h"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#h"}},[e._v("#")]),e._v(" .h")]),e._v(" "),n("p",[e._v('// Copyright 1998-2013 Epic Games, Inc. All Rights Reserved.\nÂ \n#pragma once\nÂ \n#include "VictoryAnimInstance.generated.h"\nÂ \nUCLASS(transient, Blueprintable, hideCategories=AnimInstance, BlueprintType)\nclass UVictoryAnimInstance : public UAnimInstance\n{\nGENERATED_UCLASS_BODY()\nÂ \n/** Is Moving */\nUPROPERTY(EditAnywhere, BlueprintReadWrite, Category=Movement)\nbool IsMoving;\nÂ \n//socket names\npublic:\nÂ \n//example of property that can be set in constructor\nUPROPERTY(EditAnywhere, BlueprintReadWrite, Category=SocketNames)\nFName HeadSocket;\nÂ \n//init and tick\npublic:\nÂ \nAPawn * OwningPawn;\nÂ \nvirtual void NativeInitializeAnimation() OVERRIDE;\nÂ \nvirtual void NativeUpdateAnimation(float DeltaTimeX) OVERRIDE;\nÂ \n};')]),e._v(" "),n("h3",{attrs:{id:"cpp"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cpp"}},[e._v("#")]),e._v(" .cpp")]),e._v(" "),n("p",[e._v('// Copyright 1998-2013 Epic Games, Inc. All Rights Reserved.\nÂ \n#include "VictoryGame.h"\nÂ \n//////////////////////////////////////////////////////////////////////////\n// UVictoryAnimInstance\nÂ \nUVictoryAnimInstance::UVictoryAnimInstance(const class FPostConstructInitializeProperties& PCIP)\n: Super(PCIP)\n{\nÂ \n//can set this here because it does not depend on other objects\nHeadSocket = FName(TEXT("Head"));\n}\nÂ \n//Init\nvoid UVictoryAnimInstance::NativeInitializeAnimation()\n{\n//Very Important Line\nSuper::NativeInitializeAnimation();\nÂ \n//Has to be set in KismetInit because it depends on the Owning Actor\n//to have already been constructed\nÂ \n//So this function is like PostInitAnimtree in UE3\nÂ \nOwningPawn = TryGetPawnOwner();\n}\nÂ \n//Tick\nvoid UVictoryAnimInstance::NativeUpdateAnimation(float DeltaTimeX)\n{\n//Very Important Line\nSuper::NativeUpdateAnimation(DeltaTimeX);\nÂ \n//Always Check Pointers\nif (!OwningPawn) return;\n//~~\nÂ \nif (OwningPawn->GetVelocity().SizeSquared() > 25) IsMoving = true;\nelse IsMoving = false;\n}')]),e._v(" "),n("h2",{attrs:{id:"final-step-reparenting-your-character-s-anim-blueprint"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#final-step-reparenting-your-character-s-anim-blueprint"}},[e._v("#")]),e._v(" Final Step: Reparenting your Character's Anim Blueprint")]),e._v(" "),n("p",[e._v("You need to make sure your Character is using your extended version of AnimInstanceÂ ðŸ˜ƒ")]),e._v(" "),n("p",[e._v("For more information on reparenting Anim BPs, and making custom Animation Blueprint classes, see this code sample:")]),e._v(" "),n("p",[n("strong",[n("a",{attrs:{href:"/Animation_Blueprint,_Set_Custom_Variables_Via_C%2B%2B",title:"Animation Blueprint, Set Custom Variables Via C++"}},[e._v("Animation Blueprints, Custom C++ Variables")])])]),e._v(" "),n("p",[n("a",{attrs:{href:"/File:Reparentbp.jpg"}},[n("img",{attrs:{src:"https://d3ar1piqh1oeli.cloudfront.net/e/e2/Reparentbp.jpg/637px-Reparentbp.jpg",alt:"Reparentbp.jpg"}})])]),e._v(" "),n("h2",{attrs:{id:"conclusion"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#conclusion"}},[e._v("#")]),e._v(" Conclusion")]),e._v(" "),n("p",[e._v("Now you know what functions to override to create complicated Anim Blueprint logic with assistance from the C++ code,")]),e._v(" "),n("p",[e._v("or run your anim instance mostly from the C++ code (especially the event graph part)!")]),e._v(" "),n("p",[e._v("Enjoy!")]),e._v(" "),n("p",[n("a",{attrs:{href:"/User:Rama",title:"User:Rama"}},[e._v("Rama")]),e._v(" ("),n("a",{attrs:{href:"/User_talk:Rama",title:"User talk:Rama"}},[e._v("talk")]),e._v(")")]),e._v(" "),n("p",[e._v('Retrieved from "'),n("a",{attrs:{href:"https://wiki.unrealengine.com/index.php?title=Animation_Blueprint,_Implement_Custom_C%2B%2B_Logic_Via_Tick_Updates&oldid=3395",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://wiki.unrealengine.com/index.php?title=Animation_Blueprint,_Implement_Custom_C%2B%2B_Logic_Via_Tick_Updates&oldid=3395"),n("OutboundLink")],1),e._v('"')]),e._v(" "),n("p",[n("a",{attrs:{href:"/Special:Categories",title:"Special:Categories"}},[e._v("Category")]),e._v(":")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"/Category:Code",title:"Category:Code"}},[e._v("Code")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);