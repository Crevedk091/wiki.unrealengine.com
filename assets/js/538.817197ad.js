(window.webpackJsonp=window.webpackJsonp||[]).push([[538],{949:function(e,t,a){"use strict";a.r(t);var r=a(28),n=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("Get Screen-Size Bounds of An Actor - Epic Wiki")]),e._v(" "),a("h1",{attrs:{id:"get-screen-size-bounds-of-an-actor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-screen-size-bounds-of-an-actor"}},[e._v("#")]),e._v(" Get Screen-Size Bounds of An Actor")]),e._v(" "),a("p",[a("strong",[e._v("Rate this Article:")])]),e._v(" "),a("p",[e._v("5.00")]),e._v(" "),a("p",[a("img",{attrs:{src:"/extensions/VoteNY/images/star_on.gif",alt:""}}),a("img",{attrs:{src:"/extensions/VoteNY/images/star_on.gif",alt:""}}),a("img",{attrs:{src:"/extensions/VoteNY/images/star_on.gif",alt:""}}),a("img",{attrs:{src:"/extensions/VoteNY/images/star_on.gif",alt:""}}),a("img",{attrs:{src:"/extensions/VoteNY/images/star_on.gif",alt:""}}),e._v(" (4 votes)")]),e._v(" "),a("p",[e._v("Approved for Versions:4.7")]),e._v(" "),a("h2",{attrs:{id:"contents"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#contents"}},[e._v("#")]),e._v(" Contents")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#Overview"}},[e._v("1 Overview")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#The_Code"}},[e._v("2 The Code")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#Pre-Processor_Explanation"}},[e._v("3 Pre-Processor Explanation")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#How_To_Use_It"}},[e._v("4 How To Use It")])])]),e._v(" "),a("h2",{attrs:{id:"overview"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),a("p",[e._v("In this tutorial I'll show you how you can get a float variable of any objects size on-screen. This has a number of useful applications, for example: scaling a UMG widget to match the size of an object. The images below show the same object at two different distances, and the same widget is being scaled per-frame to keep the object inside the widget.")]),e._v(" "),a("p",[a("a",{attrs:{href:"/File:ScaledUMGWidgetExample.jpg"}},[a("img",{attrs:{src:"https://d26ilriwvtzlb.cloudfront.net/b/b2/ScaledUMGWidgetExample.jpg",alt:"ScaledUMGWidgetExample.jpg"}})])]),e._v(" "),a("h2",{attrs:{id:"the-code"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-code"}},[e._v("#")]),e._v(" The Code")]),e._v(" "),a("p",[a("strong",[e._v("MyPlayerController.h")])]),e._v(" "),a("p",[e._v('public:\nUFUNCTION(BlueprintPure, Category = "Hud")\nfloat GetObjectScreenRadius(AActor* InActor);')]),e._v(" "),a("p",[a("strong",[e._v("MyPlayerController.cpp")])]),e._v(" "),a("p",[e._v('#if WITH_EDITOR\n/* Get Screen Percentage */\nstatic const auto CVarScreenPercentage = IConsoleManager::Get().FindTConsoleVariableDataFloat(TEXT("r.SCreenPercentage"));\n#endif WITH_EDITOR\n \nfloat AMyPlayerController::GetObjectScreenRadius(AActor* InActor)\n{\nfloat ScreenRadius;\nint32 Width, Height;\nFVector Viewlocation;\nFRotator ViewRotation; // Not Used, but required for Function call\nfloat CamFOV = 90.0f; //TODO: Replace With Function that returns camera FOV\n#if WITH_EDITOR\nfloat ScreenPerc = CVarScreenPercentage->GetValueOnGameThread() / 100.0f;\n#endif WITH_EDITOR\n \n/* Get the size of the viewport, and the player cameras location. */\nGetViewportSize(Width, Height);\nGetPlayerViewPoint(Viewlocation, ViewRotation);\n \n#if WITH_EDITOR\n/* Factor in Screen Percentage & Quality Settings */\nWidth *= ScreenPerc;\nHeight *= ScreenPerc;\n#endif WITH_EDITOR\n \n/* Easy Way To Return The Size, Create a vector and scale it. Alternative would be to use FMath::Max3 */\nfloat SRad = FVector2D(Width, Height).Size();\n \n/* Get Object Bounds (R) */\nfloat BoundingRadius = InActor->GetRootComponent()->Bounds.SphereRadius;\nfloat DistanceToObject = FVector(InActor->GetActorLocation() - Viewlocation).Size();\n \n/* Get Projected Screen Radius */\nScreenRadius = FMath::Atan(BoundingRadius / DistanceToObject);\nScreenRadius *= SRad / FMath::DegreesToRadians(CamFOV);\n \nreturn ScreenRadius;\n}')]),e._v(" "),a("h2",{attrs:{id:"pre-processor-explanation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pre-processor-explanation"}},[e._v("#")]),e._v(" Pre-Processor Explanation")]),e._v(" "),a("p",[e._v("If you're new to C++ you're probably wondering what the #if WITH_EDITOR and #endif WITH_EDITOR lines are doing. These are "),a("a",{attrs:{href:"http://en.wikipedia.org/wiki/C_preprocessor",target:"_blank",rel:"noopener noreferrer"}},[e._v("pre-processor"),a("OutboundLink")],1),e._v(" commands, and tell the compiler to not include these lines of code if we're building a packaged version of our game.")]),e._v(" "),a("p",[e._v("The reason for their existence here, is that the Scalability settings are not safe to call without the editor (since they don't exist), meaning your code will "),a("a",{attrs:{href:"http://en.wikipedia.org/wiki/Assertion_%28software_development%29",target:"_blank",rel:"noopener noreferrer"}},[e._v("assert"),a("OutboundLink")],1),e._v(". The preprocessor commands will safeguard against it.")]),e._v(" "),a("h2",{attrs:{id:"how-to-use-it"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-use-it"}},[e._v("#")]),e._v(" How To Use It")]),e._v(" "),a("p",[e._v("In my use-case I have used the size of the object as a scale for an Image component inside a UMG widget. Simply set the images 'Size X' and 'Size Y' values to "),a("strong",[e._v("1.0")]),e._v(" Although it will appear miniscule in the UMG editor, it will scale correctly when we use it in-game thanks to the code in the Blueprint (see below).")]),e._v(" "),a("p",[e._v("For the use-case in the image below, I have packed the Objects Location (Using GetWorldLocationAsScreenPosition) and it's Screen-Size from the code shown above, into a single vector in the players HUD. When the widget is created by the HUD, I set the 'BZHud' variable to the same HUD.")]),e._v(" "),a("p",[e._v("Using Event Tick in the UMG Widget, I then use that to set the widgets position and size in the view-port.")]),e._v(" "),a("p",[a("a",{attrs:{href:"/File:UMGScreenFollowingWidget.PNG"}},[a("img",{attrs:{src:"https://d26ilriwvtzlb.cloudfront.net/a/a7/UMGScreenFollowingWidget.PNG",alt:"UMGScreenFollowingWidget.PNG"}})])]),e._v(" "),a("p",[e._v("Hope this helps!")]),e._v(" "),a("p",[a("a",{attrs:{href:"/User:TheJamsh",title:"User:TheJamsh"}},[e._v("TheJamsh")]),e._v(" ("),a("a",{attrs:{href:"/User_talk:TheJamsh",title:"User talk:TheJamsh"}},[e._v("talk")]),e._v(")")]),e._v(" "),a("p",[e._v('Retrieved from "'),a("a",{attrs:{href:"https://wiki.unrealengine.com/index.php?title=Get_Screen-Size_Bounds_of_An_Actor&oldid=13241",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://wiki.unrealengine.com/index.php?title=Get_Screen-Size_Bounds_of_An_Actor&oldid=13241"),a("OutboundLink")],1),e._v('"')]),e._v(" "),a("p",[a("a",{attrs:{href:"/Special:Categories",title:"Special:Categories"}},[e._v("Categories")]),e._v(":")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"/Category:Tutorials",title:"Category:Tutorials"}},[e._v("Tutorials")])]),e._v(" "),a("li",[a("a",{attrs:{href:"/Category:Code",title:"Category:Code"}},[e._v("Code")])]),e._v(" "),a("li",[a("a",{attrs:{href:"/Category:Community_Created_Content",title:"Category:Community Created Content"}},[e._v("Community Created Content")])])]),e._v(" "),a("p",[e._v("Hidden category:")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"/Category:Templates",title:"Category:Templates"}},[e._v("Templates")])])]),e._v(" "),a("p",[a("img",{attrs:{src:"https://tracking.unrealengine.com/track.png",alt:""}})])])}),[],!1,null,null,null);t.default=n.exports}}]);