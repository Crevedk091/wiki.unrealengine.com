(window.webpackJsonp=window.webpackJsonp||[]).push([[821],{1325:function(e,t,n){"use strict";n.r(t);var r=n(28),o=Object(r.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[e._v("Log Macro with Netmode and Colour - Epic Wiki")]),e._v(" "),n("h1",{attrs:{id:"log-macro-with-netmode-and-colour"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#log-macro-with-netmode-and-colour"}},[e._v("#")]),e._v(" Log Macro with Netmode and Colour")]),e._v(" "),n("h2",{attrs:{id:"contents"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#contents"}},[e._v("#")]),e._v(" Contents")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#Overview"}},[e._v("1 Overview")])]),e._v(" "),n("li",[n("a",{attrs:{href:"#YourProject.h"}},[e._v("2 YourProject.h")])]),e._v(" "),n("li",[n("a",{attrs:{href:"#YourProject.cpp"}},[e._v("3 YourProject.cpp")])]),e._v(" "),n("li",[n("a",{attrs:{href:"#Examples"}},[e._v("4 Examples")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#Function_logging"}},[e._v("4.1 Function logging")])]),e._v(" "),n("li",[n("a",{attrs:{href:"#Variable_logging"}},[e._v("4.2 Variable logging")])])])]),e._v(" "),n("li",[n("a",{attrs:{href:"#Credits"}},[e._v("5 Credits")])])]),e._v(" "),n("h2",{attrs:{id:"overview"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),n("p",[e._v("Macro that adds the current netmode and colour to logging, as well as making it easier to use."),n("br"),e._v("\nNot recommended as a replacement for UE_LOG, but as a quick'n dirty tool for rapid iteration.")]),e._v(" "),n("h2",{attrs:{id:"yourproject-h"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#yourproject-h"}},[e._v("#")]),e._v(" YourProject.h")]),e._v(" "),n("p",[e._v('#define NETMODE_WORLD (((GEngine == nullptr) || (GetWorld() == nullptr)) ? TEXT("") \\\n : (GEngine->GetNetMode(GetWorld()) == NM_Client) ? TEXT("[Client] ") \\\n : (GEngine->GetNetMode(GetWorld()) == NM_ListenServer) ? TEXT("[ListenServer] ") \\\n : (GEngine->GetNetMode(GetWorld()) == NM_DedicatedServer) ? TEXT("[DedicatedServer] ") \\\n : TEXT("[Standalone] "))\n \n#if _MSC_VER\n#define FUNC_NAME    TEXT(__FUNCTION__)\n#else // FIXME - GCC?\n#define FUNC_NAME    TEXT(__func__)\n#endif\n \n#define TRACE(Format, ...) \\\n{ \\\nSET_WARN_COLOR(COLOR_CYAN);\\\nconst FString Msg = FString::Printf(TEXT(Format), ##__VA_ARGS__); \\\nif (Msg == "") \\\n{ \\\nUE_LOG(LogYourCategory, Log, TEXT("%s%s() : %s"), NETMODE_WORLD, FUNC_NAME, *GetNameSafe(this));\\\n} \\\nelse \\\n{ \\\nUE_LOG(LogYourCategory, Log, TEXT("%s%s() : %s"), NETMODE_WORLD, FUNC_NAME, *Msg);\\\n} \\\nCLEAR_WARN_COLOR();\\\n}\n \n#define TRACESTATIC(Format, ...) \\\n{ \\\nSET_WARN_COLOR(COLOR_CYAN);\\\nconst FString Msg = FString::Printf(TEXT(Format), ##__VA_ARGS__); \\\nUE_LOG(LogYourCategory, Log, TEXT("%s() : %s"), FUNC_NAME, *Msg);\\\nCLEAR_WARN_COLOR();\\\n}\n \n#define TRACEWARN(Format, ...) \\\n{ \\\nSET_WARN_COLOR( COLOR_YELLOW );\\\nconst FString Msg = FString::Printf(TEXT(Format), ##__VA_ARGS__); \\\nUE_LOG(LogYourCategory, Log, TEXT("**WARNING** %s%s() : %s"), NETMODE_WORLD, FUNC_NAME, *Msg);\\\nCLEAR_WARN_COLOR();\\\n}\n \n#define TRACEERROR(Format, ...) \\\n{ \\\nSET_WARN_COLOR( COLOR_RED );\\\nconst FString Msg = FString::Printf(TEXT(Format), ##__VA_ARGS__); \\\nUE_LOG(LogYourCategory, Log, TEXT("**ERROR** %s%s() : %s"), NETMODE_WORLD, FUNC_NAME, *Msg);\\\nCLEAR_WARN_COLOR();\\\n}\n \n#define SCREENDEBUG(Format, ...) \\\n{ \\\nconst FString Msg = FString::Printf(TEXT(Format), ##__VA_ARGS__); \\\nif (Msg == "") \\\n{ \\\nTCHAR StdMsg[MAX_SPRINTF] = TEXT(""); \\\nFCString::Sprintf(StdMsg, TEXT("%s%s() : %s"), NETMODE_WORLD, FUNC_NAME, *GetNameSafe(this)); \\\nGEngine->AddOnScreenDebugMessage(-1, 10.0f, FColor::White, StdMsg); \\\n} \\\nelse \\\n{ \\\nGEngine->AddOnScreenDebugMessage(-1, 10.0f, FColor::White, Msg); \\\n} \\\n}')]),e._v(" "),n("h2",{attrs:{id:"yourproject-cpp"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#yourproject-cpp"}},[e._v("#")]),e._v(" YourProject.cpp")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("DEFINE\\_LOG\\_CATEGORY( LogYourCategory );\n")])])]),n("h2",{attrs:{id:"examples"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),n("h3",{attrs:{id:"function-logging"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#function-logging"}},[e._v("#")]),e._v(" Function logging")]),e._v(" "),n("p",[e._v("Usage:")]),e._v(" "),n("p",[e._v('void USomeClass::WithSomeFunction()\n{\nTRACE("");\n}')]),e._v(" "),n("p",[e._v("Output:"),n("br"),e._v("\nLogYourCategory: [Standalone] USomeClass::WithSomeFunction() :")]),e._v(" "),n("h3",{attrs:{id:"variable-logging"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#variable-logging"}},[e._v("#")]),e._v(" Variable logging")]),e._v(" "),n("p",[e._v("Usage:")]),e._v(" "),n("p",[e._v('void USomeClass::WithSomeFunction()\n{\nTRACE("Name: %s, Health %d, DistanceToEnemy: %f", *PlayerName.ToString(), Health, GetDistance(EnemyLoc));\n}')]),e._v(" "),n("p",[e._v("Output:"),n("br"),e._v("\nLogYourCategory: [Client] USomeClass::WithSomeFunction() : Name: DudeGuy, Health 76, DistanceToEnemy: 128.0512")]),e._v(" "),n("h2",{attrs:{id:"credits"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#credits"}},[e._v("#")]),e._v(" Credits")]),e._v(" "),n("p",[n("a",{attrs:{href:"/index.php?title=User:Spoof&action=edit&redlink=1",title:"User:Spoof (page does not exist)"}},[e._v("Spoof")]),e._v(" - original implementation."),n("br"),e._v(" "),n("a",{attrs:{href:"/User:Kris",title:"User:Kris"}},[e._v("Kris")]),e._v(" - simplification & netmode.")]),e._v(" "),n("p",[e._v('Retrieved from "'),n("a",{attrs:{href:"https://wiki.unrealengine.com/index.php?title=Log_Macro_with_Netmode_and_Colour&oldid=14089",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://wiki.unrealengine.com/index.php?title=Log_Macro_with_Netmode_and_Colour&oldid=14089"),n("OutboundLink")],1),e._v('"')]),e._v(" "),n("p",[n("a",{attrs:{href:"/Special:Categories",title:"Special:Categories"}},[e._v("Category")]),e._v(":")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"/Category:Code",title:"Category:Code"}},[e._v("Code")])])]),e._v(" "),n("p",[n("img",{attrs:{src:"https://tracking.unrealengine.com/track.png",alt:""}})])])}),[],!1,null,null,null);t.default=o.exports}}]);