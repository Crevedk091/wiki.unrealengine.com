(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{909:function(n,e,t){"use strict";t.r(e);var i=t(28),r=Object(i.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("p",[n._v("Animation Node, Entire Source for a Turn In Place Node - Epic Wiki")]),n._v(" "),t("h1",{attrs:{id:"animation-node-entire-source-for-a-turn-in-place-node"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#animation-node-entire-source-for-a-turn-in-place-node"}},[n._v("#")]),n._v(" Animation Node, Entire Source for a Turn In Place Node")]),n._v(" "),t("h2",{attrs:{id:"contents"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#contents"}},[n._v("#")]),n._v(" Contents")]),n._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#Overview"}},[n._v("1 Overview")])]),n._v(" "),t("li",[t("a",{attrs:{href:"#Animation_USTRUCT"}},[n._v("2 Animation USTRUCT")]),n._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#.h"}},[n._v("2.1 .h")])]),n._v(" "),t("li",[t("a",{attrs:{href:"#.CPP"}},[n._v("2.2 .CPP")])])])]),n._v(" "),t("li",[t("a",{attrs:{href:"#World_Is_Game"}},[n._v("3 World Is Game")])]),n._v(" "),t("li",[t("a",{attrs:{href:"#Animation_Graph_Node"}},[n._v("4 Animation Graph Node")]),n._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#.H_2"}},[n._v("4.1 .H")])]),n._v(" "),t("li",[t("a",{attrs:{href:"#.CPP_2"}},[n._v("4.2 .CPP")])])])])]),n._v(" "),t("h2",{attrs:{id:"overview"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[n._v("#")]),n._v(" Overview")]),n._v(" "),t("p",[t("em",[n._v("Original Author")]),n._v(" "),t("a",{attrs:{href:"/User:Rama",title:"User:Rama"}},[n._v("Rama")]),n._v(" ("),t("a",{attrs:{href:"/User_talk:Rama",title:"User talk:Rama"}},[n._v("talk")]),n._v(")")]),n._v(" "),t("p",[n._v("Dear Community,")]),n._v(" "),t("p",[n._v("Here is my entire code for a Turn In Place animation node!")]),n._v(" "),t("p",[n._v("This node detects when there is little to no velocity, but the character is changing directions constantly.")]),n._v(" "),t("p",[n._v("This code shows you my method of accessing the player character from within the animation node code.")]),n._v(" "),t("p",[t("a",{attrs:{href:"/File:TurnInPlacenode.jpg"}},[t("img",{attrs:{src:"https://d3ar1piqh1oeli.cloudfront.net/1/19/TurnInPlacenode.jpg/800px-TurnInPlacenode.jpg",alt:"TurnInPlacenode.jpg"}})])]),n._v(" "),t("h2",{attrs:{id:"animation-ustruct"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#animation-ustruct"}},[n._v("#")]),n._v(" Animation USTRUCT")]),n._v(" "),t("h3",{attrs:{id:"h"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#h"}},[n._v("#")]),n._v(" .h")]),n._v(" "),t("p",[n._v('// Copyright 1998-2013 Epic Games, Inc. All Rights Reserved.\n \n#pragma once\n#include "AnimNode_VictoryTurnInPlace.generated.h"\n \nUSTRUCT()\nstruct FAnimNode_VictoryTurnInPlace : public FAnimNode_Base\n{\nGENERATED_USTRUCT_BODY()\n \n/** Base Pose*/\nUPROPERTY(EditAnywhere, BlueprintReadWrite, Category=Links)\nFPoseLink BasePose;\n \n/** Turning In Place! */\nUPROPERTY(EditAnywhere, BlueprintReadWrite, Category=Links)\nFPoseLink TurnPose;\n \n/** How Quickly to Blend In/Out of Turn Pose */\nUPROPERTY(EditAnywhere, BlueprintReadWrite, Category=Links, meta=(PinShownByDefault))\nfloat TurnBlendDuration;\n \n/** What Amount of Turn Per Tick Qualifies for Maximum Turn Blending? Anything less per tick will result in slower Turn Blending. Result: If player turns slowly, the turn blend blends in slowly, and ramps up smoothly to max turn blend as player turns faster. */\nUPROPERTY(EditAnywhere, BlueprintReadWrite, Category=Links, meta=(PinShownByDefault))\nfloat TurnSpeedModifierMAX;\n \n/** The Lower This Number The Faster The Turn In Place Anim Will Activate */\nUPROPERTY(EditAnywhere, BlueprintReadWrite, Category=Links, meta=(PinShownByDefault))\nfloat TurnSensitivity;\n \n/** The Lower This Number The Faster The Turn In Place Anim Will Activate */\nUPROPERTY(EditAnywhere, BlueprintReadWrite, Category=Links, meta=(PinShownByDefault) )\nfloat MoveSensitivity;\n \n/** Seeing this in the log can help you decided what TurnSpeedModifierMAX to use  */\nUPROPERTY(EditAnywhere, BlueprintReadWrite, Category=Logs)\nfloat ShowTurnRotationChangePerTick;\n \n// FAnimNode_Base interface\npublic:\n \n// FAnimNode_Base interface\nvirtual void Initialize(const FAnimationInitializeContext& Context) \tOVERRIDE;\nvirtual void Update(const FAnimationUpdateContext & Context) \t\tOVERRIDE;\nvirtual void Evaluate(FPoseContext& Output) \t\t\t\t\t\t\tOVERRIDE;\n// End of FAnimNode_Base interface\n \n//~~~ Constructor ~~~\npublic:\n \nFAnimNode_VictoryTurnInPlace();\n \n//Functions\nprotected:\nvoid DetermineUseTurnPose();\nvoid UpdateBlendAlpha();\n \nprotected:\t\n \n//Our very own Blend node, yay! (makes this all super clear)\nFAnimationNode_TwoWayBlend OurVeryOwnBlend;\n \nAActor * OwningActor;\nFVector PrevLoc;\nFVector CurLoc;\nfloat PrevYaw;\nfloat CurYaw;\nfloat TurnAmountThisTick;\nbool WorldIsGame;\n \n//~~~ Blending ~~~\nfloat BlendDurationMult; //blend slower if moving slower\nfloat InternalBlendDuration; //divided the input by 100 just cause it looks better that way\nfloat BlendAlpha;\nbool BlendingIntoTurnPose; //false = blending out of\n \nFVector2D RangeIn;\nFVector2D RangeOut;\n};')]),n._v(" "),t("h3",{attrs:{id:"cpp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cpp"}},[n._v("#")]),n._v(" .CPP")]),n._v(" "),t("p",[n._v('// Copyright 1998-2013 Epic Games, Inc. All Rights Reserved.\n \n#include "VictoryGame.h"\n \n//#include "AnimationRuntime.h"\n \nFAnimNode_VictoryTurnInPlace::FAnimNode_VictoryTurnInPlace()\n: FAnimNode_Base()\n, TurnBlendDuration(4.f)\n, TurnSpeedModifierMAX(4.333)\n, TurnSensitivity(0.777f)\n, MoveSensitivity(25.f)\n{\nWorldIsGame = false;\nBlendDurationMult = 1;\nInternalBlendDuration = TurnBlendDuration / 100;\n \nRangeIn = FVector2D(0, TurnSpeedModifierMAX);\nRangeOut = FVector2D(0, 1);\n \nShowTurnRotationChangePerTick = false;\n}\n \nvoid FAnimNode_VictoryTurnInPlace::Initialize(const FAnimationInitializeContext & Context)\n{\n//Init the Inputs\nBasePose.Initialize(Context);\nTurnPose.Initialize(Context);\n \n//Get the Actor Owner\nOwningActor = Context.AnimInstance-> GetSkelMeshComponent()->GetOwner();\n \n//Editor or Game?\nUWorld * TheWorld = Context.AnimInstance->GetWorld();\nif (!TheWorld) return;\n//~~~~~~~~~~~~~~~~\n \nWorldIsGame = (TheWorld->WorldType == EWorldType::Game);\n \n//~~~\n \n//~~~ Init the Blend ~~~\nOurVeryOwnBlend.A = BasePose;\nOurVeryOwnBlend.B = TurnPose;\nOurVeryOwnBlend.Initialize(Context);\n}\n \nvoid FAnimNode_VictoryTurnInPlace::DetermineUseTurnPose()\n{\n//Delta time\n//Context.GetDeltaTime();\n \n//Get Current\nCurYaw = OwningActor->GetActorRotation().Yaw;\nCurLoc =  OwningActor->GetActorLocation();\n \n//~~~ Choose Turn Pose or Base Pose ~~~\n//Yaw Delta Amount\nTurnAmountThisTick = FMath::Abs(CurYaw - PrevYaw);\nif (TurnAmountThisTick < TurnSensitivity)\n{\nBlendingIntoTurnPose = false;\n}\n \n//Turning Amount is Sufficient and Movement is slow enough\nelse if(FVector::DistSquared(CurLoc, PrevLoc) < MoveSensitivity)\n{\nBlendingIntoTurnPose = true;\n}\n \n//~~~ Save Previous ~~~\nPrevYaw = CurYaw;\nPrevLoc = CurLoc;\n \n//Log the Change in Rotation Per Tick\nif(ShowTurnRotationChangePerTick) UE_LOG(LogAnimation, Warning, TEXT("turn difference per tick,  %f"), TurnAmountThisTick);\n \n//~~~ Calc Blend Mult ~~~\n \n//In case this gets modified during game time\nRangeIn.Y = TurnSpeedModifierMAX;\n \n//Mapped Range\nBlendDurationMult = FMath::GetMappedRangeValue(RangeIn, RangeOut, TurnAmountThisTick);\n}\nvoid FAnimNode_VictoryTurnInPlace::UpdateBlendAlpha()\n{\nif (BlendingIntoTurnPose)\n{\nif (BlendAlpha >= 1) BlendAlpha = 1;\nelse BlendAlpha += InternalBlendDuration * BlendDurationMult; //modify blend-in by speed of turning\n}\n \n//Blending out\nelse\n{\nif (BlendAlpha <= 0) BlendAlpha = 0;\nelse BlendAlpha -= InternalBlendDuration;\n}\n}\nvoid FAnimNode_VictoryTurnInPlace::Update(const FAnimationUpdateContext & Context)\n{\n//EDITOR\n//Editor mode? just use the base pose\nif (!WorldIsGame)\n{\nBlendAlpha = 0;\n}\n \n//GAME\n//Actually in Game so the Owner Instance Should Exist\nelse\n{\n//Try Again if not found\nif (!OwningActor) OwningActor = Context.AnimInstance->GetSkelMeshComponent()->GetOwner();\n \n//Not found\nif (!OwningActor)\n{\nUE_LOG(LogAnimation, Warning, TEXT("FAnimNode_VictoryTurnInPlace::Update() Owning Actor was not found"));\nreturn;\n//~~~~~~~~~~~~~~~~~~~\n}\n \n//~~~ Determine Use Turn Pose ~~~\nDetermineUseTurnPose();\n \n//~~~ Calc Blend Alpha ~~~\nUpdateBlendAlpha();\n}\n \n//~~~ Do Updates ~~~\n \n//At end of Blend, only evaluate 1, save resources\n//**************************************************************************\n// FPoseLinkBase::Update Active Pose - this is what makes the glowing line thing happen and animations loop\n//**************************************************************************\nif (BlendAlpha >= 1) TurnPose.Update(Context);\nelse if (BlendAlpha <= 0) BasePose.Update(Context);\n \n//Currently Blending\nelse\n{\t\t\n//Blend node below handles this now\n//BasePose.Update(Context);\n//TurnPose.Update(Context);\n \n//~~~ Update the Blend ~~~\nOurVeryOwnBlend.Alpha = BlendAlpha;\nOurVeryOwnBlend.Update(Context);\n}\n \n//***************************************\n// Evaluate Graph, see AnimNode_Base, AnimNodeBase.h\nEvaluateGraphExposedInputs.Execute(Context);\n//***************************************\n}\n \nvoid FAnimNode_VictoryTurnInPlace::Evaluate(FPoseContext & Output)\n{\n//~~~ Fully In Base Pose ~~~\nif(BlendAlpha <= 0) BasePose.Evaluate(Output);\n \n//~~~ Fully In Turn Pose ~~~\nelse if (BlendAlpha >= 1) TurnPose.Evaluate(Output);\n \n//~~~ Currently Blending ~~~\nelse\n{\nOurVeryOwnBlend.Evaluate(Output);\n}\t\n}')]),n._v(" "),t("h2",{attrs:{id:"world-is-game"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#world-is-game"}},[n._v("#")]),n._v(" World Is Game")]),n._v(" "),t("p",[n._v("Please note the use of WorldIsGame.")]),n._v(" "),t("p",[n._v("In the editor, there is no instanced version of the Character, so I do not run that part of the code.")]),n._v(" "),t("p",[n._v("Here is how you can determine if your node is running in the Editor preview or in the actual game!")]),n._v(" "),t("p",[n._v("WorldIsGame = (TheWorld->WorldType == EWorldType::Game);")]),n._v(" "),t("h2",{attrs:{id:"animation-graph-node"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#animation-graph-node"}},[n._v("#")]),n._v(" Animation Graph Node")]),n._v(" "),t("h3",{attrs:{id:"h-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#h-2"}},[n._v("#")]),n._v(" .H")]),n._v(" "),t("p",[n._v('// Copyright 1998-2013 Epic Games, Inc. All Rights Reserved.\n \n#pragma once\n \n#include "AnimGraphDefinitions.h"\n#include "Kismet2/BlueprintEditorUtils.h"\n \n#include "AnimGraphNode_VictoryTurnInPlace.generated.h"\n \n//Whole point of this is to be wrapper for node struct\n//\t\tso it depends on it, and that node must compile first\n//\t\tfor type to be recognized\n \nUCLASS(MinimalAPI, dependson=FAnimNode_VictoryTurnInPlace)\nclass UAnimGraphNode_VictoryTurnInPlace : public UAnimGraphNode_Base\n{\nGENERATED_UCLASS_BODY()\n \nUPROPERTY(EditAnywhere, Category=Settings)\nFAnimNode_VictoryTurnInPlace Node;\n \npublic:\n// UEdGraphNode interface\nvirtual FString GetNodeTitle(ENodeTitleType::Type TitleType) const OVERRIDE;\nvirtual FLinearColor GetNodeTitleColor() const OVERRIDE;\nvirtual FString GetNodeCategory() const OVERRIDE;\n// End of UEdGraphNode interface\n \nprotected:\n// UAnimGraphNode_SkeletalControlBase interface\nvirtual FString GetControllerDescription() const;\n// End of UAnimGraphNode_SkeletalControlBase interface\n};')]),n._v(" "),t("h3",{attrs:{id:"cpp-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cpp-2"}},[n._v("#")]),n._v(" .CPP")]),n._v(" "),t("p",[n._v('// Copyright 1998-2013 Epic Games, Inc. All Rights Reserved.\n \n#include "VictoryGame.h"\n \n/////////////////////////////////////////////////////\n// UAnimGraphNode_VictoryTurnInPlace\n \nUAnimGraphNode_VictoryTurnInPlace::UAnimGraphNode_VictoryTurnInPlace(const FPostConstructInitializeProperties& PCIP)\n: Super(PCIP)\n{\n}\n \n//Title Color!\nFLinearColor UAnimGraphNode_VictoryTurnInPlace::GetNodeTitleColor() const\n{\nreturn FLinearColor(0,12,12,1);\n}\n \n//Node Category\nFString UAnimGraphNode_VictoryTurnInPlace::GetNodeCategory() const\n{\nreturn FString("Victory Anim Nodes");\n}\nFString UAnimGraphNode_VictoryTurnInPlace::GetControllerDescription() const\n{\nreturn TEXT("~~~ Victory Turn In Place ~~~");\n}\n \nFString UAnimGraphNode_VictoryTurnInPlace::GetNodeTitle(ENodeTitleType::Type TitleType) const\n{\nFString Result = *GetControllerDescription();\nResult += (TitleType == ENodeTitleType::ListView) ? TEXT("") : TEXT("\\n");\nreturn Result;\n}')]),n._v(" "),t("p",[n._v("Enjoy!")]),n._v(" "),t("p",[t("a",{attrs:{href:"/User:Rama",title:"User:Rama"}},[n._v("Rama")]),n._v(" ("),t("a",{attrs:{href:"/User_talk:Rama",title:"User talk:Rama"}},[n._v("talk")]),n._v(")")]),n._v(" "),t("p",[n._v("In UE 4.7 you need adequate include headers for FAnim* classes :")]),n._v(" "),t("ol",[t("li",[n._v('include "Runtime/Engine/Classes/Animation/AnimNodeBase.h"')]),n._v(" "),t("li",[n._v('include "Runtime/Engine/Classes/Animation/InputScaleBias.h"')]),n._v(" "),t("li",[n._v('include "Runtime/Engine/Classes/Animation/AnimNode_TwoWayBlend.h"')])]),n._v(" "),t("p",[n._v('Retrieved from "'),t("a",{attrs:{href:"https://wiki.unrealengine.com/index.php?title=Animation_Node,_Entire_Source_for_a_Turn_In_Place_Node&oldid=12295",target:"_blank",rel:"noopener noreferrer"}},[n._v("https://wiki.unrealengine.com/index.php?title=Animation_Node,_Entire_Source_for_a_Turn_In_Place_Node&oldid=12295"),t("OutboundLink")],1),n._v('"')]),n._v(" "),t("p",[t("a",{attrs:{href:"/Special:Categories",title:"Special:Categories"}},[n._v("Categories")]),n._v(":")]),n._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"/index.php?title=Category:Notes&action=edit&redlink=1",title:"Category:Notes (page does not exist)"}},[n._v("Notes")])]),n._v(" "),t("li",[t("a",{attrs:{href:"/Category:Code",title:"Category:Code"}},[n._v("Code")])])]),n._v(" "),t("p",[t("img",{attrs:{src:"https://tracking.unrealengine.com/track.png",alt:""}})])])}),[],!1,null,null,null);e.default=r.exports}}]);