<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<meta charset="UTF-8" /><title>Difference between revisions of "Blueprint Automated Door Tutorial" - Epic Wiki</title>
<meta name="generator" content="MediaWiki 1.22.2" />
<meta name="robots" content="noindex,nofollow" />
<link rel="shortcut icon" href="/favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="/opensearch_desc.php" title="Epic Wiki (en)" />
<link rel="EditURI" type="application/rsd+xml" href="https://wiki.unrealengine.com/api.php?action=rsd" />
<link rel="alternate" type="application/atom+xml" title="Epic Wiki Atom feed" href="/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="stylesheet" href="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.action.history.diff&amp;only=styles&amp;skin=vector&amp;*" />
<link rel="stylesheet" href="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.legacy.commonPrint%2Cshared%7Cskins.vector&amp;only=styles&amp;skin=vector&amp;*" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=vector&amp;*" />
<style>a:lang(ar),a:lang(ckb),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}
/* cache key: my_wiki:resourceloader:filter:minify-css:7:07b6a8ccf3fd62e770f192d0a6f8e123 */</style>

<script src="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Blueprint_Automated_Door_Tutorial","wgTitle":"Blueprint Automated Door Tutorial","wgCurRevisionId":4406,"wgRevisionId":474,"wgArticleId":219,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":[],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Blueprint_Automated_Door_Tutorial","wgIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgWikiEditorEnabledModules":{"toolbar":true,"dialogs":true,"hidesig":true,"templateEditor":false,"templates":false,"preview":true,"previewDialog":false,"publish":true,"toc":false}});
}</script><script>if(window.mw){
mw.loader.implement("user.options",function(){mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"vector","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"vector-simplesearch":1,"watchcreations":0,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,"watchlisthidebots":0,
"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"useeditwarning":1,"prefershttps":1,"usebetatoolbar":1,"usebetatoolbar-cgd":1,"wikieditor-preview":1,"wikieditor-publish":1,"language":"en","variant-gan":"gan","variant-iu":"iu","variant-kk":"kk","variant-ku":"ku","variant-shi":"shi","variant-sr":"sr","variant-tg":"tg","variant-uz":"uz","variant-zh":"zh","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false,"variant":"en"});},{},{});mw.loader.implement("user.tokens",function(){mw.user.tokens.set({"editToken":"+\\","patrolToken":false,"watchToken":false});},{},{});
/* cache key: my_wiki:resourceloader:filter:minify-js:7:27249162ef7002415c3792ce5dfd2a9a */
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.page.startup","mediawiki.legacy.wikibits","mediawiki.legacy.ajax","skins.vector.js"]);
}</script>
<!--[if lt IE 7]><style type="text/css">body{behavior:url("/skins/vector/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Blueprint_Automated_Door_Tutorial skin-vector action-view vector-animateLayout">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<div id="content" class="mw-body" role="main">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<h1 id="firstHeading" class="firstHeading" lang="en"><span dir="auto">Difference between revisions of "Blueprint Automated Door Tutorial"</span></h1>
			<div id="bodyContent">
								<div id="siteSub">From Epic Wiki</div>
								<div id="contentSub"></div>
												<div id="jump-to-nav" class="mw-jump">
					Jump to:					<a href="#mw-navigation">navigation</a>, 					<a href="#p-search">search</a>
				</div>
				<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><table class='diff diff-contentalign-left'>
				<col class='diff-marker' />
				<col class='diff-content' />
				<col class='diff-marker' />
				<col class='diff-content' />
				<tr style='vertical-align: top;'>
				<td colspan='2' class='diff-otitle'><div id="mw-diff-otitle1"><strong><a href="/index.php?title=Blueprint_Automated_Door_Tutorial&amp;oldid=473" title="Blueprint Automated Door Tutorial">Revision as of 17:20, 17 March 2014</a> (<a href="/index.php?title=Blueprint_Automated_Door_Tutorial&amp;action=edit&amp;oldid=473" title="Blueprint Automated Door Tutorial">view source</a>)</strong></div><div id="mw-diff-otitle2"><a href="/index.php?title=User:Wes_Bunn&amp;action=edit&amp;redlink=1" class="new mw-userlink" title="User:Wes Bunn (page does not exist)">Wes Bunn</a>  <span class="mw-usertoollinks">(<a href="/index.php?title=User_talk:Wes_Bunn&amp;action=edit&amp;redlink=1" class="new" title="User talk:Wes Bunn (page does not exist)">Talk</a> | <a href="/Special:Contributions/Wes_Bunn" title="Special:Contributions/Wes Bunn">contribs</a>)</span></div><div id="mw-diff-otitle3"> <span class="comment">(<a href="#INITIAL_SETUP">→</a>‎<span dir="auto"><span class="autocomment">INITIAL SETUP</span></span>)</span></div><div id="mw-diff-otitle5"></div><div id="mw-diff-otitle4"><a href="/index.php?title=Blueprint_Automated_Door_Tutorial&amp;diff=prev&amp;oldid=473" title="Blueprint Automated Door Tutorial" id="differences-prevlink">← Older edit</a></div></td>
				<td colspan='2' class='diff-ntitle'><div id="mw-diff-ntitle1"><strong><a href="/index.php?title=Blueprint_Automated_Door_Tutorial&amp;oldid=474" title="Blueprint Automated Door Tutorial">Revision as of 17:20, 17 March 2014</a> (<a href="/index.php?title=Blueprint_Automated_Door_Tutorial&amp;action=edit&amp;oldid=474" title="Blueprint Automated Door Tutorial">view source</a>) </strong></div><div id="mw-diff-ntitle2"><a href="/index.php?title=User:Wes_Bunn&amp;action=edit&amp;redlink=1" class="new mw-userlink" title="User:Wes Bunn (page does not exist)">Wes Bunn</a>  <span class="mw-usertoollinks">(<a href="/index.php?title=User_talk:Wes_Bunn&amp;action=edit&amp;redlink=1" class="new" title="User talk:Wes Bunn (page does not exist)">Talk</a> | <a href="/Special:Contributions/Wes_Bunn" title="Special:Contributions/Wes Bunn">contribs</a>)</span> </div><div id="mw-diff-ntitle3"> <span class="comment">(<a href="#INITIAL_SETUP">→</a>‎<span dir="auto"><span class="autocomment">INITIAL SETUP</span></span>)</span></div><div id="mw-diff-ntitle5"></div><div id="mw-diff-ntitle4"><a href="/index.php?title=Blueprint_Automated_Door_Tutorial&amp;diff=next&amp;oldid=474" title="Blueprint Automated Door Tutorial" id="differences-nextlink">Newer edit →</a></div></td>
				</tr><tr><td colspan="2" class="diff-lineno">Line 9:</td>
<td colspan="2" class="diff-lineno">Line 9:</td></tr>
<tr><td class='diff-marker'>&#160;</td><td class='diff-context'></td><td class='diff-marker'>&#160;</td><td class='diff-context'></td></tr>
<tr><td class='diff-marker'>&#160;</td><td class='diff-context'><div>In later tutorials, we will augment this system so that users can swap out the meshes used for the door and the door frame, override materials, and much more.</div></td><td class='diff-marker'>&#160;</td><td class='diff-context'><div>In later tutorials, we will augment this system so that users can swap out the meshes used for the door and the door frame, override materials, and much more.</div></td></tr>
<tr><td class='diff-marker'>−</td><td class='diff-deletedline'><div><del class="diffchange"></del></div></td><td colspan="2">&#160;</td></tr>
<tr><td class='diff-marker'>&#160;</td><td class='diff-context'></td><td class='diff-marker'>&#160;</td><td class='diff-context'></td></tr>
<tr><td class='diff-marker'>&#160;</td><td class='diff-context'></td><td class='diff-marker'>&#160;</td><td class='diff-context'></td></tr>
</table><hr class='diff-hr' />
		<h2 class='diff-currentversion-title'>Revision as of 17:20, 17 March 2014</h2>
<div id="toc" class="toc"><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#INITIAL_SETUP"><span class="tocnumber">1</span> <span class="toctext">INITIAL SETUP</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="#New_Blueprint"><span class="tocnumber">1.1</span> <span class="toctext">New Blueprint</span></a></li>
<li class="toclevel-2 tocsection-3"><a href="#Mesh_Components"><span class="tocnumber">1.2</span> <span class="toctext">Mesh Components</span></a></li>
<li class="toclevel-2 tocsection-4"><a href="#Box_Component"><span class="tocnumber">1.3</span> <span class="toctext">Box Component</span></a></li>
<li class="toclevel-2 tocsection-5"><a href="#Level_Testing"><span class="tocnumber">1.4</span> <span class="toctext">Level Testing</span></a></li>
<li class="toclevel-2 tocsection-6"><a href="#Initial_Event"><span class="tocnumber">1.5</span> <span class="toctext">Initial Event</span></a></li>
<li class="toclevel-2 tocsection-7"><a href="#Timeline_Setup"><span class="tocnumber">1.6</span> <span class="toctext">Timeline Setup</span></a></li>
<li class="toclevel-2 tocsection-8"><a href="#Testing_and_Debugging"><span class="tocnumber">1.7</span> <span class="toctext">Testing and Debugging</span></a></li>
<li class="toclevel-2 tocsection-9"><a href="#Closing_the_Door"><span class="tocnumber">1.8</span> <span class="toctext">Closing the Door</span></a></li>
<li class="toclevel-2 tocsection-10"><a href="#Adjusting_Motion"><span class="tocnumber">1.9</span> <span class="toctext">Adjusting Motion</span></a></li>
</ul>
</li>
</ul>
</div>

<h2><span class="mw-headline" id="INITIAL_SETUP">INITIAL SETUP</span></h2>
<p>This first series of tutorials offers an introductory view to the world of working with Blueprints. Throughout this example, you will be creating a modular automated door in the most basic sense, including the following features:
</p>
<ul>
<li> A pair of static meshes serving as a door frame and door.
</li>
<li> A Box Component which will serve as a trigger volume for proximity calculation.
</li>
<li> A Blueprint node network which will drive animation of the door.
</li>
</ul>
<p><br />
In later tutorials, we will augment this system so that users can swap out the meshes used for the door and the door frame, override materials, and much more.
</p><p><br />
</p>
<h3><span class="mw-headline" id="New_Blueprint">New Blueprint</span></h3>
<p>1. Within the Content Browser, create a new folder with the name of your choice. Select this folder so that your new Blueprints will be placed within it.
</p><p>	![](NewFolder.png)
</p><p>2. Right-click in the Content Browser and choose New Blueprint.
</p><p>	![](NewBlueprint.png)
</p><p>3. The Pick Parent Class window will appear. Expand _Object_ and select _Actor_. This means you are creating a placeable Blueprint Actor. Click&#160;![](button_Ok.png).
</p><p>	![](PickParentClass.png)
</p><p>4. For the Blueprint's name, choose _Tutorial_Door_. Press Enter. This creates a new blank Blueprint ready for construction.
</p><p>	![](TutorialDoor_Blueprint.png)
</p><p>5. One of the most critical steps when working with Blueprints is to save your work often. There are a few ways to do this. For our purposes, we will use the Save button in the Content Browser. Click this now.
</p><p><br />
You can always verify when a Blueprint requires saving by looking at its icon in the Content Browser. In the lower left corner of the icon, you will see a small silver asterisk for any asset you should save. This asterisk can be seen in the image above, and will disappear once the most recent changes to a Blueprint have been saved.
</p>
<h3><span class="mw-headline" id="Mesh_Components">Mesh Components</span></h3>
<p>1. Please continue from Tutorial 1.1.
</p><p>	![](Resources/Tutorials/Blueprints/AutomatedDoor/Part_1_InitialSetup/Door_1_01/TutorialDoor_Blueprint.png)
</p><p>2. Right-click Tutorial_Door and choose _Open in Full Editor_. This will open the Blueprint Editor.
</p><p>	![](FullEditor.png)
</p><p>3. Click the Components button to open the Component Previewer.
</p><p>	![](ComponentTab2.png)
</p><p>	![](ComponentEditor.png)(w:700)
</p><p>4. In the Content Browser, locate the S_LT_Doors_SM_Door05 static mesh (a copy of this asset is contained within the [assets for these tutorials](Resources/Tutorials/Blueprints\AutomatedDoor\AutomatedDoor_Content.zip) for convenience)
</p><p>	![](Doorway.png)
</p><p>5. Click Add Component. 
</p><p>	![](AddComponentButton2.png)
</p><p>6. Select the new _Unnamed StaticMeshComponent_. In the Details panel, set the Variable name to **DoorFrame**. 
</p><p>	![](NameDoorFrame.png)
</p><p>7. In the Content Browser, locate the S_LT_Doors_SM_DoorWay05 static mesh (a copy of this asset is contained within the [assets for these tutorials](Resources/Tutorials/Blueprints\AutomatedDoor\AutomatedDoor_Content.zip) for convenience). 
</p><p>	![](DoorMesh.png)
</p><p>8. Click the Component list again and choose Selected Asset at the top. Click Add Component, then set the variable name for the new static mesh component to **Door**.
</p><p>	![](DoorFramePlaced.png)
</p><p>9. In the Component Viewport, you should now see the door and the doorway mesh.
</p><p>	![](DoorAssembled.png)(w:600)
</p><p>10. Save your Blueprint by choosing File &gt; Save in the Blueprint Editor.
</p><p>	![](SaveBlueprint2.png)
</p>
<h3><span class="mw-headline" id="Box_Component">Box Component</span></h3>
<p>1. Please continue from Tutorial 1.2. Within the _Tutorial_Door_ Blueprint, make sure you're looking at the ComponentList.
</p><p>2. From the Add Component dropdown, choose **Box**. Set the Variable name to _TriggerVolume_.
</p><p>	![](TriggerVolumeAdded.png)
</p><p>3. With the _TriggerVolume_ BoxComponent selected, look at the Details panel. In the Shape category, set **Box Extent** to &lt;192, 192, 128&gt;.
</p><p>	![](ShapeBoxExtent.png)
</p><p>4. Scroll up to the Transform section of the Details panel and set **Location** to &lt;0, 0, 128&gt;.
</p><p>	![](RelativeLocation.png)
</p><p>5. Scroll down to the Collision group. Make sure that _Collision Presets_ is set to **Custom**. Check the box immediately under _Ignore_, then in the _Pawn_ row check the **Overlap** checkbox. This means that when the pawn touches this component, it will register an overlap contact, rather than being blocked altogether.
</p><p>	![](CollisionSettingsCheckboxes.png)
</p><p>6. Compile with **F7**, then save your Blueprint.
</p>
<h3><span class="mw-headline" id="Level_Testing">Level Testing</span></h3>
<p>1. Please continue from Tutorial 1.3. Open the Content Browser and locate _Tutorial_Door_. 
</p><p>2. Drag and drop _Tutorial_Door_ into your level.
</p><p>	![](DragDropBlueprint.png)(w:720)
</p><p>3. Save your level and your Blueprint.
</p>
<h3><span class="mw-headline" id="Initial_Event">Initial Event</span></h3>
<p>We will now begin setting up the system by which the door will move. In previous versions of the engine, this would be handled via a Matinee sequence. However, such a setup required that one modify keyframes to change door behavior. Here, we will set up start and end points for the door and linearly interpolate between them. 
</p><p><br />
1. Please continue from Tutorial 1.4. Open the _Tutorial_Door_ Blueprint in the Blueprint Editor. 
</p><p>2. Click the **Script** button and select the **Event Graph** tab to show the Event Graph.
</p><p>	![](EventGraphScriptWindow.png)(w:720)
</p><p>3. In the _My Blueprint_ tab, select the Trigger Volume variable.
</p><p>	![](TriggerVolumeSelected.png)
</p><p>4. Right-click in the Blueprint Event Graph. Start typing "ComponentBeginOverlap." You will see **OnComponentBeginOverlap** appear in the list. Click it to create a new ReceiveComponentTouch event.
</p><p>	![](ComponentBeginOverlapList.png)
</p><p>	![](OnComponentBeginOverlapNode.png)
</p><p>This event is fired whenever another actor touches the Blueprint actor. Since the box component only calculates touches from the pawn, this means that the event will be fired as a pawn (the player in this case) passes into the box component. This causes the box component to behave like a trigger volume.
</p><p>5. We will now set up the linear interpolation (lerp) system. However, note that until we create some sort of driving force, our lerp will not actually produce any motion. Right-click and type "lerp" in the search line. From the filtered selections, choose **Lerp (vector)**.
</p><p>	![](LerpVectorList.png)
</p><p>	![](LerpVectorNodeAdded.png)
</p><p>6. On the **Lerp (Vector)** node, right-click on the **A** input vector plug and choose **Promote to Variable**. Name the variable _DoorStart_.
</p><p>	![](PromoteToVariableMenu.png)
</p><p>	![](NameVariableDoorStart.png)
</p><p>	![](DoorStartVariableInPlace.png)
</p><p>7. Right-click on the **B** input vector plug and choose **Promote to Variable.** Name this variable _DoorEnd_. 
</p><p>	![](DoorEndVariableInPlace.png)
</p><p>8. In the My Blueprint tab on the upper right side of the Blueprint Editor, select the Door End variable and click the Public Variable button. It will turn to an open eye and appear yellow, indicating that the variable is public, but requires a tooltip.
</p><p>	![](DoorEndPublicMyBlueprint.png)
</p><p>9. Select the _Door End_ variable in the _My Blueprint_ panel. In the _Details_ panel, check the **Show 3D Widget** option. In the **Category** field, enter "Door Setup." Also, add a tooltip. Something like, "Sets the end location for the motion of the door."
</p><p>	![](DoorEndVariableSetup.png)
</p><p>10. Select the _DoorStart_ variable and enter "Door Setup" for the **Category** in the _Details_ panel. This will cause DoorStart and DoorEnd to be placed under the DoorSetup category. Compile.
</p><p>	![](DoorStartSetup.png)
</p><p>11. At the top of the Blueprint Editor, click the Defaults button. Set the Z value of **Door End** to _288_.
</p><p>	![](DoorEndSetupDefault.png)
</p><p>12. Compile and save your Blueprint.
</p>
<h3><span class="mw-headline" id="Timeline_Setup">Timeline Setup</span></h3>
<p>We have everything in place to have a working door. We just need to set the driving system that will cause the door to animate. Think of this like adding a motor to the door. In this case, we will use a Timeline, which allows for the creation of simple interpolation calculations between keyframes.
</p><p><br />
See Timelines documentation for more details.
</p><p><br />
1. Please continue from Tutorial 1.5. Open the Tutorial_Door Blueprint in the Blueprint Editor. 
</p><p>2. Within the Blueprint Editor Event Graph, right-click and choose Add Timeline...
</p><p>	![](TimelineContextMenu.png)&#160;![](TimelineNodeAdded.png)(h:214)
</p><p>3. Set the name to "Timeline - Door Driver". Press Enter. 
</p><p>	![](RenameTimeline_1.png)&#160;![](DoorDriverTimelineNode.png)(h:288)
</p><p>Timelines are serialized when created, meaning the name will generally be "Timeline_X" with X representing some number. By renaming your Timelines, it will be much clearer what each one is intended to do.
</p><p>When you first rename the Timeline, you may see an Error on it. Simply recompile and it should disappear.
</p><p>4. Double-click the Timeline node to open a Timeline Editor tab. 
</p><p>	![](TimelineEditorWindow.png)
</p><p>5. Click the&#160;![](button_AddFloatTrackTimeline.png) button. Set the Track Name to "Driver."
</p><p>	![](DriverTrackAdded.png)
</p><p>6. Within the Timeline curve window to the right, **Shift-click** on the default curve somewhere near the (0,0) coordinate. It does not have to be precisely at that location. This will create a keyframe along the timeline.
</p><p>	![](AddedNewKeyframe.png)
</p><p>7. Select the new keyframe by clicking it. You will see two numeric input fields at the top of the window. The one on the left sets the time index of the keyframe, the one on the right sets the value. Set both of these inputs to 0.0, defining a relative translation of 0.0 at the beginning of the timeline.
</p><p>	![](SetValuesToZeroInTimeline.png)
</p><p>8. Use Shift-click to create a second keyframe. Select the new keyframe and set the time field to 1.5 seconds and the value field to 1.0.
</p><p>	![](SecondKeyAdded.PNG)
</p><p>In order to see the curve in its entirety, you may need to click the&#160;![Zoom to Fit Horizontal](button_Horizontal.png) and&#160;![Zoom to Fit Vertical](button_Vertical.png) buttons, located in the upper left of the Timeline graph!
</p><p>9. Before leaving the Timeline Editor, make sure to check the **Use Last Keyframe?** checkbox. This will keep the Timeline from calculating beyond the end of the final keyframe, which would give you several seconds of dead animation after the door had opened. 
</p><p>	![](UseLastKeyframecheckbox.PNG)
</p><p>10. Return to the Event Graph and connect the **Driver** output of the Timeline to the Alpha input of the Lerp (vector) node.
</p><p>	![](TimelineToLerp.png)
</p><p>11. We now need to set up the node that will move the door. Select the Door component variable in the My Blueprint panel. Then right click in the graph and type "set Relative Location." This will create the node with the Door variable attached.
</p><p>	![](SetRelativeLocation.png)
</p><p>12. Finally, it's time to hook up our event, which should initiate Timeline playback and thereby open our door. Connect the output pin of the **OnComponentBeginOverlap** event to the Play input on the **Timeline - Door Driver**. Then connect the Timeline's **Update** pin to the execution input of the Set Relative Location. Finally, connect the **Return Value** of the Lerp (Vector) node to the **New Location** input on the Set Relative Location node.
</p><p>![](OverlapEventAdded.png)
</p><p>13. Compile and Save your Blueprint.
</p>
<h3><span class="mw-headline" id="Testing_and_Debugging">Testing and Debugging</span></h3>
<p>In this tutorial we take a moment to drop our Blueprint into a level and give it a test. At this point, your doorway should be opening when the player approaches it. One of the great benefits of Blueprints of this sort is that we can easily test them out at any time by simply dropping the Blueprint actor into a level and then using Play In Editor to see how they're working. 
</p><p><br />
Blueprints are error-checked every time they are compiled. If there are any errors within the node network, a window will appear in which all such errors are listed, along with links to jump you directly to the problem.
</p><p><br />
1. Please continue from Tutorial 1.6. Open the _Tutorial_Door_ Blueprint in the Blueprint Editor. 
</p><p>2. Be sure that the Blueprint has been fully compiled (press F7) in the Blueprint Editor. Should there be any errors that appear, click on the hyperlink within the error entry. The error itself should spell out the nature of the problem. Your network should look something like this:
</p><p>![](OverlapEventAdded.png)(w:720)
</p><p>3. The Blueprint should be functional at this point. With the Blueprint placed in the level, press the Play in Editor button. When the player walks into the volume of the Box Component, the door should open.
</p><p>![](DoorOpening.png)(w:720)
</p><p>4. Save your level.
</p>
<h3><span class="mw-headline" id="Closing_the_Door">Closing the Door</span></h3>
<p>When testing the level, you might have noticed that the door opens but does not close. In this tutorial, we will set up a counter event that causes the door to close when the player exits the volume of the BoxComponent.
</p><p><br />
1. Please continue from Tutorial 1.7. Open the _Tutorial_Door_ Blueprint in the Blueprint Editor. 
</p><p>2. Select the Trigger Volume component variable. Right click near the Timeline and type "OnComponentEnd," which will bring up the _OnComponentEndOverlap_ event. This event is fired whenever an object exits the BoxComponent.
</p><p>![](OnComponentEndOverlapNode.png)
</p><p>![](OnComponentEndOverlapNodeAdded.png)
</p><p>3. Connect the output execution plug of the OnComponentEndOverlap event to the Reverse input of the Timeline. This will cause the Timeline to play backwards when the BoxComponent volume is exited, thereby closing the door.
</p><p>![](DoorNetwork.png)(w:720)&#160;![](DoorClosingArrows.png)(w:720)
</p><p>4. Compile your Blueprint by pressing the Compile button and test the level. Your door should now open and close.
</p>
<h3><span class="mw-headline" id="Adjusting_Motion">Adjusting Motion</span></h3>
<p>In this tutorial, we will adjust the animation curve of the door's motion, causing it to start by moving quickly upward, but slowing to a stop. Because we are playing the same motion back to close the door, we the door will accelerate as it comes back down.
</p><p><br />
1. Please continue from Tutorial 1.8. Open the _Tutorial_Door_ Blueprint in the Blueprint Editor. 
</p><p>2. Within the Blueprint Editor, double-click the Timeline node to open it in the Timeline Editor.
</p><p>![](SecondKeyAdded.PNG)
</p><p>3. Select the first keyframe by clicking it. Right-click on the keyframe and choose Cubic-locked. This will add user-controlled tangent handles to the keyframe so that you can adjust its shape.
</p><p>![](CubicLockedKeyframe1.png)
</p><p>4. Repeat this process with the second keyframe, so that they are both set to Cubic-locked.
</p><p>5. Move the inner tangent handles (the right for the first keyframe, left for the second) up slightly to shape the curve into an upward ramp that planes off at the end.
</p><p>![](CurveAdjusted.png)
</p><p>6. Compile and test. The door should start opening very quickly, slowing as it ascends. When closing, it starts slow and accelerates as it descends.
</p><p>![](DoorSlowingAsAscending.png)
</p><p>7. Save your Blueprint.
</p>
<!-- 
NewPP limit report
CPU time usage: 0.016 seconds
Real time usage: 0.016 seconds
Preprocessor visited node count: 38/1000000
Preprocessor generated node count: 44/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
-->
</div>								<div class="printfooter">
				Retrieved from "<a href="https://wiki.unrealengine.com/index.php?title=Blueprint_Automated_Door_Tutorial&amp;oldid=474">https://wiki.unrealengine.com/index.php?title=Blueprint_Automated_Door_Tutorial&amp;oldid=474</a>"				</div>
												<div id='catlinks' class='catlinks catlinks-allhidden'></div>												<div class="visualClear"></div>
							</div>
		</div>
		<div id="mw-navigation">
			<h2>Navigation menu</h2>
			<div id="mw-head">
				<div id="p-personal" role="navigation" class="" aria-labelledby="p-personal-label">
	<h3 id="p-personal-label">Personal tools</h3>
	<ul>
<li id="pt-createaccount"><a href="/index.php?title=Special:UserLogin&amp;returnto=Blueprint+Automated+Door+Tutorial&amp;returntoquery=diff%3D474%26oldid%3Dprev&amp;type=signup">Create account</a></li><li id="pt-login"><a href="/index.php?title=Special:UserLogin&amp;returnto=Blueprint+Automated+Door+Tutorial&amp;returntoquery=diff%3D474%26oldid%3Dprev" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>	</ul>
</div>
				<div id="left-navigation">
					<div id="p-namespaces" role="navigation" class="vectorTabs" aria-labelledby="p-namespaces-label">
	<h3 id="p-namespaces-label">Namespaces</h3>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="/Blueprint_Automated_Door_Tutorial"  title="View the content page [c]" accesskey="c">Page</a></span></li>
					<li  id="ca-talk" class="new"><span><a href="/index.php?title=Talk:Blueprint_Automated_Door_Tutorial&amp;action=edit&amp;redlink=1"  title="Discussion about the content page [t]" accesskey="t">Discussion</a></span></li>
			</ul>
</div>
<div id="p-variants" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-variants-label">
	<h3 id="mw-vector-current-variant">
		</h3>
	<h3 id="p-variants-label"><span>Variants</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
				</div>
				<div id="right-navigation">
					<div id="p-views" role="navigation" class="vectorTabs" aria-labelledby="p-views-label">
	<h3 id="p-views-label">Views</h3>
	<ul>
					<li id="ca-view" class="selected"><span><a href="/Blueprint_Automated_Door_Tutorial" >Read</a></span></li>
					<li id="ca-viewsource"><span><a href="/index.php?title=Blueprint_Automated_Door_Tutorial&amp;action=edit&amp;oldid=474"  title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="/index.php?title=Blueprint_Automated_Door_Tutorial&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">View history</a></span></li>
			</ul>
</div>
<div id="p-cactions" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-cactions-label">
	<h3 id="p-cactions-label"><span>Actions</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
<div id="p-search" role="search">
	<h3><label for="searchInput">Search</label></h3>
	<form action="/index.php" id="searchform">
				<div id="simpleSearch">
						<input name="search" placeholder="Search" title="Search Epic Wiki [f]" accesskey="f" id="searchInput" />						<button type="submit" name="button" title="Search the pages for this text" id="searchButton"><img src="/skins/vector/images/search-ltr.png?303" alt="Search" width="12" height="13" /></button>								<input type='hidden' name="title" value="Special:Search"/>
		</div>
	</form>
</div>
				</div>
			</div>
			<div id="mw-panel">
					<div id="p-logo" role="banner"><a style="background-image: url(/images/WikiLogo_uev2.png);" href="/Main_Page"  title="Visit the main page"></a></div>
				<div class="portal" role="navigation" id='p-navigation' aria-labelledby='p-navigation-label'>
	<h3 id='p-navigation-label'>Navigation</h3>
	<div class="body">
		<ul>
			<li id="n-mainpage"><a href="/Main_Page" title="Visit the main page [z]" accesskey="z">Main Page</a></li>
			<li id="n-Tutorials"><a href="/Category:Tutorials">Tutorials</a></li>
			<li id="n-Videos"><a href="/Videos">Videos</a></li>
			<li id="n-Plug-ins"><a href="/Category:Plug-ins">Plug-ins</a></li>
			<li id="n-Code"><a href="/Category:Code">Code</a></li>
			<li id="n-Games"><a href="/Category:Games">Games</a></li>
			<li id="n-Unreal-Tournament"><a href="/Category:Unreal_Tournament">Unreal Tournament</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-tb' aria-labelledby='p-tb-label'>
	<h3 id='p-tb-label'>Tools</h3>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="/Special:WhatLinksHere/Blueprint_Automated_Door_Tutorial" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="/Special:RecentChangesLinked/Blueprint_Automated_Door_Tutorial" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-specialpages"><a href="/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li id="t-print"><a href="/index.php?title=Blueprint_Automated_Door_Tutorial&amp;diff=474&amp;oldid=prev&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>
			<li id="t-permalink"><a href="/index.php?title=Blueprint_Automated_Door_Tutorial&amp;oldid=474" title="Permanent link to this revision of the page">Permanent link</a></li>
			<li id="t-info"><a href="/index.php?title=Blueprint_Automated_Door_Tutorial&amp;action=info">Page information</a></li>
		</ul>
	</div>
</div>
			</div>
		</div>
		<div id="footer" role="contentinfo">
										<ul id="footer-icons" class="noprint">
					<li id="footer-copyrightico">
						<div name="copyright">&#169; 2004-2014, Epic Games, Inc. All rights reserved. Epic Games, Unreal, Unreal Engine, Unreal Tournament, and their respective logos are Epic's trademarks or registered trademarks in the US and elsewhere.</div>
					</li>
					<li id="footer-termsofuseico">
						<div name="termsofuse"><a href="http://epicgames.com/tou" target="_blank">Terms of Use</a></div>
					</li>
					<li id="footer-privacynoticeico">
						<div name="privacynotice"><a href="http://epicgames.com/privacynotice" target="_blank">Privacy Policy</a></div>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>
		<script>/*<![CDATA[*/window.jQuery && jQuery.ready();/*]]>*/</script><script>if(window.mw){
mw.loader.state({"site":"loading","user":"ready","user.groups":"ready"});
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.searchSuggest","skins.vector.collapsibleNav"],null,true);
}</script>
<script src="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=vector&amp;*"></script>
<!-- Served in 0.084 secs. -->
	</body>
</html>
