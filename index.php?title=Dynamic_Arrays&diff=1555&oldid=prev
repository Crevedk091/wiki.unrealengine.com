<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<meta charset="UTF-8" /><title>Difference between revisions of "Dynamic Arrays" - Epic Wiki</title>
<meta name="generator" content="MediaWiki 1.22.2" />
<meta name="robots" content="noindex,nofollow" />
<link rel="shortcut icon" href="/favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="/opensearch_desc.php" title="Epic Wiki (en)" />
<link rel="EditURI" type="application/rsd+xml" href="https://wiki.unrealengine.com/api.php?action=rsd" />
<link rel="alternate" type="application/atom+xml" title="Epic Wiki Atom feed" href="/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="stylesheet" href="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.legacy.commonPrint%2Cshared%7Cskins.vector&amp;only=styles&amp;skin=vector&amp;*" />
<link rel="stylesheet" href="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.action.history.diff&amp;only=styles&amp;skin=vector&amp;*" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=vector&amp;*" />
<style>a:lang(ar),a:lang(ckb),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}
/* cache key: my_wiki:resourceloader:filter:minify-css:7:07b6a8ccf3fd62e770f192d0a6f8e123 */</style>

<script src="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Dynamic_Arrays","wgTitle":"Dynamic Arrays","wgCurRevisionId":7018,"wgRevisionId":1555,"wgArticleId":698,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Code"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Dynamic_Arrays","wgIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgWikiEditorEnabledModules":{"toolbar":true,"dialogs":true,"hidesig":true,"templateEditor":false,"templates":false,"preview":true,"previewDialog":false,"publish":true,"toc":false}});
}</script><script>if(window.mw){
mw.loader.implement("user.options",function(){mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"vector","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"vector-simplesearch":1,"watchcreations":0,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,"watchlisthidebots":0,
"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"useeditwarning":1,"prefershttps":1,"usebetatoolbar":1,"usebetatoolbar-cgd":1,"wikieditor-preview":1,"wikieditor-publish":1,"language":"en","variant-gan":"gan","variant-iu":"iu","variant-kk":"kk","variant-ku":"ku","variant-shi":"shi","variant-sr":"sr","variant-tg":"tg","variant-uz":"uz","variant-zh":"zh","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false,"variant":"en"});},{},{});mw.loader.implement("user.tokens",function(){mw.user.tokens.set({"editToken":"+\\","patrolToken":false,"watchToken":false});},{},{});
/* cache key: my_wiki:resourceloader:filter:minify-js:7:27249162ef7002415c3792ce5dfd2a9a */
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.page.startup","mediawiki.legacy.wikibits","mediawiki.legacy.ajax","skins.vector.js"]);
}</script>
<style type="text/css">/*<![CDATA[*/
.source-cpp {line-height: normal;}
.source-cpp li, .source-cpp pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for cpp
 * CSS class: source-cpp, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.cpp.source-cpp .de1, .cpp.source-cpp .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.cpp.source-cpp  {font-family:monospace;}
.cpp.source-cpp .imp {font-weight: bold; color: red;}
.cpp.source-cpp li, .cpp.source-cpp .li1 {font-weight: normal; vertical-align:top;}
.cpp.source-cpp .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.cpp.source-cpp .li2 {font-weight: bold; vertical-align:top;}
.cpp.source-cpp .kw1 {color: #0000ff;}
.cpp.source-cpp .kw2 {color: #0000ff;}
.cpp.source-cpp .kw3 {color: #0000dd;}
.cpp.source-cpp .kw4 {color: #0000ff;}
.cpp.source-cpp .co1 {color: #666666;}
.cpp.source-cpp .co2 {color: #339900;}
.cpp.source-cpp .coMULTI {color: #ff0000; font-style: italic;}
.cpp.source-cpp .es0 {color: #000099; font-weight: bold;}
.cpp.source-cpp .es1 {color: #000099; font-weight: bold;}
.cpp.source-cpp .es2 {color: #660099; font-weight: bold;}
.cpp.source-cpp .es3 {color: #660099; font-weight: bold;}
.cpp.source-cpp .es4 {color: #660099; font-weight: bold;}
.cpp.source-cpp .es5 {color: #006699; font-weight: bold;}
.cpp.source-cpp .br0 {color: #008000;}
.cpp.source-cpp .sy0 {color: #008000;}
.cpp.source-cpp .sy1 {color: #000080;}
.cpp.source-cpp .sy2 {color: #000040;}
.cpp.source-cpp .sy3 {color: #000040;}
.cpp.source-cpp .sy4 {color: #008080;}
.cpp.source-cpp .st0 {color: #FF0000;}
.cpp.source-cpp .nu0 {color: #0000dd;}
.cpp.source-cpp .nu6 {color: #208080;}
.cpp.source-cpp .nu8 {color: #208080;}
.cpp.source-cpp .nu12 {color: #208080;}
.cpp.source-cpp .nu16 {color:#800080;}
.cpp.source-cpp .nu17 {color:#800080;}
.cpp.source-cpp .nu18 {color:#800080;}
.cpp.source-cpp .nu19 {color:#800080;}
.cpp.source-cpp .me1 {color: #007788;}
.cpp.source-cpp .me2 {color: #007788;}
.cpp.source-cpp .ln-xtra, .cpp.source-cpp li.ln-xtra, .cpp.source-cpp div.ln-xtra {background-color: #ffc;}
.cpp.source-cpp span.xtra { display:block; }

/*]]>*/
</style><!--[if lt IE 7]><style type="text/css">body{behavior:url("/skins/vector/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Dynamic_Arrays skin-vector action-view vector-animateLayout">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<div id="content" class="mw-body" role="main">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<h1 id="firstHeading" class="firstHeading" lang="en"><span dir="auto">Difference between revisions of "Dynamic Arrays"</span></h1>
			<div id="bodyContent">
								<div id="siteSub">From Epic Wiki</div>
								<div id="contentSub"></div>
												<div id="jump-to-nav" class="mw-jump">
					Jump to:					<a href="#mw-navigation">navigation</a>, 					<a href="#p-search">search</a>
				</div>
				<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><table class='diff diff-contentalign-left'>
				<col class='diff-marker' />
				<col class='diff-content' />
				<col class='diff-marker' />
				<col class='diff-content' />
				<tr style='vertical-align: top;'>
				<td colspan='2' class='diff-otitle'><div id="mw-diff-otitle1"><strong><a href="/index.php?title=Dynamic_Arrays&amp;oldid=1553" title="Dynamic Arrays">Revision as of 02:42, 21 March 2014</a> (<a href="/index.php?title=Dynamic_Arrays&amp;action=edit&amp;oldid=1553" title="Dynamic Arrays">view source</a>)</strong></div><div id="mw-diff-otitle2"><a href="/User:Rama" title="User:Rama" class="mw-userlink">Rama</a>  <span class="mw-usertoollinks">(<a href="/User_talk:Rama" title="User talk:Rama">Talk</a> | <a href="/Special:Contributions/Rama" title="Special:Contributions/Rama">contribs</a>)</span></div><div id="mw-diff-otitle3"></div><div id="mw-diff-otitle5"></div><div id="mw-diff-otitle4"><a href="/index.php?title=Dynamic_Arrays&amp;diff=prev&amp;oldid=1553" title="Dynamic Arrays" id="differences-prevlink">‚Üê Older edit</a></div></td>
				<td colspan='2' class='diff-ntitle'><div id="mw-diff-ntitle1"><strong><a href="/index.php?title=Dynamic_Arrays&amp;oldid=1555" title="Dynamic Arrays">Revision as of 02:43, 21 March 2014</a> (<a href="/index.php?title=Dynamic_Arrays&amp;action=edit&amp;oldid=1555" title="Dynamic Arrays">view source</a>) </strong></div><div id="mw-diff-ntitle2"><a href="/User:Rama" title="User:Rama" class="mw-userlink">Rama</a>  <span class="mw-usertoollinks">(<a href="/User_talk:Rama" title="User talk:Rama">Talk</a> | <a href="/Special:Contributions/Rama" title="Special:Contributions/Rama">contribs</a>)</span> </div><div id="mw-diff-ntitle3"></div><div id="mw-diff-ntitle5"></div><div id="mw-diff-ntitle4"><a href="/index.php?title=Dynamic_Arrays&amp;diff=next&amp;oldid=1555" title="Dynamic Arrays" id="differences-nextlink">Newer edit ‚Üí</a></div></td>
				</tr><tr><td colspan="2" class="diff-lineno">Line 161:</td>
<td colspan="2" class="diff-lineno">Line 161:</td></tr>
<tr><td class='diff-marker'>&#160;</td><td class='diff-context'></td><td class='diff-marker'>&#160;</td><td class='diff-context'></td></tr>
<tr><td class='diff-marker'>&#160;</td><td class='diff-context'><div>//Print out each flower's UE4 Name</div></td><td class='diff-marker'>&#160;</td><td class='diff-context'><div>//Print out each flower's UE4 Name</div></td></tr>
<tr><td class='diff-marker'>‚àí</td><td class='diff-deletedline'><div><del class="diffchange diffchange-inline">void AMyPlayerController::PrintCurrentFlowerNames</del>()</div></td><td class='diff-marker'>+</td><td class='diff-addedline'><div>&#160;</div></td></tr>
<tr><td colspan="2">&#160;</td><td class='diff-marker'>+</td><td class='diff-addedline'><div><ins class="diffchange diffchange-inline">AFlower* CurFlower = NULL;</ins></div></td></tr>
<tr><td colspan="2">&#160;</td><td class='diff-marker'>+</td><td class='diff-addedline'><div><ins class="diffchange diffchange-inline">for</ins>(<ins class="diffchange diffchange-inline">int32 b; b &lt; Flowers.Num(); b++</ins>)</div></td></tr>
<tr><td class='diff-marker'>&#160;</td><td class='diff-context'><div>{</div></td><td class='diff-marker'>&#160;</td><td class='diff-context'><div>{</div></td></tr>
<tr><td class='diff-marker'>‚àí</td><td class='diff-deletedline'><div>	<del class="diffchange diffchange-inline">AFlower* CurFlower = NULL;</del></div></td><td class='diff-marker'>+</td><td class='diff-addedline'><div>	CurFlower = Flowers[b];</div></td></tr>
<tr><td class='diff-marker'>‚àí</td><td class='diff-deletedline'><div><del class="diffchange diffchange-inline">	for(int32 b; b &lt; Flowers.Num(); b++)</del></div></td><td class='diff-marker'>+</td><td class='diff-addedline'><div><ins class="diffchange diffchange-inline">	</ins>if(!CurFlower) continue;</div></td></tr>
<tr><td class='diff-marker'>‚àí</td><td class='diff-deletedline'><div><del class="diffchange diffchange-inline">	{</del></div></td><td class='diff-marker'>+</td><td class='diff-addedline'><div><ins class="diffchange diffchange-inline">	</ins>if(!CurFlower-&gt;IsValidLowLevel()) continue;</div></td></tr>
<tr><td class='diff-marker'>‚àí</td><td class='diff-deletedline'><div><del class="diffchange diffchange-inline">		</del>CurFlower = Flowers[b];</div></td><td class='diff-marker'>+</td><td class='diff-addedline'><div><ins class="diffchange diffchange-inline">	</ins>//~~~~~~~~~~~~~~~~~~~~~~</div></td></tr>
<tr><td class='diff-marker'>‚àí</td><td class='diff-deletedline'><div><del class="diffchange diffchange-inline">		</del>if(!CurFlower) continue;</div></td><td class='diff-marker'>+</td><td class='diff-addedline'><div></div></td></tr>
<tr><td class='diff-marker'>‚àí</td><td class='diff-deletedline'><div><del class="diffchange diffchange-inline">		</del>if(!CurFlower-&gt;IsValidLowLevel()) continue;</div></td><td class='diff-marker'>+</td><td class='diff-addedline'><div></div></td></tr>
<tr><td class='diff-marker'>‚àí</td><td class='diff-deletedline'><div><del class="diffchange diffchange-inline">		</del>//~~~~~~~~~~~~~~~~~~~~~~</div></td><td class='diff-marker'>+</td><td class='diff-addedline'><div></div></td></tr>
<tr><td class='diff-marker'>&#160;</td><td class='diff-context'><div>		</div></td><td class='diff-marker'>&#160;</td><td class='diff-context'><div>		</div></td></tr>
<tr><td class='diff-marker'>‚àí</td><td class='diff-deletedline'><div><del class="diffchange diffchange-inline">		</del>ClientMessage(CurFlower-&gt;GetName());</div></td><td class='diff-marker'>+</td><td class='diff-addedline'><div><ins class="diffchange diffchange-inline">	</ins>ClientMessage(CurFlower-&gt;GetName());</div></td></tr>
<tr><td class='diff-marker'>‚àí</td><td class='diff-deletedline'><div><del class="diffchange diffchange-inline">	}</del></div></td><td class='diff-marker'>+</td><td class='diff-addedline'><div></div></td></tr>
<tr><td class='diff-marker'>&#160;</td><td class='diff-context'><div>}</div></td><td class='diff-marker'>&#160;</td><td class='diff-context'><div>}</div></td></tr>
<tr><td colspan="2">&#160;</td><td class='diff-marker'>+</td><td class='diff-addedline'><div><ins class="diffchange"></ins></div></td></tr>
<tr><td class='diff-marker'>&#160;</td><td class='diff-context'><div>&lt;/syntaxhighlight&gt;</div></td><td class='diff-marker'>&#160;</td><td class='diff-context'><div>&lt;/syntaxhighlight&gt;</div></td></tr>
<tr><td class='diff-marker'>&#160;</td><td class='diff-context'></td><td class='diff-marker'>&#160;</td><td class='diff-context'></td></tr>
</table><hr class='diff-hr' />
		<h2 class='diff-currentversion-title'>Revision as of 02:43, 21 March 2014</h2>
<div id="toc" class="toc"><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Overview"><span class="tocnumber">1</span> <span class="toctext">Overview</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Available_Types"><span class="tocnumber">2</span> <span class="toctext">Available Types</span></a>
<ul>
<li class="toclevel-2 tocsection-3"><a href="#C.2B.2B_Type"><span class="tocnumber">2.1</span> <span class="toctext">C++ Type</span></a></li>
<li class="toclevel-2 tocsection-4"><a href="#UE4_C.2B.2B_Type"><span class="tocnumber">2.2</span> <span class="toctext">UE4 C++ Type</span></a></li>
<li class="toclevel-2 tocsection-5"><a href="#Pointer_to_UObject_Class"><span class="tocnumber">2.3</span> <span class="toctext">Pointer to UObject Class</span></a></li>
<li class="toclevel-2 tocsection-6"><a href="#Pointer_to_AActor_Class"><span class="tocnumber">2.4</span> <span class="toctext">Pointer to AActor Class</span></a></li>
<li class="toclevel-2 tocsection-7"><a href="#Pointer_to_Blueprint_Class"><span class="tocnumber">2.5</span> <span class="toctext">Pointer to Blueprint Class</span></a></li>
<li class="toclevel-2 tocsection-8"><a href="#UE4.2B.2B_Enums"><span class="tocnumber">2.6</span> <span class="toctext">UE4++ Enums</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-9"><a href="#USTRUCTS.28.29_or_Pointers_to_UStructs"><span class="tocnumber">3</span> <span class="toctext">USTRUCTS() or Pointers to UStructs</span></a>
<ul>
<li class="toclevel-2 tocsection-10"><a href="#Sample_USTRUCT.28.29"><span class="tocnumber">3.1</span> <span class="toctext">Sample USTRUCT()</span></a></li>
<li class="toclevel-2 tocsection-11"><a href="#Array_of_USTRUCTS.28.29"><span class="tocnumber">3.2</span> <span class="toctext">Array of USTRUCTS()</span></a></li>
<li class="toclevel-2 tocsection-12"><a href="#The_Pointer_Version"><span class="tocnumber">3.3</span> <span class="toctext">The Pointer Version</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-13"><a href="#Blueprint-Accessible_Dynamic_Arrays"><span class="tocnumber">4</span> <span class="toctext">Blueprint-Accessible Dynamic Arrays</span></a></li>
<li class="toclevel-1 tocsection-14"><a href="#Core_Functions"><span class="tocnumber">5</span> <span class="toctext">Core Functions</span></a>
<ul>
<li class="toclevel-2 tocsection-15"><a href="#.Add.28.29"><span class="tocnumber">5.1</span> <span class="toctext">.Add()</span></a></li>
<li class="toclevel-2 tocsection-16"><a href="#.Remove.28.29"><span class="tocnumber">5.2</span> <span class="toctext">.Remove()</span></a></li>
<li class="toclevel-2 tocsection-17"><a href="#.RemoveAt.28.29"><span class="tocnumber">5.3</span> <span class="toctext">.RemoveAt()</span></a></li>
<li class="toclevel-2 tocsection-18"><a href="#.Num.28.29"><span class="tocnumber">5.4</span> <span class="toctext">.Num()</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-19"><a href="#"><span class="tocnumber">6</span> <span class="toctext"></span></a></li>
<li class="toclevel-1 tocsection-20"><a href="#For_Loop_Syntax"><span class="tocnumber">7</span> <span class="toctext">For Loop Syntax</span></a></li>
<li class="toclevel-1 tocsection-21"><a href="#For_Loop_Syntax_For_AActor.2A"><span class="tocnumber">8</span> <span class="toctext">For Loop Syntax For AActor*</span></a></li>
<li class="toclevel-1 tocsection-22"><a href="#_2"><span class="tocnumber">9</span> <span class="toctext"></span></a></li>
<li class="toclevel-1 tocsection-23"><a href="#Index_Safety_Check_To_Prevent_Crashes"><span class="tocnumber">10</span> <span class="toctext">Index Safety Check To Prevent Crashes</span></a>
<ul>
<li class="toclevel-2 tocsection-24"><a href="#.IsValidIndex.28.29"><span class="tocnumber">10.1</span> <span class="toctext">.IsValidIndex()</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-25"><a href="#Awesome_Functions"><span class="tocnumber">11</span> <span class="toctext">Awesome Functions</span></a>
<ul>
<li class="toclevel-2 tocsection-26"><a href="#.Empty.28.29"><span class="tocnumber">11.1</span> <span class="toctext">.Empty()</span></a></li>
<li class="toclevel-2 tocsection-27"><a href="#.Append.28.29"><span class="tocnumber">11.2</span> <span class="toctext">.Append()</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-28"><a href="#Multi_Dimensional_Arrays"><span class="tocnumber">12</span> <span class="toctext">Multi Dimensional Arrays</span></a>
<ul>
<li class="toclevel-2 tocsection-29"><a href="#.H"><span class="tocnumber">12.1</span> <span class="toctext">.H</span></a></li>
<li class="toclevel-2 tocsection-30"><a href="#.CPP"><span class="tocnumber">12.2</span> <span class="toctext">.CPP</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-31"><a href="#Summary"><span class="tocnumber">13</span> <span class="toctext">Summary</span></a></li>
</ul>
</div>

<h2><span class="mw-headline" id="Overview">Overview</span></h2>
<p><i>Original Author:</i> <a href="/User:Rama" title="User:Rama">Rama</a> (<a href="/User_talk:Rama" title="User talk:Rama">talk</a>)
</p><p>Dear Community,
</p><p>Here is my introduction to UE4 C++ Dynamic Arrays!
</p><p>They're awesome!
</p>
<h2><span class="mw-headline" id="Available_Types">Available Types</span></h2>
<ul>
<li>Any C++ type
</li>
<li>Any UE4 C++ type, such as FLinearColor
</li>
<li>Pointer to a UObject or an AActor extending class
</li>
<li>Pointer to Blueprint Classes
</li>
<li>UE4++ Enums
</li>
<li>USTRUCTS() or USTRUCT() pointers
</li>
</ul>
<h3><span class="mw-headline" id="C.2B.2B_Type">C++ Type</span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1">TArray<span class="sy1">&lt;</span><span class="kw4">uint8</span><span class="sy1">&gt;</span> BinaryArray<span class="sy4">;</span></pre></div></div>
<h3><span class="mw-headline" id="UE4_C.2B.2B_Type">UE4 C++ Type</span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1">TArray<span class="sy1">&lt;</span>FRotator<span class="sy1">&gt;</span> StarLocations<span class="sy4">;</span></pre></div></div>
<h3><span class="mw-headline" id="Pointer_to_UObject_Class">Pointer to UObject Class</span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1">TArray<span class="sy1">&lt;</span>USkeletalMeshComponent<span class="sy2">*</span><span class="sy1">&gt;</span> Weapons<span class="sy4">;</span></pre></div></div>
<h3><span class="mw-headline" id="Pointer_to_AActor_Class">Pointer to AActor Class</span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1">TArray<span class="sy1">&lt;</span>ACharacter<span class="sy2">*</span><span class="sy1">&gt;</span> FrogsThatAreHopping<span class="sy4">;</span></pre></div></div>
<h3><span class="mw-headline" id="Pointer_to_Blueprint_Class">Pointer to Blueprint Class</span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1">TArray<span class="sy1">&lt;</span>UClass<span class="sy2">*</span><span class="sy1">&gt;</span> FlowerBlueprints<span class="sy4">;</span></pre></div></div>
<h3><span class="mw-headline" id="UE4.2B.2B_Enums">UE4++ Enums</span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1">TArray<span class="sy1">&lt;</span>EKeys<span class="sy4">::</span><span class="me2">Type</span><span class="sy1">&gt;</span> GameControlKeys<span class="sy4">;</span></pre></div></div>
<h2><span class="mw-headline" id="USTRUCTS.28.29_or_Pointers_to_UStructs">USTRUCTS() or Pointers to UStructs</span></h2>
<p>Let's say you have defined this USTRUCT()
</p>
<h3><span class="mw-headline" id="Sample_USTRUCT.28.29">Sample USTRUCT()</span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1">USTRUCT<span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="kw4">struct</span> FFlowerStruct
<span class="br0">&#123;</span>
	GENERATED_USTRUCT_BODY<span class="br0">&#40;</span><span class="br0">&#41;</span>
&#160;
	UPROPERTY<span class="br0">&#40;</span><span class="br0">&#41;</span>
	<span class="kw4">int32</span> NumPetals<span class="sy4">;</span>
&#160;
	UPROPERTY<span class="br0">&#40;</span><span class="br0">&#41;</span>
	FLinearColor Color<span class="sy4">;</span>
&#160;
	UPROPERTY<span class="br0">&#40;</span><span class="br0">&#41;</span>
	FVector Scale3D<span class="sy4">;</span>
&#160;
	<span class="kw4">void</span> SetFlowerColor<span class="br0">&#40;</span><span class="kw4">const</span> FLinearColor<span class="sy3">&amp;</span> NewColor<span class="br0">&#41;</span>
	<span class="br0">&#123;</span>
		Color <span class="sy1">=</span> NewColor<span class="sy4">;</span>
	<span class="br0">&#125;</span>
&#160;
	FJoyStruct<span class="br0">&#40;</span><span class="br0">&#41;</span>
	<span class="br0">&#123;</span>
		NumPetals 	<span class="sy1">=</span> <span class="nu0">5</span><span class="sy4">;</span>
		Scale3D 		<span class="sy1">=</span> FVector<span class="br0">&#40;</span><span class="nu0">1</span>,<span class="nu0">1</span>,<span class="nu0">1</span><span class="br0">&#41;</span><span class="sy4">;</span>
		Color 			<span class="sy1">=</span> FLinearColor<span class="br0">&#40;</span><span class="nu0">1</span>,<span class="nu0">0</span>,<span class="nu0">0</span>,<span class="nu0">1</span><span class="br0">&#41;</span><span class="sy4">;</span>
	<span class="br0">&#125;</span>
<span class="br0">&#125;</span><span class="sy4">;</span></pre></div></div>
<h3><span class="mw-headline" id="Array_of_USTRUCTS.28.29">Array of USTRUCTS()</span></h3>
<p>You can make an array of FFlowerStructs as follows!
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1">TArray<span class="sy1">&lt;</span>FFlowerStruct<span class="sy1">&gt;</span> Flowers<span class="sy4">;</span></pre></div></div>
<h3><span class="mw-headline" id="The_Pointer_Version">The Pointer Version</span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1">TArray<span class="sy1">&lt;</span>FFlowerStruct<span class="sy2">*</span><span class="sy1">&gt;</span> FlowerPtrs<span class="sy4">;</span></pre></div></div>
<h2><span class="mw-headline" id="Blueprint-Accessible_Dynamic_Arrays">Blueprint-Accessible Dynamic Arrays</span></h2>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="coMULTI">/** All of the Flowers that are currently on their Day Cycle in the World. */</span>
UPROPERTY<span class="br0">&#40;</span>EditAnywhere, BlueprintReadWrite, Category<span class="sy1">=</span><span class="st0">&quot;Flowers&quot;</span><span class="br0">&#41;</span>
TArray<span class="sy1">&lt;</span>AFlower<span class="sy2">*</span><span class="sy1">&gt;</span> FlowersOnDayCycle<span class="sy4">;</span></pre></div></div>
<h2><span class="mw-headline" id="Core_Functions">Core Functions</span></h2>
<h3><span class="mw-headline" id=".Add.28.29">.Add()</span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1">TArray<span class="sy1">&lt;</span>FVector<span class="sy1">&gt;</span> StarLocations<span class="sy4">;</span>
StarLocations.<span class="me1">Add</span><span class="br0">&#40;</span>FVector<span class="br0">&#40;</span><span class="nu0">0</span>,<span class="nu0">0</span>,<span class="nu0">2000000</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span></pre></div></div>
<h3><span class="mw-headline" id=".Remove.28.29">.Remove()</span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="co1">//Defined in the .h file: TArray&lt;ACharacter*&gt; FrogsThatAreHopping;</span>
FrogsThatAreHopping.<span class="me1">Remove</span><span class="br0">&#40;</span>FrogThatIsTired<span class="br0">&#41;</span><span class="sy4">;</span></pre></div></div>
<h3><span class="mw-headline" id=".RemoveAt.28.29">.RemoveAt()</span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="co1">//Remove first frog from the array</span>
FrogsThatAreHopping.<span class="me1">RemoveAt</span><span class="br0">&#40;</span><span class="nu0">0</span><span class="br0">&#41;</span><span class="sy4">;</span></pre></div></div>
<h3><span class="mw-headline" id=".Num.28.29">.Num()</span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1">ClientMessage<span class="br0">&#40;</span><span class="st0">&quot;Total Flower Count&quot;</span><span class="br0">&#41;</span><span class="sy4">;</span>
ClientMessage<span class="br0">&#40;</span>FString<span class="sy4">::</span><span class="me2">FromInt</span><span class="br0">&#40;</span>Flowers.<span class="me1">Num</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span></pre></div></div>
<h2><span class="mw-headline" id=""></span></h2>
<h2><span class="mw-headline" id="For_Loop_Syntax">For Loop Syntax</span></h2>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="co1">// defined in .h TArray&lt;FVector&gt; StarLocations;</span>
&#160;
<span class="co1">//Print Star Locations</span>
<span class="kw1">for</span><span class="br0">&#40;</span><span class="kw4">int32</span> b<span class="sy4">;</span> b <span class="sy1">&lt;</span> StarLocations.<span class="me1">Num</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span> b<span class="sy2">++</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>
   ClientMessage<span class="br0">&#40;</span>StarLocations<span class="br0">&#91;</span>b<span class="br0">&#93;</span>.<span class="me1">ToString</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span>
<span class="br0">&#125;</span></pre></div></div>
<h2><span class="mw-headline" id="For_Loop_Syntax_For_AActor.2A">For Loop Syntax For AActor*</span></h2>
<p>I am including very rigorous <b>pointer safety</b> and <b>AActor validity</b> checks,
</p><p>because you dont want your whole game to crash to desktop, ever&#160;:)
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="co1">//defined in the .h&#160;: TArray&lt;AFlower*&gt; Flowers;</span>
&#160;
<span class="co1">//Print out each flower's UE4 Name</span>
&#160;
AFlower<span class="sy2">*</span> CurFlower <span class="sy1">=</span> <span class="kw2">NULL</span><span class="sy4">;</span>
<span class="kw1">for</span><span class="br0">&#40;</span><span class="kw4">int32</span> b<span class="sy4">;</span> b <span class="sy1">&lt;</span> Flowers.<span class="me1">Num</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span> b<span class="sy2">++</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>
	CurFlower <span class="sy1">=</span> Flowers<span class="br0">&#91;</span>b<span class="br0">&#93;</span><span class="sy4">;</span>
	<span class="kw1">if</span><span class="br0">&#40;</span><span class="sy3">!</span>CurFlower<span class="br0">&#41;</span> <span class="kw1">continue</span><span class="sy4">;</span>
	<span class="kw1">if</span><span class="br0">&#40;</span><span class="sy3">!</span>CurFlower<span class="sy2">-</span><span class="sy1">&gt;</span>IsValidLowLevel<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">continue</span><span class="sy4">;</span>
	<span class="co1">//~~~~~~~~~~~~~~~~~~~~~~</span>
&#160;
	ClientMessage<span class="br0">&#40;</span>CurFlower<span class="sy2">-</span><span class="sy1">&gt;</span>GetName<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span>
<span class="br0">&#125;</span></pre></div></div>
<h2><span class="mw-headline" id="_2"></span></h2>
<h2><span class="mw-headline" id="Index_Safety_Check_To_Prevent_Crashes">Index Safety Check To Prevent Crashes</span></h2>
<h3><span class="mw-headline" id=".IsValidIndex.28.29">.IsValidIndex()</span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="co1">//defined in .h</span>
<span class="co1">//TArray&lt;float&gt; RandomPercentValues;</span>
&#160;
<span class="co1">//Pick a random Percent Value!</span>
<span class="kw4">float</span> AMyPlayerController<span class="sy4">::</span><span class="me2">GetRandomPercenttValue</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>
	<span class="co1">//Negative array indicies are always invalid </span>
	<span class="co1">//		and will always cause a crash if you try to use one.</span>
&#160;
	<span class="co1">//Use IsValidIndex to verify the index is in range </span>
	<span class="co1">//		***before*** you try to access the array!</span>
&#160;
	<span class="kw4">const</span> <span class="kw4">int32</span> RandomIndex <span class="sy1">=</span> FMath<span class="sy4">::</span><span class="me2">RandRange</span><span class="br0">&#40;</span><span class="sy2">-</span><span class="nu0">50</span>,<span class="nu0">10000</span><span class="br0">&#41;</span><span class="sy4">;</span> 
&#160;
	<span class="co1">//Safety Check</span>
	<span class="kw1">if</span><span class="br0">&#40;</span> <span class="sy3">!</span> RandomPercentValues.<span class="me1">IsValidIndex</span><span class="br0">&#40;</span>RandomIndex<span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="kw1">return</span> <span class="sy2">-</span><span class="nu0">1</span><span class="sy4">;</span>
	<span class="co1">//~~~~~~~~~~~~~~~~~~~~~~~</span>
&#160;
	<span class="kw1">return</span> RandomPercentValues<span class="br0">&#91;</span>RandomIndex<span class="br0">&#93;</span><span class="sy4">;</span>
<span class="br0">&#125;</span></pre></div></div>
<h2><span class="mw-headline" id="Awesome_Functions">Awesome Functions</span></h2>
<h3><span class="mw-headline" id=".Empty.28.29">.Empty()</span></h3>
<p>Empty array of all current contents
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="co1">//It's nighttime, no more hopping;</span>
FrogsThatAreHopping.<span class="me1">Empty</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span></pre></div></div>
<h3><span class="mw-headline" id=".Append.28.29">.Append()</span></h3>
<p>Add the entire contents of one array to the end of another!
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1">TArray<span class="sy1">&lt;</span>FVector<span class="sy1">&gt;</span> StarLocations<span class="sy4">;</span>
TArray<span class="sy1">&lt;</span>FVector<span class="sy1">&gt;</span> CloudLocations<span class="sy4">;</span>
TArray<span class="sy1">&lt;</span>FVector<span class="sy1">&gt;</span> StarAndCloudLocations<span class="sy4">;</span>
&#160;
StarLocations.<span class="me1">Add</span><span class="br0">&#40;</span><span class="nu0">0</span>,<span class="nu0">0</span>,<span class="nu0">200000</span><span class="br0">&#41;</span><span class="sy4">;</span>
CloudLocations.<span class="me1">Add</span><span class="br0">&#40;</span><span class="nu0">50</span>,<span class="nu0">25</span>,<span class="nu0">11000</span><span class="br0">&#41;</span><span class="sy4">;</span>
CloudLocations.<span class="me1">Add</span><span class="br0">&#40;</span><span class="nu0">50</span>,<span class="nu0">25</span>,<span class="nu0">22200</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
StarAndCloudLocations.<span class="me1">Append</span><span class="br0">&#40;</span>StarLocations<span class="br0">&#41;</span><span class="sy4">;</span>
StarAndCloudLocations.<span class="me1">Append</span><span class="br0">&#40;</span>CloudLocations<span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
<span class="co1">//Print out all Locations</span>
<span class="kw1">for</span><span class="br0">&#40;</span><span class="kw4">int32</span> b<span class="sy4">;</span> b <span class="sy1">&lt;</span> StarAndCloudLocations.<span class="me1">Num</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span> b<span class="sy2">++</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>
	ClientMessage<span class="br0">&#40;</span>StarAndCloudLocations<span class="br0">&#91;</span>b<span class="br0">&#93;</span>.<span class="me1">ToString</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span>
<span class="br0">&#125;</span></pre></div></div>
<h2><span class="mw-headline" id="Multi_Dimensional_Arrays">Multi Dimensional Arrays</span></h2>
<p>To make a 2 or higher dimensional array,
</p><p>wrap the array in a UStruct, and then make an Array of the UStructs
</p>
<h3><span class="mw-headline" id=".H">.H</span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1">USTRUCT<span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="kw4">struct</span> FFlowerField
<span class="br0">&#123;</span>
	GENERATED_USTRUCT_BODY<span class="br0">&#40;</span><span class="br0">&#41;</span>
&#160;
	UPROPERTY<span class="br0">&#40;</span><span class="br0">&#41;</span>
	TArraY<span class="sy1">&lt;</span>FFlowerStruct<span class="sy1">&gt;</span> Flowers<span class="sy4">;</span>
&#160;
	FFlowerField<span class="br0">&#40;</span><span class="br0">&#41;</span>
	<span class="br0">&#123;</span>
	<span class="br0">&#125;</span>
<span class="br0">&#125;</span><span class="sy4">;</span>
&#160;
<span class="co1">//All Flower Fields on The Island</span>
TArray<span class="sy1">&lt;</span>FFlowerField<span class="sy1">&gt;</span> FlowerFields<span class="sy4">;</span></pre></div></div>
<h3><span class="mw-headline" id=".CPP">.CPP</span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="co1">//Then to Access a single Flower</span>
&#160;
<span class="co1">//Number of petals on the 3rd flower in 1st field</span>
<span class="kw1">if</span><span class="br0">&#40;</span>FlowerFields.<span class="me1">Num</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy1">&gt;</span> <span class="nu0">0</span><span class="br0">&#41;</span>
  <span class="kw1">if</span><span class="br0">&#40;</span>FlowerFields.<span class="me1">Flowers</span>.<span class="me1">IsValidIndex</span><span class="br0">&#40;</span><span class="nu0">2</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
       ClientMessage<span class="br0">&#40;</span>FString<span class="sy4">::</span><span class="me2">FromInt</span><span class="br0">&#40;</span>FlowerFields<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>.<span class="me1">Flowers</span><span class="br0">&#91;</span><span class="nu0">2</span><span class="br0">&#93;</span><span class="br0">&#41;</span>.<span class="me1">NumPetals</span><span class="br0">&#41;</span><span class="sy4">;</span></pre></div></div>
<h2><span class="mw-headline" id="Summary">Summary</span></h2>
<p>I hope you have enjoyed my description of UE4 C++ Dynamic Arrays!
</p><p>Enjoy!
</p><p><a href="/User:Rama" title="User:Rama">Rama</a> (<a href="/User_talk:Rama" title="User talk:Rama">talk</a>)
</p>
<!-- 
NewPP limit report
CPU time usage: 0.129 seconds
Real time usage: 0.133 seconds
Preprocessor visited node count: 311/1000000
Preprocessor generated node count: 548/1000000
Post‚Äêexpand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
-->
</div>								<div class="printfooter">
				Retrieved from "<a href="https://wiki.unrealengine.com/index.php?title=Dynamic_Arrays&amp;oldid=1555">https://wiki.unrealengine.com/index.php?title=Dynamic_Arrays&amp;oldid=1555</a>"				</div>
												<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="/Special:Categories" title="Special:Categories">Category</a>: <ul><li><a href="/Category:Code" title="Category:Code">Code</a></li></ul></div></div>												<div class="visualClear"></div>
							</div>
		</div>
		<div id="mw-navigation">
			<h2>Navigation menu</h2>
			<div id="mw-head">
				<div id="p-personal" role="navigation" class="" aria-labelledby="p-personal-label">
	<h3 id="p-personal-label">Personal tools</h3>
	<ul>
<li id="pt-createaccount"><a href="/index.php?title=Special:UserLogin&amp;returnto=Dynamic+Arrays&amp;returntoquery=diff%3D1555%26oldid%3Dprev&amp;type=signup">Create account</a></li><li id="pt-login"><a href="/index.php?title=Special:UserLogin&amp;returnto=Dynamic+Arrays&amp;returntoquery=diff%3D1555%26oldid%3Dprev" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>	</ul>
</div>
				<div id="left-navigation">
					<div id="p-namespaces" role="navigation" class="vectorTabs" aria-labelledby="p-namespaces-label">
	<h3 id="p-namespaces-label">Namespaces</h3>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="/Dynamic_Arrays"  title="View the content page [c]" accesskey="c">Page</a></span></li>
					<li  id="ca-talk"><span><a href="/Talk:Dynamic_Arrays"  title="Discussion about the content page [t]" accesskey="t">Discussion</a></span></li>
			</ul>
</div>
<div id="p-variants" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-variants-label">
	<h3 id="mw-vector-current-variant">
		</h3>
	<h3 id="p-variants-label"><span>Variants</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
				</div>
				<div id="right-navigation">
					<div id="p-views" role="navigation" class="vectorTabs" aria-labelledby="p-views-label">
	<h3 id="p-views-label">Views</h3>
	<ul>
					<li id="ca-view" class="selected"><span><a href="/Dynamic_Arrays" >Read</a></span></li>
					<li id="ca-viewsource"><span><a href="/index.php?title=Dynamic_Arrays&amp;action=edit&amp;oldid=1555"  title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="/index.php?title=Dynamic_Arrays&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">View history</a></span></li>
			</ul>
</div>
<div id="p-cactions" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-cactions-label">
	<h3 id="p-cactions-label"><span>Actions</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
<div id="p-search" role="search">
	<h3><label for="searchInput">Search</label></h3>
	<form action="/index.php" id="searchform">
				<div id="simpleSearch">
						<input name="search" placeholder="Search" title="Search Epic Wiki [f]" accesskey="f" id="searchInput" />						<button type="submit" name="button" title="Search the pages for this text" id="searchButton"><img src="/skins/vector/images/search-ltr.png?303" alt="Search" width="12" height="13" /></button>								<input type='hidden' name="title" value="Special:Search"/>
		</div>
	</form>
</div>
				</div>
			</div>
			<div id="mw-panel">
					<div id="p-logo" role="banner"><a style="background-image: url(/images/WikiLogo_uev2.png);" href="/Main_Page"  title="Visit the main page"></a></div>
				<div class="portal" role="navigation" id='p-navigation' aria-labelledby='p-navigation-label'>
	<h3 id='p-navigation-label'>Navigation</h3>
	<div class="body">
		<ul>
			<li id="n-mainpage"><a href="/Main_Page" title="Visit the main page [z]" accesskey="z">Main Page</a></li>
			<li id="n-Tutorials"><a href="/Category:Tutorials">Tutorials</a></li>
			<li id="n-Videos"><a href="/Videos">Videos</a></li>
			<li id="n-Plug-ins"><a href="/Category:Plug-ins">Plug-ins</a></li>
			<li id="n-Code"><a href="/Category:Code">Code</a></li>
			<li id="n-Games"><a href="/Category:Games">Games</a></li>
			<li id="n-Unreal-Tournament"><a href="/Category:Unreal_Tournament">Unreal Tournament</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-tb' aria-labelledby='p-tb-label'>
	<h3 id='p-tb-label'>Tools</h3>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="/Special:WhatLinksHere/Dynamic_Arrays" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="/Special:RecentChangesLinked/Dynamic_Arrays" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-specialpages"><a href="/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li id="t-print"><a href="/index.php?title=Dynamic_Arrays&amp;diff=1555&amp;oldid=prev&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>
			<li id="t-permalink"><a href="/index.php?title=Dynamic_Arrays&amp;oldid=1555" title="Permanent link to this revision of the page">Permanent link</a></li>
			<li id="t-info"><a href="/index.php?title=Dynamic_Arrays&amp;action=info">Page information</a></li>
		</ul>
	</div>
</div>
			</div>
		</div>
		<div id="footer" role="contentinfo">
										<ul id="footer-icons" class="noprint">
					<li id="footer-copyrightico">
						<div name="copyright">&#169; 2004-2014, Epic Games, Inc. All rights reserved. Epic Games, Unreal, Unreal Engine, Unreal Tournament, and their respective logos are Epic's trademarks or registered trademarks in the US and elsewhere.</div>
					</li>
					<li id="footer-termsofuseico">
						<div name="termsofuse"><a href="http://epicgames.com/tou" target="_blank">Terms of Use</a></div>
					</li>
					<li id="footer-privacynoticeico">
						<div name="privacynotice"><a href="http://epicgames.com/privacynotice" target="_blank">Privacy Policy</a></div>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>
		<script>/*<![CDATA[*/window.jQuery && jQuery.ready();/*]]>*/</script><script>if(window.mw){
mw.loader.state({"site":"loading","user":"ready","user.groups":"ready"});
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.searchSuggest","skins.vector.collapsibleNav"],null,true);
}</script>
<script src="https://wiki.unrealengine.com/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=vector&amp;*"></script>
<!-- Served in 0.249 secs. -->
	</body>
</html>
